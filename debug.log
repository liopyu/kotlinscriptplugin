[Log] Loading classes from binary file...
[Log] Loaded 96581 classes from binary file.
[Log] Loading typing suggestions from JSON file...
[Log] Loaded 3214 typing suggestions.
[Log] ðŸŸ¡ DEBUG: Matched Method â€” getAttachedOrElse
[Log] ðŸ”¹ Original method key: getAttachedOrElse(@org.jetbrains.annotations.Nullable("") A,net.fabricmc.fabric.api.attachment.v1.AttachmentType<A>)
[Log] ðŸ”¹ MethodSignature: getAttachedOrElse(A,net.fabricmc.fabric.api.attachment.v1.AttachmentType<A>)
[Log] ðŸ”¹ Parsed rawArgsMatch: [
  "(@org.jetbrains.annotations.Nullable(\"\") A,net.fabricmc.fabric.api.attachment.v1.AttachmentType<A>)",
  "@org.jetbrains.annotations.Nullable(\"\") A,net.fabricmc.fabric.api.attachment.v1.AttachmentType<A>"
]
[Log] ðŸ”¹ Extracted raw args: @org.jetbrains.annotations.Nullable("") A,net.fabricmc.fabric.api.attachment.v1.AttachmentType<A>
[Log] ðŸ”¹ Split arguments: [
  "@org.jetbrains.annotations.Nullable(\"\") A",
  "net.fabricmc.fabric.api.attachment.v1.AttachmentType<A>"
]
[Log] ðŸ”¹ Extracted and stripped args: [
  "A",
  "net.fabricmc.fabric.api.attachment.v1.AttachmentType<A>"
]
[Log] ðŸ”¹ Return type (raw): A
[Log] ðŸ”¹ Return type (stripped): A
[Log] ðŸ”¹ Full method object: {
  "modifiers": "public",
  "returns": "A",
  "args": [
    "@org.jetbrains.annotations.Nullable(\"\") A",
    "net.fabricmc.fabric.api.attachment.v1.AttachmentType<A>"
  ]
}
[Log] Loaded 56647 member suggestions.
[Log] Loaded 108981 classes from JSON file.
[Log] Typing suggestions loaded: 3214
[Log] Semantic Tokens Provider Initialized
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=16, character=10
[Log] [prepareContext] Successfully prepared context.
[Log] [prepareContext] Found iNode type: navigation_expression, [prepareContext] Found iNode text: Minecraft.c
[Log] [provideCompletionItems] iNode (navigation_expression) type: navigation_expression, [provideCompletionItems] iNode (navigation_expression) text: Minecraft.c
[Log] [provideCompletionItems] No scope found for current position.
[Log] [resolveBaseType] Starting base type resolution...
[Log] [resolveBaseType] No lastChild found, using simple_identifier from current node
[Log] [resolveBaseType] No scoped variable found, falling back to resolveBaseTypeFromImports
[Log] [resolveBaseTypeFromImports] Starting import-based resolution...
[Log] [resolveBaseTypeFromImports] Checking 1 potential imports...
[Log] [resolveBaseTypeFromImports] Resolved from import: Minecraft
[Log] [resolveBaseType] Call is directly off class, setting isStaticClassCall = true
[Log] [resolveBaseType] Final resolved baseType: net.minecraft.client.Minecraft
[Log] [resolveBaseType] isCallOffClass: true
[Log] [resolveBaseType] isStaticClassCall: true
[Log] [resolveTypingsFromSuffixes] BaseType at start: net.minecraft.client.Minecraft
[Log] [resolveTypingsFromSuffixes] isCallOffClass: true
[Log] [resolveTypingsFromSuffixes] Found suffix: c, isMethodCall: false
[Log] [resolveTypingsFromSuffixes] Found refined suffixes: [
  "c"
]
[Log] [resolveTypingsFromSuffixes] Static call context, checking baseType: net.minecraft.client.Minecraft
[Log] [resolveTypingsFromSuffixes] Found TypingsMember: net.minecraft.client.Minecraft
[Log] [resolveTypingsFromSuffixes] Final resolved currentType: net.minecraft.client.Minecraft
[Log] [provideCompletionItems] Variable is not Companion, forcing instance context.
[Log] [provideCompletionItems] Found TypingsMember: net.minecraft.client.Minecraft, preparing completions.
[Log] [buildCompletionItems] Building completions for: net.minecraft.client.Minecraft
[Log] [buildCompletionItems] isCallOffClass: false, isStaticClassCall: false
[Log] [buildCompletionItems] Built 328 completion items.
[Log] updating tokens
[Log] <!DOCTYPE html>
		  <html lang="en">
		  <head>
			<meta charset="UTF-8">
			<style>
			  
		#class-search-bar {
		display: flex;
		align-items: center;
		gap: 8px;
		padding: 8px 12px;
		background: #2b2b2b;
		border-bottom: 1px solid #444;
		z-index: 150;
		position: relative;
		}

		#class-search-results {
		position: absolute;
		top: 100%;
		left: 0;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: 100%;
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
		}

			  
	@keyframes pop {
	  0% { transform: scale(1); }
	  50% { transform: scale(1.04); }
	  100% { transform: scale(1.035); }
	}
			  
	body {
	  margin: 0;
	  font-family: Consolas, monospace;
	  background: #1e1e1e;
	  color: rgb(210, 222, 174);
	  padding: 16px;
	}
			  
	#main {
	  cursor: text;
	  flex-grow: 1;
	  height: 100vh;
	  overflow: visible;
	  padding: 16px;
	  box-sizing: border-box;
	}
  
	.kw {
	  color: rgba(76, 156, 222, 0.93);
	  font-weight: bold;
	}
  
	.annotation {
	  color: rgb(238, 223, 154);
	}
  
	.type-link {
	  color: rgba(108, 220, 175, 0.92);
	  cursor: default;
	  text-decoration: none;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link {
	  cursor: pointer;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link:hover {
	  color: rgba(158, 234, 203, 0.92);
	  text-decoration: underline;
	  display: inline-block;
	  animation: pop 0.17s ease-in-out forwards;
	}
  
	.ident {
	  color: #9cdcfe;
	}
  
	.method-name {
	  color: rgba(231, 229, 151, 0.92);
	}
  
	.arg-name {
	  color: rgba(104, 208, 237, 0.97);
	}
  
	.line {
	  opacity: 0;
	  transition: opacity 0.05s linear;
	}
			  
	.highlight-box {
	  position: absolute;
	  background-color: rgba(255, 160, 80, 0.35);
	  border-radius: 2px;
	}
  
	.highlight-box.current {
	  outline: 1px solid #3794ff;
	  background-color: rgba(55, 148, 255, 0.3);
	  box-shadow: 0 0 4px #3794ff99;
	  z-index: 60;
	}
  
	.debug-overlay-wrapper {
	  position: fixed;
	  pointer-events: none;
	  z-index: 10000;
	}
  
	.debug-overlay-wrapper > div {
	  position: absolute;
	  pointer-events: auto;
	  background: rgba(255, 0, 0, 0.2);
	}
  
	#search-bar button {
	  background-color: rgba(30, 30, 30, 0.27);
	  color: white;
	  border: 1px solid #555;
	  border-radius: 6px;
	  padding: 4px 8px;
	  cursor: pointer;
	  transition: all 0.2s ease-in-out;
	  font-size: 13px;
	  font-family: inherit;
	  user-select: none;
	}
  
	#search-bar button.active {
	  background-color: #094771;
	  border-color: #3794ff;
	  color: white;
	}
			</style>
		  </head>
		  <body>
		    
	<div id="class-search-bar" style="
	  display: flex;
	  align-items: center;
	  gap: 8px;
	  padding: 8px 12px;
	  background: #2b2b2b;
	  border-bottom: 1px solid #444;
	  z-index: 150;
	">
	  <input id="class-search-input" type="text" placeholder="Search classes..." style="
		flex-grow: 1;
		padding: 6px 10px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 6px;
		font-family: inherit;
	  ">
	  <div id="class-search-results" style="
		position: absolute;
		top: 42px;
		left: 12px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: calc(100% - 24px);
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
	  "></div>
	</div>
			
	<div id="search-bar" style="
	  display: none;
	  position: fixed;
	  top: 8px;
	  right: 8px;
	  z-index: 200;
	  background: #2c2c2c;
	  padding: 4px 8px;
	  border-radius: 4px;
	  display: flex;
	  gap: 4px;
	  align-items: center;
	">
	  <input type="text" id="search-input" placeholder="Search..." style="
		width: 180px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		padding: 4px;
	  " />
	  <button id="toggle-case" title="Match Case">Aa</button>
	  <button id="toggle-whole" title="Whole Word">â›¶</button>
	  <button id="toggle-regex" title="Regex">*</button>
	  <span id="search-count" style="
		color: white;
		min-width: 30px;
		text-align: center;
		font-size: 13px;
		font-family: Arial, sans-serif;
	  ">No Results</span>
	  <button id="search-prev" title="Previous Match">â†‘</button>
	  <button id="search-next" title="Next Match">â†“</button>
	  <button id="search-close" title="Close Search" style="margin-left: auto;">âœ–</button>
	</div>
			
  <div id="console-output" style="
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 160px;
    background: #111;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    overflow-y: auto;
    padding: 24px 10px 6px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
    <button id="console-minimize" style="
      position: absolute;
      top: 4px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 2px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">â€“</button>
    <div id="console-content"></div>
  </div>

  <div id="console-bar" style="
    display: none;
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 24px;
    background: #222;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
  	<span>Console</span>
    <button id="console-restore" style="
      position: absolute;
      top: 1px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 1px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">+</button>
  </div>
			<div id="main"><div class="line" data-text="package kotlin" style="opacity: 0;"><div><span class="kw">package</span> <span class="type-link" data-package="kotlin"><span class="ident">kotlin</span></span></div><br></div>
<div class="line" data-text=" class Long {" style="opacity: 0;"><div id="current-class"> <span class="kw">class</span> <span class="ident">Long</span> {</div></div>
<div class="line" data-text="fun compareTo(arg0: Byte): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">compareTo</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Byte">Byte</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun compareTo(arg0: Short): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">compareTo</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Short">Short</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun compareTo(arg0: Int): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">compareTo</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun compareTo(arg0: Long): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">compareTo</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Long">Long</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun compareTo(arg0: Float): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">compareTo</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Float">Float</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun compareTo(arg0: Double): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">compareTo</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Double">Double</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun plus(arg0: Byte): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">plus</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Byte">Byte</span>): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="fun plus(arg0: Short): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">plus</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Short">Short</span>): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="fun plus(arg0: Int): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">plus</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="fun plus(arg0: Long): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">plus</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Long">Long</span>): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="fun plus(arg0: Float): Float {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">plus</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Float">Float</span>): <span class="type-link" data-type="kotlin.Float">Float</span> {};</div></div>
<div class="line" data-text="fun plus(arg0: Double): Double {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">plus</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Double">Double</span>): <span class="type-link" data-type="kotlin.Double">Double</span> {};</div></div>
<div class="line" data-text="fun minus(arg0: Byte): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">minus</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Byte">Byte</span>): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="fun minus(arg0: Short): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">minus</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Short">Short</span>): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="fun minus(arg0: Int): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">minus</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="fun minus(arg0: Long): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">minus</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Long">Long</span>): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="fun minus(arg0: Float): Float {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">minus</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Float">Float</span>): <span class="type-link" data-type="kotlin.Float">Float</span> {};</div></div>
<div class="line" data-text="fun minus(arg0: Double): Double {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">minus</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Double">Double</span>): <span class="type-link" data-type="kotlin.Double">Double</span> {};</div></div>
<div class="line" data-text="fun times(arg0: Byte): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">times</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Byte">Byte</span>): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="fun times(arg0: Short): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">times</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Short">Short</span>): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="fun times(arg0: Int): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">times</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="fun times(arg0: Long): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">times</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Long">Long</span>): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="fun times(arg0: Float): Float {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">times</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Float">Float</span>): <span class="type-link" data-type="kotlin.Float">Float</span> {};</div></div>
<div class="line" data-text="fun times(arg0: Double): Double {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">times</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Double">Double</span>): <span class="type-link" data-type="kotlin.Double">Double</span> {};</div></div>
<div class="line" data-text="fun div(arg0: Byte): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">div</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Byte">Byte</span>): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="fun div(arg0: Short): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">div</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Short">Short</span>): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="fun div(arg0: Int): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">div</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="fun div(arg0: Long): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">div</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Long">Long</span>): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="fun div(arg0: Float): Float {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">div</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Float">Float</span>): <span class="type-link" data-type="kotlin.Float">Float</span> {};</div></div>
<div class="line" data-text="fun div(arg0: Double): Double {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">div</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Double">Double</span>): <span class="type-link" data-type="kotlin.Double">Double</span> {};</div></div>
<div class="line" data-text="fun rem(arg0: Byte): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">rem</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Byte">Byte</span>): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="fun rem(arg0: Short): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">rem</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Short">Short</span>): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="fun rem(arg0: Int): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">rem</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="fun rem(arg0: Long): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">rem</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Long">Long</span>): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="fun rem(arg0: Float): Float {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">rem</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Float">Float</span>): <span class="type-link" data-type="kotlin.Float">Float</span> {};</div></div>
<div class="line" data-text="fun rem(arg0: Double): Double {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">rem</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Double">Double</span>): <span class="type-link" data-type="kotlin.Double">Double</span> {};</div></div>
<div class="line" data-text="fun inc(): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">inc</span>(): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="fun dec(): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">dec</span>(): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="fun unaryPlus(): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">unaryPlus</span>(): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="fun unaryMinus(): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">unaryMinus</span>(): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="fun rangeTo(arg0: Byte): LongRange {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">rangeTo</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Byte">Byte</span>): <span class="type-link" data-type="kotlin.ranges.LongRange">LongRange</span> {};</div></div>
<div class="line" data-text="fun rangeTo(arg0: Short): LongRange {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">rangeTo</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Short">Short</span>): <span class="type-link" data-type="kotlin.ranges.LongRange">LongRange</span> {};</div></div>
<div class="line" data-text="fun rangeTo(arg0: Int): LongRange {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">rangeTo</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="kotlin.ranges.LongRange">LongRange</span> {};</div></div>
<div class="line" data-text="fun rangeTo(arg0: Long): LongRange {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">rangeTo</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Long">Long</span>): <span class="type-link" data-type="kotlin.ranges.LongRange">LongRange</span> {};</div></div>
<div class="line" data-text="fun rangeUntil(arg0: Byte): LongRange {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">rangeUntil</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Byte">Byte</span>): <span class="type-link" data-type="kotlin.ranges.LongRange">LongRange</span> {};</div></div>
<div class="line" data-text="fun rangeUntil(arg0: Short): LongRange {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">rangeUntil</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Short">Short</span>): <span class="type-link" data-type="kotlin.ranges.LongRange">LongRange</span> {};</div></div>
<div class="line" data-text="fun rangeUntil(arg0: Int): LongRange {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">rangeUntil</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="kotlin.ranges.LongRange">LongRange</span> {};</div></div>
<div class="line" data-text="fun rangeUntil(arg0: Long): LongRange {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">rangeUntil</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Long">Long</span>): <span class="type-link" data-type="kotlin.ranges.LongRange">LongRange</span> {};</div></div>
<div class="line" data-text="fun shl(arg0: Int): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">shl</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="fun shr(arg0: Int): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">shr</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="fun ushr(arg0: Int): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">ushr</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="fun and(arg0: Long): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">and</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Long">Long</span>): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="fun or(arg0: Long): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">or</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Long">Long</span>): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="fun xor(arg0: Long): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">xor</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Long">Long</span>): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="fun inv(): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">inv</span>(): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="fun toByte(): Byte {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">toByte</span>(): <span class="type-link" data-type="kotlin.Byte">Byte</span> {};</div></div>
<div class="line" data-text="fun toChar(): Char {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">toChar</span>(): <span class="type-link" data-type="kotlin.Char">Char</span> {};</div></div>
<div class="line" data-text="fun toShort(): Short {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">toShort</span>(): <span class="type-link" data-type="kotlin.Short">Short</span> {};</div></div>
<div class="line" data-text="fun toInt(): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">toInt</span>(): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun toLong(): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">toLong</span>(): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="fun toFloat(): Float {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">toFloat</span>(): <span class="type-link" data-type="kotlin.Float">Float</span> {};</div></div>
<div class="line" data-text="fun toDouble(): Double {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">toDouble</span>(): <span class="type-link" data-type="kotlin.Double">Double</span> {};</div></div>
<div class="line" data-text="fun toString(): String {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">toString</span>(): <span class="type-link" data-type="kotlin.String">String</span> {};</div></div>
<div class="line" data-text="fun equals(arg0: Any): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">equals</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Any">Any</span>): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="}" style="opacity: 0;"><div>}</div></div>
<div class="line" data-text="" style="opacity: 0;"></div></div></div>
			
	<div id="hover-preview" style="
	  position: fixed;
	  overflow: auto;
	  background: #2b2b2b;
	  color: #ddd;
	  border: 1px solid #444;
	  border-radius: 6px;
	  font-size: 13px;
	  padding: 8px;
	  display: none;
	  z-index: 50;
	  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.5);
	  pointer-events: auto;
	">
	  <div id="hover-content"></div>
	</div>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/constantsPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/consoleViewer.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/classPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/searchBarViewer.js"></script>
		  </body>
		  </html>
[Log] <!DOCTYPE html>
		  <html lang="en">
		  <head>
			<meta charset="UTF-8">
			<style>
			  
		#class-search-bar {
		display: flex;
		align-items: center;
		gap: 8px;
		padding: 8px 12px;
		background: #2b2b2b;
		border-bottom: 1px solid #444;
		z-index: 150;
		position: relative;
		}

		#class-search-results {
		position: absolute;
		top: 100%;
		left: 0;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: 100%;
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
		}

			  
	@keyframes pop {
	  0% { transform: scale(1); }
	  50% { transform: scale(1.04); }
	  100% { transform: scale(1.035); }
	}
			  
	body {
	  margin: 0;
	  font-family: Consolas, monospace;
	  background: #1e1e1e;
	  color: rgb(210, 222, 174);
	  padding: 16px;
	}
			  
	#main {
	  cursor: text;
	  flex-grow: 1;
	  height: 100vh;
	  overflow: visible;
	  padding: 16px;
	  box-sizing: border-box;
	}
  
	.kw {
	  color: rgba(76, 156, 222, 0.93);
	  font-weight: bold;
	}
  
	.annotation {
	  color: rgb(238, 223, 154);
	}
  
	.type-link {
	  color: rgba(108, 220, 175, 0.92);
	  cursor: default;
	  text-decoration: none;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link {
	  cursor: pointer;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link:hover {
	  color: rgba(158, 234, 203, 0.92);
	  text-decoration: underline;
	  display: inline-block;
	  animation: pop 0.17s ease-in-out forwards;
	}
  
	.ident {
	  color: #9cdcfe;
	}
  
	.method-name {
	  color: rgba(231, 229, 151, 0.92);
	}
  
	.arg-name {
	  color: rgba(104, 208, 237, 0.97);
	}
  
	.line {
	  opacity: 0;
	  transition: opacity 0.05s linear;
	}
			  
	.highlight-box {
	  position: absolute;
	  background-color: rgba(255, 160, 80, 0.35);
	  border-radius: 2px;
	}
  
	.highlight-box.current {
	  outline: 1px solid #3794ff;
	  background-color: rgba(55, 148, 255, 0.3);
	  box-shadow: 0 0 4px #3794ff99;
	  z-index: 60;
	}
  
	.debug-overlay-wrapper {
	  position: fixed;
	  pointer-events: none;
	  z-index: 10000;
	}
  
	.debug-overlay-wrapper > div {
	  position: absolute;
	  pointer-events: auto;
	  background: rgba(255, 0, 0, 0.2);
	}
  
	#search-bar button {
	  background-color: rgba(30, 30, 30, 0.27);
	  color: white;
	  border: 1px solid #555;
	  border-radius: 6px;
	  padding: 4px 8px;
	  cursor: pointer;
	  transition: all 0.2s ease-in-out;
	  font-size: 13px;
	  font-family: inherit;
	  user-select: none;
	}
  
	#search-bar button.active {
	  background-color: #094771;
	  border-color: #3794ff;
	  color: white;
	}
			</style>
		  </head>
		  <body>
		    
	<div id="class-search-bar" style="
	  display: flex;
	  align-items: center;
	  gap: 8px;
	  padding: 8px 12px;
	  background: #2b2b2b;
	  border-bottom: 1px solid #444;
	  z-index: 150;
	">
	  <input id="class-search-input" type="text" placeholder="Search classes..." style="
		flex-grow: 1;
		padding: 6px 10px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 6px;
		font-family: inherit;
	  ">
	  <div id="class-search-results" style="
		position: absolute;
		top: 42px;
		left: 12px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: calc(100% - 24px);
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
	  "></div>
	</div>
			
	<div id="search-bar" style="
	  display: none;
	  position: fixed;
	  top: 8px;
	  right: 8px;
	  z-index: 200;
	  background: #2c2c2c;
	  padding: 4px 8px;
	  border-radius: 4px;
	  display: flex;
	  gap: 4px;
	  align-items: center;
	">
	  <input type="text" id="search-input" placeholder="Search..." style="
		width: 180px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		padding: 4px;
	  " />
	  <button id="toggle-case" title="Match Case">Aa</button>
	  <button id="toggle-whole" title="Whole Word">â›¶</button>
	  <button id="toggle-regex" title="Regex">*</button>
	  <span id="search-count" style="
		color: white;
		min-width: 30px;
		text-align: center;
		font-size: 13px;
		font-family: Arial, sans-serif;
	  ">No Results</span>
	  <button id="search-prev" title="Previous Match">â†‘</button>
	  <button id="search-next" title="Next Match">â†“</button>
	  <button id="search-close" title="Close Search" style="margin-left: auto;">âœ–</button>
	</div>
			
  <div id="console-output" style="
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 160px;
    background: #111;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    overflow-y: auto;
    padding: 24px 10px 6px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
    <button id="console-minimize" style="
      position: absolute;
      top: 4px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 2px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">â€“</button>
    <div id="console-content"></div>
  </div>

  <div id="console-bar" style="
    display: none;
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 24px;
    background: #222;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
  	<span>Console</span>
    <button id="console-restore" style="
      position: absolute;
      top: 1px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 1px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">+</button>
  </div>
			<div id="main"><div class="line" data-text="package java.lang" style="opacity: 0;"><div><span class="kw">package</span> <span class="type-link" data-package="java"><span class="ident">java</span></span><span>.</span><span class="type-link" data-package="java.lang"><span class="ident">lang</span></span></div><br></div>
<div class="line" data-text=" interface Comparable<T> {" style="opacity: 0;"><div id="current-class"> <span class="kw">interface</span> <span class="ident">Comparable</span>&lt;<span class="ident">T</span>&gt; {</div></div>
<div class="line" data-text="fun compareTo(arg0: T): Int;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">compareTo</span>(<span class="arg-name">arg0</span>: <span class="ident">T</span>): <span class="type-link" data-type="kotlin.Int">Int</span>;</div></div>
<div class="line" data-text="}" style="opacity: 0;"><div>}</div></div>
<div class="line" data-text="" style="opacity: 0;"></div></div></div>
			
	<div id="hover-preview" style="
	  position: fixed;
	  overflow: auto;
	  background: #2b2b2b;
	  color: #ddd;
	  border: 1px solid #444;
	  border-radius: 6px;
	  font-size: 13px;
	  padding: 8px;
	  display: none;
	  z-index: 50;
	  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.5);
	  pointer-events: auto;
	">
	  <div id="hover-content"></div>
	</div>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/constantsPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/consoleViewer.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/classPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/searchBarViewer.js"></script>
		  </body>
		  </html>
[Log] <!DOCTYPE html>
		  <html lang="en">
		  <head>
			<meta charset="UTF-8">
			<style>
			  
		#class-search-bar {
		display: flex;
		align-items: center;
		gap: 8px;
		padding: 8px 12px;
		background: #2b2b2b;
		border-bottom: 1px solid #444;
		z-index: 150;
		position: relative;
		}

		#class-search-results {
		position: absolute;
		top: 100%;
		left: 0;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: 100%;
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
		}

			  
	@keyframes pop {
	  0% { transform: scale(1); }
	  50% { transform: scale(1.04); }
	  100% { transform: scale(1.035); }
	}
			  
	body {
	  margin: 0;
	  font-family: Consolas, monospace;
	  background: #1e1e1e;
	  color: rgb(210, 222, 174);
	  padding: 16px;
	}
			  
	#main {
	  cursor: text;
	  flex-grow: 1;
	  height: 100vh;
	  overflow: visible;
	  padding: 16px;
	  box-sizing: border-box;
	}
  
	.kw {
	  color: rgba(76, 156, 222, 0.93);
	  font-weight: bold;
	}
  
	.annotation {
	  color: rgb(238, 223, 154);
	}
  
	.type-link {
	  color: rgba(108, 220, 175, 0.92);
	  cursor: default;
	  text-decoration: none;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link {
	  cursor: pointer;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link:hover {
	  color: rgba(158, 234, 203, 0.92);
	  text-decoration: underline;
	  display: inline-block;
	  animation: pop 0.17s ease-in-out forwards;
	}
  
	.ident {
	  color: #9cdcfe;
	}
  
	.method-name {
	  color: rgba(231, 229, 151, 0.92);
	}
  
	.arg-name {
	  color: rgba(104, 208, 237, 0.97);
	}
  
	.line {
	  opacity: 0;
	  transition: opacity 0.05s linear;
	}
			  
	.highlight-box {
	  position: absolute;
	  background-color: rgba(255, 160, 80, 0.35);
	  border-radius: 2px;
	}
  
	.highlight-box.current {
	  outline: 1px solid #3794ff;
	  background-color: rgba(55, 148, 255, 0.3);
	  box-shadow: 0 0 4px #3794ff99;
	  z-index: 60;
	}
  
	.debug-overlay-wrapper {
	  position: fixed;
	  pointer-events: none;
	  z-index: 10000;
	}
  
	.debug-overlay-wrapper > div {
	  position: absolute;
	  pointer-events: auto;
	  background: rgba(255, 0, 0, 0.2);
	}
  
	#search-bar button {
	  background-color: rgba(30, 30, 30, 0.27);
	  color: white;
	  border: 1px solid #555;
	  border-radius: 6px;
	  padding: 4px 8px;
	  cursor: pointer;
	  transition: all 0.2s ease-in-out;
	  font-size: 13px;
	  font-family: inherit;
	  user-select: none;
	}
  
	#search-bar button.active {
	  background-color: #094771;
	  border-color: #3794ff;
	  color: white;
	}
			</style>
		  </head>
		  <body>
		    
	<div id="class-search-bar" style="
	  display: flex;
	  align-items: center;
	  gap: 8px;
	  padding: 8px 12px;
	  background: #2b2b2b;
	  border-bottom: 1px solid #444;
	  z-index: 150;
	">
	  <input id="class-search-input" type="text" placeholder="Search classes..." style="
		flex-grow: 1;
		padding: 6px 10px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 6px;
		font-family: inherit;
	  ">
	  <div id="class-search-results" style="
		position: absolute;
		top: 42px;
		left: 12px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: calc(100% - 24px);
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
	  "></div>
	</div>
			
	<div id="search-bar" style="
	  display: none;
	  position: fixed;
	  top: 8px;
	  right: 8px;
	  z-index: 200;
	  background: #2c2c2c;
	  padding: 4px 8px;
	  border-radius: 4px;
	  display: flex;
	  gap: 4px;
	  align-items: center;
	">
	  <input type="text" id="search-input" placeholder="Search..." style="
		width: 180px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		padding: 4px;
	  " />
	  <button id="toggle-case" title="Match Case">Aa</button>
	  <button id="toggle-whole" title="Whole Word">â›¶</button>
	  <button id="toggle-regex" title="Regex">*</button>
	  <span id="search-count" style="
		color: white;
		min-width: 30px;
		text-align: center;
		font-size: 13px;
		font-family: Arial, sans-serif;
	  ">No Results</span>
	  <button id="search-prev" title="Previous Match">â†‘</button>
	  <button id="search-next" title="Next Match">â†“</button>
	  <button id="search-close" title="Close Search" style="margin-left: auto;">âœ–</button>
	</div>
			
  <div id="console-output" style="
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 160px;
    background: #111;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    overflow-y: auto;
    padding: 24px 10px 6px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
    <button id="console-minimize" style="
      position: absolute;
      top: 4px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 2px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">â€“</button>
    <div id="console-content"></div>
  </div>

  <div id="console-bar" style="
    display: none;
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 24px;
    background: #222;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
  	<span>Console</span>
    <button id="console-restore" style="
      position: absolute;
      top: 1px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 1px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">+</button>
  </div>
			<div id="main"><div class="line" data-text="package net.minecraft.client.renderer.entity" style="opacity: 0;"><div><span class="kw">package</span> <span class="type-link" data-package="net"><span class="ident">net</span></span><span>.</span><span class="type-link" data-package="net.minecraft"><span class="ident">minecraft</span></span><span>.</span><span class="type-link" data-package="net.minecraft.client"><span class="ident">client</span></span><span>.</span><span class="type-link" data-package="net.minecraft.client.renderer"><span class="ident">renderer</span></span><span>.</span><span class="type-link" data-package="net.minecraft.client.renderer.entity"><span class="ident">entity</span></span></div><br></div>
<div class="line" data-text=" class EntityRenderDispatcher : ResourceManagerReloadListener, PreparableReloadListener {" style="opacity: 0;"><div id="current-class"> <span class="kw">class</span> <span class="ident">EntityRenderDispatcher</span> : <span class="type-link" data-type="net.minecraft.server.packs.resources.ResourceManagerReloadListener">ResourceManagerReloadListener</span>, <span class="type-link" data-type="net.minecraft.server.packs.resources.PreparableReloadListener">PreparableReloadListener</span> {</div></div>
<div class="line" data-text="private val renderers: Map<EntityType<?>, EntityRenderer<?>>;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">renderers</span>: <span class="type-link" data-type="java.util.Map">Map</span>&lt;<span class="type-link" data-type="net.minecraft.world.entity.EntityType">EntityType</span>&lt;<span class="type-link" data-type="?">?</span>&gt;, <span class="type-link" data-type="net.minecraft.client.renderer.entity.EntityRenderer">EntityRenderer</span>&lt;<span class="type-link" data-type="?">?</span>&gt;&gt;;</div></div>
<div class="line" data-text="private val playerRenderers: Map<PlayerSkin$Model, EntityRenderer<Player>>;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">playerRenderers</span>: <span class="type-link" data-type="java.util.Map">Map</span>&lt;<span class="type-link" data-type="net.minecraft.client.resources.PlayerSkin$Model">PlayerSkin$Model</span>, <span class="type-link" data-type="net.minecraft.client.renderer.entity.EntityRenderer">EntityRenderer</span>&lt;<span class="type-link" data-type="?extendsnet.minecraft.world.entity.player.Player">Player</span>&gt;&gt;;</div></div>
<div class="line" data-text="final val textureManager: TextureManager;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">final</span> <span class="kw">val</span> <span class="ident">textureManager</span>: <span class="type-link" data-type="net.minecraft.client.renderer.texture.TextureManager">TextureManager</span>;</div></div>
<div class="line" data-text="private val level: Level;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">level</span>: <span class="type-link" data-type="net.minecraft.world.level.Level">Level</span>;</div></div>
<div class="line" data-text="val camera: Camera;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">val</span> <span class="ident">camera</span>: <span class="type-link" data-type="net.minecraft.client.Camera">Camera</span>;</div></div>
<div class="line" data-text="private val cameraOrientation: Quaternionf;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">cameraOrientation</span>: <span class="type-link" data-type="org.joml.Quaternionf">Quaternionf</span>;</div></div>
<div class="line" data-text="val crosshairPickEntity: Entity;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">val</span> <span class="ident">crosshairPickEntity</span>: <span class="type-link" data-type="net.minecraft.world.entity.Entity">Entity</span>;</div></div>
<div class="line" data-text="private final val itemRenderer: ItemRenderer;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">itemRenderer</span>: <span class="type-link" data-type="net.minecraft.client.renderer.entity.ItemRenderer">ItemRenderer</span>;</div></div>
<div class="line" data-text="private final val blockRenderDispatcher: BlockRenderDispatcher;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">blockRenderDispatcher</span>: <span class="type-link" data-type="net.minecraft.client.renderer.block.BlockRenderDispatcher">BlockRenderDispatcher</span>;</div></div>
<div class="line" data-text="private final val itemInHandRenderer: ItemInHandRenderer;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">itemInHandRenderer</span>: <span class="type-link" data-type="net.minecraft.client.renderer.ItemInHandRenderer">ItemInHandRenderer</span>;</div></div>
<div class="line" data-text="private final val font: Font;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">font</span>: <span class="type-link" data-type="net.minecraft.client.gui.Font">Font</span>;</div></div>
<div class="line" data-text="final val options: Options;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">final</span> <span class="kw">val</span> <span class="ident">options</span>: <span class="type-link" data-type="net.minecraft.client.Options">Options</span>;</div></div>
<div class="line" data-text="private final val entityModels: EntityModelSet;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">entityModels</span>: <span class="type-link" data-type="net.minecraft.client.model.geom.EntityModelSet">EntityModelSet</span>;</div></div>
<div class="line" data-text="private val shouldRenderShadow: Boolean;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">shouldRenderShadow</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>;</div></div>
<div class="line" data-text="private val renderHitBoxes: Boolean;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">renderHitBoxes</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>;</div></div>
<div class="line" data-text="fun getPackedLightCoords(arg0: E, arg1: Float): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getPackedLightCoords</span>(<span class="arg-name">arg0</span>: <span class="ident">E</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="kotlin.Float">Float</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun getRenderer(arg0: T): EntityRenderer<in T> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getRenderer</span>(<span class="arg-name">arg0</span>: <span class="ident">T</span>): <span class="type-link" data-type="net.minecraft.client.renderer.entity.EntityRenderer">EntityRenderer</span>&lt;<span class="kw">in</span> <span class="ident">T</span>&gt; {};</div></div>
<div class="line" data-text="fun prepare(arg0: Camera, arg1: Entity, arg2: Level): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">prepare</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.client.Camera">Camera</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.world.entity.Entity">Entity</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.world.level.Level">Level</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun overrideCameraOrientation(arg0: Quaternionf): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">overrideCameraOrientation</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="org.joml.Quaternionf">Quaternionf</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun setRenderShadow(arg0: Boolean): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">setRenderShadow</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun setRenderHitBoxes(arg0: Boolean): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">setRenderHitBoxes</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun shouldRenderHitBoxes(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">shouldRenderHitBoxes</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun shouldRender(arg0: E, arg1: Double, arg2: Double, arg3: Double, arg4: Frustum): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">shouldRender</span>(<span class="arg-name">arg0</span>: <span class="ident">E</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="kotlin.Double">Double</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="kotlin.Double">Double</span>, <span class="arg-name">arg3</span>: <span class="type-link" data-type="kotlin.Double">Double</span>, <span class="arg-name">arg4</span>: <span class="type-link" data-type="net.minecraft.client.renderer.culling.Frustum">Frustum</span>): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun render(arg0: E, arg1: PoseStack, arg2: Double, arg3: Double, arg4: Double, arg5: Float, arg6: Float, arg7: Int, arg8: MultiBufferSource): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">render</span>(<span class="arg-name">arg0</span>: <span class="ident">E</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="com.mojang.blaze3d.vertex.PoseStack">PoseStack</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="kotlin.Double">Double</span>, <span class="arg-name">arg3</span>: <span class="type-link" data-type="kotlin.Double">Double</span>, <span class="arg-name">arg4</span>: <span class="type-link" data-type="kotlin.Double">Double</span>, <span class="arg-name">arg5</span>: <span class="type-link" data-type="kotlin.Float">Float</span>, <span class="arg-name">arg6</span>: <span class="type-link" data-type="kotlin.Float">Float</span>, <span class="arg-name">arg7</span>: <span class="type-link" data-type="kotlin.Int">Int</span>, <span class="arg-name">arg8</span>: <span class="type-link" data-type="net.minecraft.client.renderer.MultiBufferSource">MultiBufferSource</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="private fun renderFlame(arg0: PoseStack, arg1: MultiBufferSource, arg2: Entity, arg3: Quaternionf): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">renderFlame</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="com.mojang.blaze3d.vertex.PoseStack">PoseStack</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.client.renderer.MultiBufferSource">MultiBufferSource</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.world.entity.Entity">Entity</span>, <span class="arg-name">arg3</span>: <span class="type-link" data-type="org.joml.Quaternionf">Quaternionf</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun setLevel(arg0: Level): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">setLevel</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.world.level.Level">Level</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun distanceToSqr(arg0: Entity): Double {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">distanceToSqr</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.world.entity.Entity">Entity</span>): <span class="type-link" data-type="kotlin.Double">Double</span> {};</div></div>
<div class="line" data-text="fun distanceToSqr(arg0: Double, arg1: Double, arg2: Double): Double {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">distanceToSqr</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Double">Double</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="kotlin.Double">Double</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="kotlin.Double">Double</span>): <span class="type-link" data-type="kotlin.Double">Double</span> {};</div></div>
<div class="line" data-text="fun cameraOrientation(): Quaternionf {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">cameraOrientation</span>(): <span class="type-link" data-type="org.joml.Quaternionf">Quaternionf</span> {};</div></div>
<div class="line" data-text="fun getItemInHandRenderer(): ItemInHandRenderer {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getItemInHandRenderer</span>(): <span class="type-link" data-type="net.minecraft.client.renderer.ItemInHandRenderer">ItemInHandRenderer</span> {};</div></div>
<div class="line" data-text="fun onResourceManagerReload(arg0: ResourceManager): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">onResourceManagerReload</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.server.packs.resources.ResourceManager">ResourceManager</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun reload(arg0: Executor, arg1: Executor, arg2: PreparableReloadListener$PreparationBarrier, arg3: ResourceManager, arg4: ProfilerFiller, arg5: ProfilerFiller): CompletableFuture<Void> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">reload</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.concurrent.Executor">Executor</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="java.util.concurrent.Executor">Executor</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.server.packs.resources.PreparableReloadListener$PreparationBarrier">PreparableReloadListener$PreparationBarrier</span>, <span class="arg-name">arg3</span>: <span class="type-link" data-type="net.minecraft.server.packs.resources.ResourceManager">ResourceManager</span>, <span class="arg-name">arg4</span>: <span class="type-link" data-type="net.minecraft.util.profiling.ProfilerFiller">ProfilerFiller</span>, <span class="arg-name">arg5</span>: <span class="type-link" data-type="net.minecraft.util.profiling.ProfilerFiller">ProfilerFiller</span>): <span class="type-link" data-type="java.util.concurrent.CompletableFuture">CompletableFuture</span>&lt;<span class="type-link" data-type="java.lang.Void">Void</span>&gt; {};</div></div>
<div class="line" data-text="private fun method_29490(arg0: ResourceManager, arg1: ProfilerFiller): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_29490</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.server.packs.resources.ResourceManager">ResourceManager</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.util.profiling.ProfilerFiller">ProfilerFiller</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun getName(): String {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getName</span>(): <span class="type-link" data-type="java.lang.String">String</span> {};</div></div>
<div class="line" data-text="companion object {" style="opacity: 0;"><br><div style="padding-left: 2em"><span class="kw">companion object</span> {</div></div>
<div class="line" data-text="@JvmStaticprivate final val SHADOW_RENDER_TYPE: RenderType;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">SHADOW_RENDER_TYPE</span>: <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val MAX_SHADOW_RADIUS: Float;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">MAX_SHADOW_RADIUS</span>: <span class="type-link" data-type="kotlin.Float">Float</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val SHADOW_POWER_FALLOFF_Y: Float;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">SHADOW_POWER_FALLOFF_Y</span>: <span class="type-link" data-type="kotlin.Float">Float</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate fun renderServerSideHitbox(arg0: PoseStack, arg1: MultiBufferSource, arg2: Entity): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">renderServerSideHitbox</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="com.mojang.blaze3d.vertex.PoseStack">PoseStack</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.client.renderer.MultiBufferSource">MultiBufferSource</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.world.entity.Entity">Entity</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun getServerSideEntity(arg0: Entity): Entity {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">getServerSideEntity</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.world.entity.Entity">Entity</span>): <span class="type-link" data-type="net.minecraft.world.entity.Entity">Entity</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun renderHitbox(arg0: PoseStack, arg1: VertexConsumer, arg2: Float, arg3: Float, arg4: Float, arg5: Float, arg6: Entity): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">renderHitbox</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="com.mojang.blaze3d.vertex.PoseStack">PoseStack</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="com.mojang.blaze3d.vertex.VertexConsumer">VertexConsumer</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="kotlin.Float">Float</span>, <span class="arg-name">arg3</span>: <span class="type-link" data-type="kotlin.Float">Float</span>, <span class="arg-name">arg4</span>: <span class="type-link" data-type="kotlin.Float">Float</span>, <span class="arg-name">arg5</span>: <span class="type-link" data-type="kotlin.Float">Float</span>, <span class="arg-name">arg6</span>: <span class="type-link" data-type="net.minecraft.world.entity.Entity">Entity</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun renderVector(arg0: PoseStack, arg1: VertexConsumer, arg2: Int, arg3: Vec3, arg4: Vector3f): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">renderVector</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="com.mojang.blaze3d.vertex.PoseStack">PoseStack</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="com.mojang.blaze3d.vertex.VertexConsumer">VertexConsumer</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="kotlin.Int">Int</span>, <span class="arg-name">arg3</span>: <span class="type-link" data-type="net.minecraft.world.phys.Vec3">Vec3</span>, <span class="arg-name">arg4</span>: <span class="type-link" data-type="org.joml.Vector3f">Vector3f</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun fireVertex(arg0: PoseStack$Pose, arg1: VertexConsumer, arg2: Float, arg3: Float, arg4: Float, arg5: Float, arg6: Float): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">fireVertex</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="com.mojang.blaze3d.vertex.PoseStack$Pose">PoseStack$Pose</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="com.mojang.blaze3d.vertex.VertexConsumer">VertexConsumer</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="kotlin.Float">Float</span>, <span class="arg-name">arg3</span>: <span class="type-link" data-type="kotlin.Float">Float</span>, <span class="arg-name">arg4</span>: <span class="type-link" data-type="kotlin.Float">Float</span>, <span class="arg-name">arg5</span>: <span class="type-link" data-type="kotlin.Float">Float</span>, <span class="arg-name">arg6</span>: <span class="type-link" data-type="kotlin.Float">Float</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun renderShadow(arg0: PoseStack, arg1: Float, arg2: Float, arg3: Float, arg4: MultiBufferSource, arg5: Entity, arg6: LevelReader): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">renderShadow</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="com.mojang.blaze3d.vertex.PoseStack">PoseStack</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="kotlin.Float">Float</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="kotlin.Float">Float</span>, <span class="arg-name">arg3</span>: <span class="type-link" data-type="kotlin.Float">Float</span>, <span class="arg-name">arg4</span>: <span class="type-link" data-type="net.minecraft.client.renderer.MultiBufferSource">MultiBufferSource</span>, <span class="arg-name">arg5</span>: <span class="type-link" data-type="net.minecraft.world.entity.Entity">Entity</span>, <span class="arg-name">arg6</span>: <span class="type-link" data-type="net.minecraft.world.level.LevelReader">LevelReader</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun renderBlockShadow(arg0: PoseStack$Pose, arg1: VertexConsumer, arg2: Double, arg3: Double, arg4: Double, arg5: Float, arg6: Float, arg7: BlockPos, arg8: LevelReader, arg9: ChunkAccess): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">renderBlockShadow</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="com.mojang.blaze3d.vertex.PoseStack$Pose">PoseStack$Pose</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="com.mojang.blaze3d.vertex.VertexConsumer">VertexConsumer</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="kotlin.Double">Double</span>, <span class="arg-name">arg3</span>: <span class="type-link" data-type="kotlin.Double">Double</span>, <span class="arg-name">arg4</span>: <span class="type-link" data-type="kotlin.Double">Double</span>, <span class="arg-name">arg5</span>: <span class="type-link" data-type="kotlin.Float">Float</span>, <span class="arg-name">arg6</span>: <span class="type-link" data-type="kotlin.Float">Float</span>, <span class="arg-name">arg7</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg8</span>: <span class="type-link" data-type="net.minecraft.world.level.LevelReader">LevelReader</span>, <span class="arg-name">arg9</span>: <span class="type-link" data-type="net.minecraft.world.level.chunk.ChunkAccess">ChunkAccess</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun shadowVertex(arg0: PoseStack$Pose, arg1: VertexConsumer, arg2: Float, arg3: Float, arg4: Float, arg5: Float, arg6: Float, arg7: Int): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">shadowVertex</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="com.mojang.blaze3d.vertex.PoseStack$Pose">PoseStack$Pose</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="com.mojang.blaze3d.vertex.VertexConsumer">VertexConsumer</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="kotlin.Float">Float</span>, <span class="arg-name">arg3</span>: <span class="type-link" data-type="kotlin.Float">Float</span>, <span class="arg-name">arg4</span>: <span class="type-link" data-type="kotlin.Float">Float</span>, <span class="arg-name">arg5</span>: <span class="type-link" data-type="kotlin.Float">Float</span>, <span class="arg-name">arg6</span>: <span class="type-link" data-type="kotlin.Float">Float</span>, <span class="arg-name">arg7</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="}" style="opacity: 0;"><div style="padding-left: 2em">}</div></div>
<div class="line" data-text="}" style="opacity: 0;"><div>}</div></div>
<div class="line" data-text="" style="opacity: 0;"></div></div></div>
			
	<div id="hover-preview" style="
	  position: fixed;
	  overflow: auto;
	  background: #2b2b2b;
	  color: #ddd;
	  border: 1px solid #444;
	  border-radius: 6px;
	  font-size: 13px;
	  padding: 8px;
	  display: none;
	  z-index: 50;
	  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.5);
	  pointer-events: auto;
	">
	  <div id="hover-content"></div>
	</div>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/constantsPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/consoleViewer.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/classPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/searchBarViewer.js"></script>
		  </body>
		  </html>
[Log] <!DOCTYPE html>
		  <html lang="en">
		  <head>
			<meta charset="UTF-8">
			<style>
			  
		#class-search-bar {
		display: flex;
		align-items: center;
		gap: 8px;
		padding: 8px 12px;
		background: #2b2b2b;
		border-bottom: 1px solid #444;
		z-index: 150;
		position: relative;
		}

		#class-search-results {
		position: absolute;
		top: 100%;
		left: 0;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: 100%;
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
		}

			  
	@keyframes pop {
	  0% { transform: scale(1); }
	  50% { transform: scale(1.04); }
	  100% { transform: scale(1.035); }
	}
			  
	body {
	  margin: 0;
	  font-family: Consolas, monospace;
	  background: #1e1e1e;
	  color: rgb(210, 222, 174);
	  padding: 16px;
	}
			  
	#main {
	  cursor: text;
	  flex-grow: 1;
	  height: 100vh;
	  overflow: visible;
	  padding: 16px;
	  box-sizing: border-box;
	}
  
	.kw {
	  color: rgba(76, 156, 222, 0.93);
	  font-weight: bold;
	}
  
	.annotation {
	  color: rgb(238, 223, 154);
	}
  
	.type-link {
	  color: rgba(108, 220, 175, 0.92);
	  cursor: default;
	  text-decoration: none;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link {
	  cursor: pointer;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link:hover {
	  color: rgba(158, 234, 203, 0.92);
	  text-decoration: underline;
	  display: inline-block;
	  animation: pop 0.17s ease-in-out forwards;
	}
  
	.ident {
	  color: #9cdcfe;
	}
  
	.method-name {
	  color: rgba(231, 229, 151, 0.92);
	}
  
	.arg-name {
	  color: rgba(104, 208, 237, 0.97);
	}
  
	.line {
	  opacity: 0;
	  transition: opacity 0.05s linear;
	}
			  
	.highlight-box {
	  position: absolute;
	  background-color: rgba(255, 160, 80, 0.35);
	  border-radius: 2px;
	}
  
	.highlight-box.current {
	  outline: 1px solid #3794ff;
	  background-color: rgba(55, 148, 255, 0.3);
	  box-shadow: 0 0 4px #3794ff99;
	  z-index: 60;
	}
  
	.debug-overlay-wrapper {
	  position: fixed;
	  pointer-events: none;
	  z-index: 10000;
	}
  
	.debug-overlay-wrapper > div {
	  position: absolute;
	  pointer-events: auto;
	  background: rgba(255, 0, 0, 0.2);
	}
  
	#search-bar button {
	  background-color: rgba(30, 30, 30, 0.27);
	  color: white;
	  border: 1px solid #555;
	  border-radius: 6px;
	  padding: 4px 8px;
	  cursor: pointer;
	  transition: all 0.2s ease-in-out;
	  font-size: 13px;
	  font-family: inherit;
	  user-select: none;
	}
  
	#search-bar button.active {
	  background-color: #094771;
	  border-color: #3794ff;
	  color: white;
	}
			</style>
		  </head>
		  <body>
		    
	<div id="class-search-bar" style="
	  display: flex;
	  align-items: center;
	  gap: 8px;
	  padding: 8px 12px;
	  background: #2b2b2b;
	  border-bottom: 1px solid #444;
	  z-index: 150;
	">
	  <input id="class-search-input" type="text" placeholder="Search classes..." style="
		flex-grow: 1;
		padding: 6px 10px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 6px;
		font-family: inherit;
	  ">
	  <div id="class-search-results" style="
		position: absolute;
		top: 42px;
		left: 12px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: calc(100% - 24px);
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
	  "></div>
	</div>
			
	<div id="search-bar" style="
	  display: none;
	  position: fixed;
	  top: 8px;
	  right: 8px;
	  z-index: 200;
	  background: #2c2c2c;
	  padding: 4px 8px;
	  border-radius: 4px;
	  display: flex;
	  gap: 4px;
	  align-items: center;
	">
	  <input type="text" id="search-input" placeholder="Search..." style="
		width: 180px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		padding: 4px;
	  " />
	  <button id="toggle-case" title="Match Case">Aa</button>
	  <button id="toggle-whole" title="Whole Word">â›¶</button>
	  <button id="toggle-regex" title="Regex">*</button>
	  <span id="search-count" style="
		color: white;
		min-width: 30px;
		text-align: center;
		font-size: 13px;
		font-family: Arial, sans-serif;
	  ">No Results</span>
	  <button id="search-prev" title="Previous Match">â†‘</button>
	  <button id="search-next" title="Next Match">â†“</button>
	  <button id="search-close" title="Close Search" style="margin-left: auto;">âœ–</button>
	</div>
			
  <div id="console-output" style="
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 160px;
    background: #111;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    overflow-y: auto;
    padding: 24px 10px 6px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
    <button id="console-minimize" style="
      position: absolute;
      top: 4px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 2px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">â€“</button>
    <div id="console-content"></div>
  </div>

  <div id="console-bar" style="
    display: none;
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 24px;
    background: #222;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
  	<span>Console</span>
    <button id="console-restore" style="
      position: absolute;
      top: 1px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 1px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">+</button>
  </div>
			<div id="main"><div class="line" data-text="package net.minecraft.client.renderer" style="opacity: 0;"><div><span class="kw">package</span> <span class="type-link" data-package="net"><span class="ident">net</span></span><span>.</span><span class="type-link" data-package="net.minecraft"><span class="ident">minecraft</span></span><span>.</span><span class="type-link" data-package="net.minecraft.client"><span class="ident">client</span></span><span>.</span><span class="type-link" data-package="net.minecraft.client.renderer"><span class="ident">renderer</span></span></div><br></div>
<div class="line" data-text="abstract class RenderType : RenderStateShard {" style="opacity: 0;"><div id="current-class"><span class="kw">abstract</span> <span class="kw">class</span> <span class="ident">RenderType</span> : <span class="type-link" data-type="net.minecraft.client.renderer.RenderStateShard">RenderStateShard</span> {</div></div>
<div class="line" data-text="private final val format: VertexFormat;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">format</span>: <span class="type-link" data-type="com.mojang.blaze3d.vertex.VertexFormat">VertexFormat</span>;</div></div>
<div class="line" data-text="private final val mode: VertexFormat$Mode;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">mode</span>: <span class="type-link" data-type="com.mojang.blaze3d.vertex.VertexFormat$Mode">VertexFormat$Mode</span>;</div></div>
<div class="line" data-text="private final val bufferSize: Int;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">bufferSize</span>: <span class="type-link" data-type="kotlin.Int">Int</span>;</div></div>
<div class="line" data-text="private final val affectsCrumbling: Boolean;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">affectsCrumbling</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>;</div></div>
<div class="line" data-text="private final val sortOnUpload: Boolean;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">sortOnUpload</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>;</div></div>
<div class="line" data-text="fun draw(arg0: MeshData): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">draw</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="com.mojang.blaze3d.vertex.MeshData">MeshData</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun bufferSize(): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">bufferSize</span>(): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun format(): VertexFormat {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">format</span>(): <span class="type-link" data-type="com.mojang.blaze3d.vertex.VertexFormat">VertexFormat</span> {};</div></div>
<div class="line" data-text="fun mode(): VertexFormat$Mode {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">mode</span>(): <span class="type-link" data-type="com.mojang.blaze3d.vertex.VertexFormat$Mode">VertexFormat$Mode</span> {};</div></div>
<div class="line" data-text="fun outline(): Optional<RenderType> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">outline</span>(): <span class="type-link" data-type="java.util.Optional">Optional</span>&lt;<span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span>&gt; {};</div></div>
<div class="line" data-text="fun isOutline(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">isOutline</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun affectsCrumbling(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">affectsCrumbling</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun canConsolidateConsecutiveGeometry(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">canConsolidateConsecutiveGeometry</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun sortOnUpload(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">sortOnUpload</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun setupRenderState(): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">setupRenderState</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun clearRenderState(): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">clearRenderState</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="companion object {" style="opacity: 0;"><br><div style="padding-left: 2em"><span class="kw">companion object</span> {</div></div>
<div class="line" data-text="@JvmStaticprivate final val MEGABYTE: Int;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">MEGABYTE</span>: <span class="type-link" data-type="kotlin.Int">Int</span>;</div></div>
<div class="line" data-text="@JvmStaticfinal val BIG_BUFFER_SIZE: Int;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">final</span> <span class="kw">val</span> <span class="ident">BIG_BUFFER_SIZE</span>: <span class="type-link" data-type="kotlin.Int">Int</span>;</div></div>
<div class="line" data-text="@JvmStaticfinal val SMALL_BUFFER_SIZE: Int;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">final</span> <span class="kw">val</span> <span class="ident">SMALL_BUFFER_SIZE</span>: <span class="type-link" data-type="kotlin.Int">Int</span>;</div></div>
<div class="line" data-text="@JvmStaticfinal val TRANSIENT_BUFFER_SIZE: Int;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">final</span> <span class="kw">val</span> <span class="ident">TRANSIENT_BUFFER_SIZE</span>: <span class="type-link" data-type="kotlin.Int">Int</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val SOLID: RenderType;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">SOLID</span>: <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val CUTOUT_MIPPED: RenderType;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">CUTOUT_MIPPED</span>: <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val CUTOUT: RenderType;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">CUTOUT</span>: <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val TRANSLUCENT: RenderType;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">TRANSLUCENT</span>: <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val TRANSLUCENT_MOVING_BLOCK: RenderType;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">TRANSLUCENT_MOVING_BLOCK</span>: <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val ARMOR_CUTOUT_NO_CULL: Function<ResourceLocation, RenderType>;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">ARMOR_CUTOUT_NO_CULL</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>, <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span>&gt;;</div></div>
<div class="line" data-text="@JvmStaticprivate final val ENTITY_SOLID: Function<ResourceLocation, RenderType>;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">ENTITY_SOLID</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>, <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span>&gt;;</div></div>
<div class="line" data-text="@JvmStaticprivate final val ENTITY_CUTOUT: Function<ResourceLocation, RenderType>;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">ENTITY_CUTOUT</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>, <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span>&gt;;</div></div>
<div class="line" data-text="@JvmStaticprivate final val ENTITY_CUTOUT_NO_CULL: BiFunction<ResourceLocation, Boolean, RenderType>;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">ENTITY_CUTOUT_NO_CULL</span>: <span class="type-link" data-type="java.util.function.BiFunction">BiFunction</span>&lt;<span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>, <span class="type-link" data-type="java.lang.Boolean">Boolean</span>, <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span>&gt;;</div></div>
<div class="line" data-text="@JvmStaticprivate final val ENTITY_CUTOUT_NO_CULL_Z_OFFSET: BiFunction<ResourceLocation, Boolean, RenderType>;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">ENTITY_CUTOUT_NO_CULL_Z_OFFSET</span>: <span class="type-link" data-type="java.util.function.BiFunction">BiFunction</span>&lt;<span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>, <span class="type-link" data-type="java.lang.Boolean">Boolean</span>, <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span>&gt;;</div></div>
<div class="line" data-text="@JvmStaticprivate final val ITEM_ENTITY_TRANSLUCENT_CULL: Function<ResourceLocation, RenderType>;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">ITEM_ENTITY_TRANSLUCENT_CULL</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>, <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span>&gt;;</div></div>
<div class="line" data-text="@JvmStaticprivate final val ENTITY_TRANSLUCENT_CULL: Function<ResourceLocation, RenderType>;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">ENTITY_TRANSLUCENT_CULL</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>, <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span>&gt;;</div></div>
<div class="line" data-text="@JvmStaticprivate final val ENTITY_TRANSLUCENT: BiFunction<ResourceLocation, Boolean, RenderType>;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">ENTITY_TRANSLUCENT</span>: <span class="type-link" data-type="java.util.function.BiFunction">BiFunction</span>&lt;<span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>, <span class="type-link" data-type="java.lang.Boolean">Boolean</span>, <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span>&gt;;</div></div>
<div class="line" data-text="@JvmStaticprivate final val ENTITY_TRANSLUCENT_EMISSIVE: BiFunction<ResourceLocation, Boolean, RenderType>;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">ENTITY_TRANSLUCENT_EMISSIVE</span>: <span class="type-link" data-type="java.util.function.BiFunction">BiFunction</span>&lt;<span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>, <span class="type-link" data-type="java.lang.Boolean">Boolean</span>, <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span>&gt;;</div></div>
<div class="line" data-text="@JvmStaticprivate final val ENTITY_SMOOTH_CUTOUT: Function<ResourceLocation, RenderType>;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">ENTITY_SMOOTH_CUTOUT</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>, <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span>&gt;;</div></div>
<div class="line" data-text="@JvmStaticprivate final val BEACON_BEAM: BiFunction<ResourceLocation, Boolean, RenderType>;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">BEACON_BEAM</span>: <span class="type-link" data-type="java.util.function.BiFunction">BiFunction</span>&lt;<span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>, <span class="type-link" data-type="java.lang.Boolean">Boolean</span>, <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span>&gt;;</div></div>
<div class="line" data-text="@JvmStaticprivate final val ENTITY_DECAL: Function<ResourceLocation, RenderType>;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">ENTITY_DECAL</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>, <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span>&gt;;</div></div>
<div class="line" data-text="@JvmStaticprivate final val ENTITY_NO_OUTLINE: Function<ResourceLocation, RenderType>;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">ENTITY_NO_OUTLINE</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>, <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span>&gt;;</div></div>
<div class="line" data-text="@JvmStaticprivate final val ENTITY_SHADOW: Function<ResourceLocation, RenderType>;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">ENTITY_SHADOW</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>, <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span>&gt;;</div></div>
<div class="line" data-text="@JvmStaticprivate final val DRAGON_EXPLOSION_ALPHA: Function<ResourceLocation, RenderType>;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">DRAGON_EXPLOSION_ALPHA</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>, <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span>&gt;;</div></div>
<div class="line" data-text="@JvmStaticprivate final val EYES: BiFunction<ResourceLocation, RenderStateShard$TransparencyStateShard, RenderType>;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">EYES</span>: <span class="type-link" data-type="java.util.function.BiFunction">BiFunction</span>&lt;<span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>, <span class="type-link" data-type="net.minecraft.client.renderer.RenderStateShard$TransparencyStateShard">RenderStateShard$TransparencyStateShard</span>, <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span>&gt;;</div></div>
<div class="line" data-text="@JvmStaticprivate final val LEASH: RenderType;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">LEASH</span>: <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val WATER_MASK: RenderType;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">WATER_MASK</span>: <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val ARMOR_ENTITY_GLINT: RenderType;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">ARMOR_ENTITY_GLINT</span>: <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val GLINT_TRANSLUCENT: RenderType;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">GLINT_TRANSLUCENT</span>: <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val GLINT: RenderType;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">GLINT</span>: <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val ENTITY_GLINT: RenderType;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">ENTITY_GLINT</span>: <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val ENTITY_GLINT_DIRECT: RenderType;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">ENTITY_GLINT_DIRECT</span>: <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val CRUMBLING: Function<ResourceLocation, RenderType>;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">CRUMBLING</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>, <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span>&gt;;</div></div>
<div class="line" data-text="@JvmStaticprivate final val TEXT: Function<ResourceLocation, RenderType>;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">TEXT</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>, <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span>&gt;;</div></div>
<div class="line" data-text="@JvmStaticprivate final val TEXT_BACKGROUND: RenderType;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">TEXT_BACKGROUND</span>: <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val TEXT_INTENSITY: Function<ResourceLocation, RenderType>;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">TEXT_INTENSITY</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>, <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span>&gt;;</div></div>
<div class="line" data-text="@JvmStaticprivate final val TEXT_POLYGON_OFFSET: Function<ResourceLocation, RenderType>;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">TEXT_POLYGON_OFFSET</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>, <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span>&gt;;</div></div>
<div class="line" data-text="@JvmStaticprivate final val TEXT_INTENSITY_POLYGON_OFFSET: Function<ResourceLocation, RenderType>;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">TEXT_INTENSITY_POLYGON_OFFSET</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>, <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span>&gt;;</div></div>
<div class="line" data-text="@JvmStaticprivate final val TEXT_SEE_THROUGH: Function<ResourceLocation, RenderType>;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">TEXT_SEE_THROUGH</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>, <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span>&gt;;</div></div>
<div class="line" data-text="@JvmStaticprivate final val TEXT_BACKGROUND_SEE_THROUGH: RenderType;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">TEXT_BACKGROUND_SEE_THROUGH</span>: <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val TEXT_INTENSITY_SEE_THROUGH: Function<ResourceLocation, RenderType>;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">TEXT_INTENSITY_SEE_THROUGH</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>, <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span>&gt;;</div></div>
<div class="line" data-text="@JvmStaticprivate final val LIGHTNING: RenderType;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">LIGHTNING</span>: <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val DRAGON_RAYS: RenderType;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">DRAGON_RAYS</span>: <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val DRAGON_RAYS_DEPTH: RenderType;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">DRAGON_RAYS_DEPTH</span>: <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val TRIPWIRE: RenderType;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">TRIPWIRE</span>: <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val END_PORTAL: RenderType;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">END_PORTAL</span>: <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val END_GATEWAY: RenderType;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">END_GATEWAY</span>: <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val CLOUDS: RenderType;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">CLOUDS</span>: <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val CLOUDS_DEPTH_ONLY: RenderType;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">CLOUDS_DEPTH_ONLY</span>: <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span>;</div></div>
<div class="line" data-text="@JvmStaticfinal val LINES: RenderType$CompositeRenderType;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">final</span> <span class="kw">val</span> <span class="ident">LINES</span>: <span class="type-link" data-type="net.minecraft.client.renderer.RenderType$CompositeRenderType">RenderType$CompositeRenderType</span>;</div></div>
<div class="line" data-text="@JvmStaticfinal val LINE_STRIP: RenderType$CompositeRenderType;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">final</span> <span class="kw">val</span> <span class="ident">LINE_STRIP</span>: <span class="type-link" data-type="net.minecraft.client.renderer.RenderType$CompositeRenderType">RenderType$CompositeRenderType</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val DEBUG_LINE_STRIP: Function<Double, RenderType$CompositeRenderType>;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">DEBUG_LINE_STRIP</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="type-link" data-type="java.lang.Double">Double</span>, <span class="type-link" data-type="net.minecraft.client.renderer.RenderType$CompositeRenderType">RenderType$CompositeRenderType</span>&gt;;</div></div>
<div class="line" data-text="@JvmStaticprivate final val DEBUG_FILLED_BOX: RenderType$CompositeRenderType;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">DEBUG_FILLED_BOX</span>: <span class="type-link" data-type="net.minecraft.client.renderer.RenderType$CompositeRenderType">RenderType$CompositeRenderType</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val DEBUG_QUADS: RenderType$CompositeRenderType;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">DEBUG_QUADS</span>: <span class="type-link" data-type="net.minecraft.client.renderer.RenderType$CompositeRenderType">RenderType$CompositeRenderType</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val DEBUG_STRUCTURE_QUADS: RenderType$CompositeRenderType;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">DEBUG_STRUCTURE_QUADS</span>: <span class="type-link" data-type="net.minecraft.client.renderer.RenderType$CompositeRenderType">RenderType$CompositeRenderType</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val DEBUG_SECTION_QUADS: RenderType$CompositeRenderType;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">DEBUG_SECTION_QUADS</span>: <span class="type-link" data-type="net.minecraft.client.renderer.RenderType$CompositeRenderType">RenderType$CompositeRenderType</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val GUI: RenderType$CompositeRenderType;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">GUI</span>: <span class="type-link" data-type="net.minecraft.client.renderer.RenderType$CompositeRenderType">RenderType$CompositeRenderType</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val GUI_OVERLAY: RenderType$CompositeRenderType;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">GUI_OVERLAY</span>: <span class="type-link" data-type="net.minecraft.client.renderer.RenderType$CompositeRenderType">RenderType$CompositeRenderType</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val GUI_TEXT_HIGHLIGHT: RenderType$CompositeRenderType;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">GUI_TEXT_HIGHLIGHT</span>: <span class="type-link" data-type="net.minecraft.client.renderer.RenderType$CompositeRenderType">RenderType$CompositeRenderType</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val GUI_GHOST_RECIPE_OVERLAY: RenderType$CompositeRenderType;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">GUI_GHOST_RECIPE_OVERLAY</span>: <span class="type-link" data-type="net.minecraft.client.renderer.RenderType$CompositeRenderType">RenderType$CompositeRenderType</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val CHUNK_BUFFER_LAYERS: ImmutableList<RenderType>;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">CHUNK_BUFFER_LAYERS</span>: <span class="type-link" data-type="com.google.common.collect.ImmutableList">ImmutableList</span>&lt;<span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span>&gt;;</div></div>
<div class="line" data-text="@JvmStaticfun solid(): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">solid</span>(): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun cutoutMipped(): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">cutoutMipped</span>(): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun cutout(): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">cutout</span>(): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun translucentState(arg0: RenderStateShard$ShaderStateShard): RenderType$CompositeState {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">translucentState</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.client.renderer.RenderStateShard$ShaderStateShard">RenderStateShard$ShaderStateShard</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType$CompositeState">RenderType$CompositeState</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun translucent(): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">translucent</span>(): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun translucentMovingBlockState(): RenderType$CompositeState {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">translucentMovingBlockState</span>(): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType$CompositeState">RenderType$CompositeState</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun translucentMovingBlock(): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">translucentMovingBlock</span>(): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun createArmorCutoutNoCull(arg0: Boolean, arg1: String, arg2: ResourceLocation): RenderType$CompositeRenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">createArmorCutoutNoCull</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="java.lang.String">String</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType$CompositeRenderType">RenderType$CompositeRenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun armorCutoutNoCull(arg0: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">armorCutoutNoCull</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun createArmorDecalCutoutNoCull(arg0: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">createArmorDecalCutoutNoCull</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun entitySolid(arg0: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">entitySolid</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun entityCutout(arg0: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">entityCutout</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun entityCutoutNoCull(arg0: Boolean, arg1: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">entityCutoutNoCull</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun entityCutoutNoCull(arg0: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">entityCutoutNoCull</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun entityCutoutNoCullZOffset(arg0: Boolean, arg1: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">entityCutoutNoCullZOffset</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun entityCutoutNoCullZOffset(arg0: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">entityCutoutNoCullZOffset</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun itemEntityTranslucentCull(arg0: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">itemEntityTranslucentCull</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun entityTranslucentCull(arg0: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">entityTranslucentCull</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun entityTranslucent(arg0: Boolean, arg1: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">entityTranslucent</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun entityTranslucent(arg0: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">entityTranslucent</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun entityTranslucentEmissive(arg0: Boolean, arg1: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">entityTranslucentEmissive</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun entityTranslucentEmissive(arg0: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">entityTranslucentEmissive</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun entitySmoothCutout(arg0: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">entitySmoothCutout</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun beaconBeam(arg0: Boolean, arg1: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">beaconBeam</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun entityDecal(arg0: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">entityDecal</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun entityNoOutline(arg0: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">entityNoOutline</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun entityShadow(arg0: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">entityShadow</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun dragonExplosionAlpha(arg0: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">dragonExplosionAlpha</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun eyes(arg0: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">eyes</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun breezeEyes(arg0: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">breezeEyes</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun breezeWind(arg0: Float, arg1: Float, arg2: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">breezeWind</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Float">Float</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="kotlin.Float">Float</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun energySwirl(arg0: Float, arg1: Float, arg2: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">energySwirl</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Float">Float</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="kotlin.Float">Float</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun leash(): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">leash</span>(): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun waterMask(): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">waterMask</span>(): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun outline(arg0: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">outline</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun armorEntityGlint(): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">armorEntityGlint</span>(): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun glintTranslucent(): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">glintTranslucent</span>(): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun glint(): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">glint</span>(): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun entityGlint(): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">entityGlint</span>(): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun entityGlintDirect(): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">entityGlintDirect</span>(): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun crumbling(arg0: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">crumbling</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun text(arg0: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">text</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun textBackground(): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">textBackground</span>(): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun textIntensity(arg0: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">textIntensity</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun textPolygonOffset(arg0: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">textPolygonOffset</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun textIntensityPolygonOffset(arg0: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">textIntensityPolygonOffset</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun textSeeThrough(arg0: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">textSeeThrough</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun textBackgroundSeeThrough(): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">textBackgroundSeeThrough</span>(): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun textIntensitySeeThrough(arg0: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">textIntensitySeeThrough</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun lightning(): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">lightning</span>(): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun dragonRays(): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">dragonRays</span>(): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun dragonRaysDepth(): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">dragonRaysDepth</span>(): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun tripwireState(): RenderType$CompositeState {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">tripwireState</span>(): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType$CompositeState">RenderType$CompositeState</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun tripwire(): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">tripwire</span>(): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun endPortal(): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">endPortal</span>(): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun endGateway(): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">endGateway</span>(): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun createClouds(arg0: Boolean): RenderType$CompositeRenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">createClouds</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType$CompositeRenderType">RenderType$CompositeRenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun clouds(): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">clouds</span>(): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun cloudsDepthOnly(): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">cloudsDepthOnly</span>(): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun lines(): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">lines</span>(): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun lineStrip(): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">lineStrip</span>(): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun debugLineStrip(arg0: Double): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">debugLineStrip</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Double">Double</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun debugFilledBox(): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">debugFilledBox</span>(): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun debugQuads(): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">debugQuads</span>(): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun debugStructureQuads(): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">debugStructureQuads</span>(): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun debugSectionQuads(): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">debugSectionQuads</span>(): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun gui(): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">gui</span>(): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun guiOverlay(): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">guiOverlay</span>(): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun guiTextHighlight(): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">guiTextHighlight</span>(): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun guiGhostRecipeOverlay(): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">guiGhostRecipeOverlay</span>(): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun create(arg0: VertexFormat, arg1: VertexFormat$Mode, arg2: Int, arg3: String, arg4: RenderType$CompositeState): RenderType$CompositeRenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">create</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="com.mojang.blaze3d.vertex.VertexFormat">VertexFormat</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="com.mojang.blaze3d.vertex.VertexFormat$Mode">VertexFormat$Mode</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="kotlin.Int">Int</span>, <span class="arg-name">arg3</span>: <span class="type-link" data-type="java.lang.String">String</span>, <span class="arg-name">arg4</span>: <span class="type-link" data-type="net.minecraft.client.renderer.RenderType$CompositeState">RenderType$CompositeState</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType$CompositeRenderType">RenderType$CompositeRenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun create(arg0: Boolean, arg1: Boolean, arg2: VertexFormat, arg3: VertexFormat$Mode, arg4: Int, arg5: String, arg6: RenderType$CompositeState): RenderType$CompositeRenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">create</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="com.mojang.blaze3d.vertex.VertexFormat">VertexFormat</span>, <span class="arg-name">arg3</span>: <span class="type-link" data-type="com.mojang.blaze3d.vertex.VertexFormat$Mode">VertexFormat$Mode</span>, <span class="arg-name">arg4</span>: <span class="type-link" data-type="kotlin.Int">Int</span>, <span class="arg-name">arg5</span>: <span class="type-link" data-type="java.lang.String">String</span>, <span class="arg-name">arg6</span>: <span class="type-link" data-type="net.minecraft.client.renderer.RenderType$CompositeState">RenderType$CompositeState</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType$CompositeRenderType">RenderType$CompositeRenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun chunkBufferLayers(): List<RenderType> {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">chunkBufferLayers</span>(): <span class="type-link" data-type="java.util.List">List</span>&lt;<span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span>&gt; {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_49044(arg0: Double): RenderType$CompositeRenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_49044</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.Double">Double</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType$CompositeRenderType">RenderType$CompositeRenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_37347(arg0: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_37347</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_37348(arg0: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_37348</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_36436(arg0: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_36436</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_36437(arg0: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_36437</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_34833(arg0: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_34833</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_34834(arg0: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_34834</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_34835(arg0: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_34835</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_34836(arg0: RenderStateShard$TransparencyStateShard, arg1: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_34836</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.client.renderer.RenderStateShard$TransparencyStateShard">RenderStateShard$TransparencyStateShard</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_34837(arg0: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_34837</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_34838(arg0: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_34838</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_34839(arg0: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_34839</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_34840(arg0: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_34840</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_34829(arg0: Boolean, arg1: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_34829</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.Boolean">Boolean</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_34822(arg0: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_34822</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_42598(arg0: Boolean, arg1: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_42598</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.Boolean">Boolean</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_34830(arg0: Boolean, arg1: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_34830</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.Boolean">Boolean</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_34823(arg0: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_34823</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_34824(arg0: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_34824</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_34831(arg0: Boolean, arg1: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_34831</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.Boolean">Boolean</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_34832(arg0: Boolean, arg1: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_34832</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.Boolean">Boolean</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_34825(arg0: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_34825</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_34826(arg0: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_34826</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_34827(arg0: ResourceLocation): RenderType {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_34827</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="net.minecraft.client.renderer.RenderType">RenderType</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun setupGlintTexturing(arg0: Float): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">setupGlintTexturing</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Float">Float</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_51780(): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_51780</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_51781(): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_51781</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_51782(): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_51782</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_51783(): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_51783</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_29376(): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_29376</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_29377(): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_29377</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_29378(): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_29378</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_23519(): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_23519</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_23520(): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_23520</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_34552(): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_34552</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_23522(): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_23522</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_34553(): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_34553</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_34554(): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_34554</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_34555(): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_34555</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_23524(): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_23524</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_34556(): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_34556</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_23801(): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_23801</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_24467(): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_24467</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_23531(): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_23531</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_23532(): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_23532</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_23533(): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_23533</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_23534(): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_23534</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_23535(): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_23535</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_23536(): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_23536</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_23537(): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_23537</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_23538(): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_23538</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_23539(): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_23539</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_23540(): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_23540</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_23541(): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_23541</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_23542(): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_23542</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_23502(): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_23502</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_29368(): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_29368</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_23504(): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_23504</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_23505(): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_23505</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_29994(): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_29994</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_30675(): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_30675</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_29995(): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_29995</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_29370(): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_29370</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_23510(): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_23510</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_23511(): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_23511</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_23514(): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_23514</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_23515(): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_23515</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="}" style="opacity: 0;"><div style="padding-left: 2em">}</div></div>
<div class="line" data-text="}" style="opacity: 0;"><div>}</div></div>
<div class="line" data-text="" style="opacity: 0;"></div></div></div>
			
	<div id="hover-preview" style="
	  position: fixed;
	  overflow: auto;
	  background: #2b2b2b;
	  color: #ddd;
	  border: 1px solid #444;
	  border-radius: 6px;
	  font-size: 13px;
	  padding: 8px;
	  display: none;
	  z-index: 50;
	  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.5);
	  pointer-events: auto;
	">
	  <div id="hover-content"></div>
	</div>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/constantsPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/consoleViewer.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/classPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/searchBarViewer.js"></script>
		  </body>
		  </html>
[Log] <!DOCTYPE html>
		  <html lang="en">
		  <head>
			<meta charset="UTF-8">
			<style>
			  
		#class-search-bar {
		display: flex;
		align-items: center;
		gap: 8px;
		padding: 8px 12px;
		background: #2b2b2b;
		border-bottom: 1px solid #444;
		z-index: 150;
		position: relative;
		}

		#class-search-results {
		position: absolute;
		top: 100%;
		left: 0;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: 100%;
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
		}

			  
	@keyframes pop {
	  0% { transform: scale(1); }
	  50% { transform: scale(1.04); }
	  100% { transform: scale(1.035); }
	}
			  
	body {
	  margin: 0;
	  font-family: Consolas, monospace;
	  background: #1e1e1e;
	  color: rgb(210, 222, 174);
	  padding: 16px;
	}
			  
	#main {
	  cursor: text;
	  flex-grow: 1;
	  height: 100vh;
	  overflow: visible;
	  padding: 16px;
	  box-sizing: border-box;
	}
  
	.kw {
	  color: rgba(76, 156, 222, 0.93);
	  font-weight: bold;
	}
  
	.annotation {
	  color: rgb(238, 223, 154);
	}
  
	.type-link {
	  color: rgba(108, 220, 175, 0.92);
	  cursor: default;
	  text-decoration: none;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link {
	  cursor: pointer;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link:hover {
	  color: rgba(158, 234, 203, 0.92);
	  text-decoration: underline;
	  display: inline-block;
	  animation: pop 0.17s ease-in-out forwards;
	}
  
	.ident {
	  color: #9cdcfe;
	}
  
	.method-name {
	  color: rgba(231, 229, 151, 0.92);
	}
  
	.arg-name {
	  color: rgba(104, 208, 237, 0.97);
	}
  
	.line {
	  opacity: 0;
	  transition: opacity 0.05s linear;
	}
			  
	.highlight-box {
	  position: absolute;
	  background-color: rgba(255, 160, 80, 0.35);
	  border-radius: 2px;
	}
  
	.highlight-box.current {
	  outline: 1px solid #3794ff;
	  background-color: rgba(55, 148, 255, 0.3);
	  box-shadow: 0 0 4px #3794ff99;
	  z-index: 60;
	}
  
	.debug-overlay-wrapper {
	  position: fixed;
	  pointer-events: none;
	  z-index: 10000;
	}
  
	.debug-overlay-wrapper > div {
	  position: absolute;
	  pointer-events: auto;
	  background: rgba(255, 0, 0, 0.2);
	}
  
	#search-bar button {
	  background-color: rgba(30, 30, 30, 0.27);
	  color: white;
	  border: 1px solid #555;
	  border-radius: 6px;
	  padding: 4px 8px;
	  cursor: pointer;
	  transition: all 0.2s ease-in-out;
	  font-size: 13px;
	  font-family: inherit;
	  user-select: none;
	}
  
	#search-bar button.active {
	  background-color: #094771;
	  border-color: #3794ff;
	  color: white;
	}
			</style>
		  </head>
		  <body>
		    
	<div id="class-search-bar" style="
	  display: flex;
	  align-items: center;
	  gap: 8px;
	  padding: 8px 12px;
	  background: #2b2b2b;
	  border-bottom: 1px solid #444;
	  z-index: 150;
	">
	  <input id="class-search-input" type="text" placeholder="Search classes..." style="
		flex-grow: 1;
		padding: 6px 10px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 6px;
		font-family: inherit;
	  ">
	  <div id="class-search-results" style="
		position: absolute;
		top: 42px;
		left: 12px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: calc(100% - 24px);
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
	  "></div>
	</div>
			
	<div id="search-bar" style="
	  display: none;
	  position: fixed;
	  top: 8px;
	  right: 8px;
	  z-index: 200;
	  background: #2c2c2c;
	  padding: 4px 8px;
	  border-radius: 4px;
	  display: flex;
	  gap: 4px;
	  align-items: center;
	">
	  <input type="text" id="search-input" placeholder="Search..." style="
		width: 180px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		padding: 4px;
	  " />
	  <button id="toggle-case" title="Match Case">Aa</button>
	  <button id="toggle-whole" title="Whole Word">â›¶</button>
	  <button id="toggle-regex" title="Regex">*</button>
	  <span id="search-count" style="
		color: white;
		min-width: 30px;
		text-align: center;
		font-size: 13px;
		font-family: Arial, sans-serif;
	  ">No Results</span>
	  <button id="search-prev" title="Previous Match">â†‘</button>
	  <button id="search-next" title="Next Match">â†“</button>
	  <button id="search-close" title="Close Search" style="margin-left: auto;">âœ–</button>
	</div>
			
  <div id="console-output" style="
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 160px;
    background: #111;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    overflow-y: auto;
    padding: 24px 10px 6px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
    <button id="console-minimize" style="
      position: absolute;
      top: 4px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 2px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">â€“</button>
    <div id="console-content"></div>
  </div>

  <div id="console-bar" style="
    display: none;
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 24px;
    background: #222;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
  	<span>Console</span>
    <button id="console-restore" style="
      position: absolute;
      top: 1px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 1px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">+</button>
  </div>
			<div id="main"><div class="line" data-text="package net.minecraft.resources" style="opacity: 0;"><div><span class="kw">package</span> <span class="type-link" data-package="net"><span class="ident">net</span></span><span>.</span><span class="type-link" data-package="net.minecraft"><span class="ident">minecraft</span></span><span>.</span><span class="type-link" data-package="net.minecraft.resources"><span class="ident">resources</span></span></div><br></div>
<div class="line" data-text="final class ResourceLocation : Comparable {" style="opacity: 0;"><div id="current-class"><span class="kw">final</span> <span class="kw">class</span> <span class="ident">ResourceLocation</span> : <span class="type-link" data-type="java.lang.Comparable">Comparable</span> {</div></div>
<div class="line" data-text="private final val namespace: String;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">namespace</span>: <span class="type-link" data-type="java.lang.String">String</span>;</div></div>
<div class="line" data-text="private final val path: String;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">path</span>: <span class="type-link" data-type="java.lang.String">String</span>;</div></div>
<div class="line" data-text="fun getPath(): String {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getPath</span>(): <span class="type-link" data-type="java.lang.String">String</span> {};</div></div>
<div class="line" data-text="fun getNamespace(): String {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getNamespace</span>(): <span class="type-link" data-type="java.lang.String">String</span> {};</div></div>
<div class="line" data-text="fun withPath(arg0: String): ResourceLocation {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">withPath</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.String">String</span>): <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span> {};</div></div>
<div class="line" data-text="fun withPath(arg0: UnaryOperator<String>): ResourceLocation {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">withPath</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.function.UnaryOperator">UnaryOperator</span>&lt;<span class="type-link" data-type="java.lang.String">String</span>&gt;): <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span> {};</div></div>
<div class="line" data-text="fun withPrefix(arg0: String): ResourceLocation {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">withPrefix</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.String">String</span>): <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span> {};</div></div>
<div class="line" data-text="fun withSuffix(arg0: String): ResourceLocation {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">withSuffix</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.String">String</span>): <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span> {};</div></div>
<div class="line" data-text="fun compareTo(arg0: ResourceLocation): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">compareTo</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun toDebugFileName(): String {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">toDebugFileName</span>(): <span class="type-link" data-type="java.lang.String">String</span> {};</div></div>
<div class="line" data-text="fun toLanguageKey(): String {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">toLanguageKey</span>(): <span class="type-link" data-type="java.lang.String">String</span> {};</div></div>
<div class="line" data-text="fun toShortLanguageKey(): String {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">toShortLanguageKey</span>(): <span class="type-link" data-type="java.lang.String">String</span> {};</div></div>
<div class="line" data-text="fun toLanguageKey(arg0: String): String {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">toLanguageKey</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.String">String</span>): <span class="type-link" data-type="java.lang.String">String</span> {};</div></div>
<div class="line" data-text="fun toLanguageKey(arg0: String, arg1: String): String {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">toLanguageKey</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.String">String</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="java.lang.String">String</span>): <span class="type-link" data-type="java.lang.String">String</span> {};</div></div>
<div class="line" data-text="fun compareTo(arg0: Object): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">compareTo</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.Object">Object</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="companion object {" style="opacity: 0;"><br><div style="padding-left: 2em"><span class="kw">companion object</span> {</div></div>
<div class="line" data-text="@JvmStaticfinal val CODEC: Codec<ResourceLocation>;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">final</span> <span class="kw">val</span> <span class="ident">CODEC</span>: <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>&gt;;</div></div>
<div class="line" data-text="@JvmStaticfinal val STREAM_CODEC: StreamCodec<ByteBuf, ResourceLocation>;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">final</span> <span class="kw">val</span> <span class="ident">STREAM_CODEC</span>: <span class="type-link" data-type="net.minecraft.network.codec.StreamCodec">StreamCodec</span>&lt;<span class="type-link" data-type="io.netty.buffer.ByteBuf">ByteBuf</span>, <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>&gt;;</div></div>
<div class="line" data-text="@JvmStaticfinal val ERROR_INVALID: SimpleCommandExceptionType;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">final</span> <span class="kw">val</span> <span class="ident">ERROR_INVALID</span>: <span class="type-link" data-type="com.mojang.brigadier.exceptions.SimpleCommandExceptionType">SimpleCommandExceptionType</span>;</div></div>
<div class="line" data-text="@JvmStaticfinal val NAMESPACE_SEPARATOR: Char;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">final</span> <span class="kw">val</span> <span class="ident">NAMESPACE_SEPARATOR</span>: <span class="type-link" data-type="kotlin.Char">Char</span>;</div></div>
<div class="line" data-text="@JvmStaticfinal val DEFAULT_NAMESPACE: String;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">final</span> <span class="kw">val</span> <span class="ident">DEFAULT_NAMESPACE</span>: <span class="type-link" data-type="java.lang.String">String</span>;</div></div>
<div class="line" data-text="@JvmStaticfinal val REALMS_NAMESPACE: String;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">final</span> <span class="kw">val</span> <span class="ident">REALMS_NAMESPACE</span>: <span class="type-link" data-type="java.lang.String">String</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate fun createUntrusted(arg0: String, arg1: String): ResourceLocation {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">createUntrusted</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.String">String</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="java.lang.String">String</span>): <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun fromNamespaceAndPath(arg0: String, arg1: String): ResourceLocation {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">fromNamespaceAndPath</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.String">String</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="java.lang.String">String</span>): <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun parse(arg0: String): ResourceLocation {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">parse</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.String">String</span>): <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun withDefaultNamespace(arg0: String): ResourceLocation {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">withDefaultNamespace</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.String">String</span>): <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun tryParse(arg0: String): ResourceLocation {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">tryParse</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.String">String</span>): <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun tryBuild(arg0: String, arg1: String): ResourceLocation {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">tryBuild</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.String">String</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="java.lang.String">String</span>): <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun bySeparator(arg0: Char, arg1: String): ResourceLocation {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">bySeparator</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Char">Char</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="java.lang.String">String</span>): <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun tryBySeparator(arg0: Char, arg1: String): ResourceLocation {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">tryBySeparator</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Char">Char</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="java.lang.String">String</span>): <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun read(arg0: String): DataResult<ResourceLocation> {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">read</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.String">String</span>): <span class="type-link" data-type="com.mojang.serialization.DataResult">DataResult</span>&lt;<span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span>&gt; {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun readGreedy(arg0: StringReader): String {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">readGreedy</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="com.mojang.brigadier.StringReader">StringReader</span>): <span class="type-link" data-type="java.lang.String">String</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun read(arg0: StringReader): ResourceLocation {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">read</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="com.mojang.brigadier.StringReader">StringReader</span>): <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun readNonEmpty(arg0: StringReader): ResourceLocation {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">readNonEmpty</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="com.mojang.brigadier.StringReader">StringReader</span>): <span class="type-link" data-type="net.minecraft.resources.ResourceLocation">ResourceLocation</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun isAllowedInResourceLocation(arg0: Char): Boolean {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">isAllowedInResourceLocation</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Char">Char</span>): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun isValidPath(arg0: String): Boolean {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">isValidPath</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.String">String</span>): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun isValidNamespace(arg0: String): Boolean {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">isValidNamespace</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.String">String</span>): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun assertValidNamespace(arg0: String, arg1: String): String {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">assertValidNamespace</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.String">String</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="java.lang.String">String</span>): <span class="type-link" data-type="java.lang.String">String</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun validPathChar(arg0: Char): Boolean {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">validPathChar</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Char">Char</span>): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun validNamespaceChar(arg0: Char): Boolean {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">validNamespaceChar</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Char">Char</span>): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun assertValidPath(arg0: String, arg1: String): String {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">assertValidPath</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.String">String</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="java.lang.String">String</span>): <span class="type-link" data-type="java.lang.String">String</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_49418(arg0: String, arg1: ResourceLocationException): String {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_49418</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.String">String</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.ResourceLocationException">ResourceLocationException</span>): <span class="type-link" data-type="java.lang.String">String</span> {};</div></div>
<div class="line" data-text="}" style="opacity: 0;"><div style="padding-left: 2em">}</div></div>
<div class="line" data-text="}" style="opacity: 0;"><div>}</div></div>
<div class="line" data-text="" style="opacity: 0;"></div></div></div>
			
	<div id="hover-preview" style="
	  position: fixed;
	  overflow: auto;
	  background: #2b2b2b;
	  color: #ddd;
	  border: 1px solid #444;
	  border-radius: 6px;
	  font-size: 13px;
	  padding: 8px;
	  display: none;
	  z-index: 50;
	  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.5);
	  pointer-events: auto;
	">
	  <div id="hover-content"></div>
	</div>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/constantsPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/consoleViewer.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/classPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/searchBarViewer.js"></script>
		  </body>
		  </html>
[Log] <!DOCTYPE html>
		  <html lang="en">
		  <head>
			<meta charset="UTF-8">
			<style>
			  
		#class-search-bar {
		display: flex;
		align-items: center;
		gap: 8px;
		padding: 8px 12px;
		background: #2b2b2b;
		border-bottom: 1px solid #444;
		z-index: 150;
		position: relative;
		}

		#class-search-results {
		position: absolute;
		top: 100%;
		left: 0;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: 100%;
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
		}

			  
	@keyframes pop {
	  0% { transform: scale(1); }
	  50% { transform: scale(1.04); }
	  100% { transform: scale(1.035); }
	}
			  
	body {
	  margin: 0;
	  font-family: Consolas, monospace;
	  background: #1e1e1e;
	  color: rgb(210, 222, 174);
	  padding: 16px;
	}
			  
	#main {
	  cursor: text;
	  flex-grow: 1;
	  height: 100vh;
	  overflow: visible;
	  padding: 16px;
	  box-sizing: border-box;
	}
  
	.kw {
	  color: rgba(76, 156, 222, 0.93);
	  font-weight: bold;
	}
  
	.annotation {
	  color: rgb(238, 223, 154);
	}
  
	.type-link {
	  color: rgba(108, 220, 175, 0.92);
	  cursor: default;
	  text-decoration: none;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link {
	  cursor: pointer;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link:hover {
	  color: rgba(158, 234, 203, 0.92);
	  text-decoration: underline;
	  display: inline-block;
	  animation: pop 0.17s ease-in-out forwards;
	}
  
	.ident {
	  color: #9cdcfe;
	}
  
	.method-name {
	  color: rgba(231, 229, 151, 0.92);
	}
  
	.arg-name {
	  color: rgba(104, 208, 237, 0.97);
	}
  
	.line {
	  opacity: 0;
	  transition: opacity 0.05s linear;
	}
			  
	.highlight-box {
	  position: absolute;
	  background-color: rgba(255, 160, 80, 0.35);
	  border-radius: 2px;
	}
  
	.highlight-box.current {
	  outline: 1px solid #3794ff;
	  background-color: rgba(55, 148, 255, 0.3);
	  box-shadow: 0 0 4px #3794ff99;
	  z-index: 60;
	}
  
	.debug-overlay-wrapper {
	  position: fixed;
	  pointer-events: none;
	  z-index: 10000;
	}
  
	.debug-overlay-wrapper > div {
	  position: absolute;
	  pointer-events: auto;
	  background: rgba(255, 0, 0, 0.2);
	}
  
	#search-bar button {
	  background-color: rgba(30, 30, 30, 0.27);
	  color: white;
	  border: 1px solid #555;
	  border-radius: 6px;
	  padding: 4px 8px;
	  cursor: pointer;
	  transition: all 0.2s ease-in-out;
	  font-size: 13px;
	  font-family: inherit;
	  user-select: none;
	}
  
	#search-bar button.active {
	  background-color: #094771;
	  border-color: #3794ff;
	  color: white;
	}
			</style>
		  </head>
		  <body>
		    
	<div id="class-search-bar" style="
	  display: flex;
	  align-items: center;
	  gap: 8px;
	  padding: 8px 12px;
	  background: #2b2b2b;
	  border-bottom: 1px solid #444;
	  z-index: 150;
	">
	  <input id="class-search-input" type="text" placeholder="Search classes..." style="
		flex-grow: 1;
		padding: 6px 10px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 6px;
		font-family: inherit;
	  ">
	  <div id="class-search-results" style="
		position: absolute;
		top: 42px;
		left: 12px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: calc(100% - 24px);
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
	  "></div>
	</div>
			
	<div id="search-bar" style="
	  display: none;
	  position: fixed;
	  top: 8px;
	  right: 8px;
	  z-index: 200;
	  background: #2c2c2c;
	  padding: 4px 8px;
	  border-radius: 4px;
	  display: flex;
	  gap: 4px;
	  align-items: center;
	">
	  <input type="text" id="search-input" placeholder="Search..." style="
		width: 180px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		padding: 4px;
	  " />
	  <button id="toggle-case" title="Match Case">Aa</button>
	  <button id="toggle-whole" title="Whole Word">â›¶</button>
	  <button id="toggle-regex" title="Regex">*</button>
	  <span id="search-count" style="
		color: white;
		min-width: 30px;
		text-align: center;
		font-size: 13px;
		font-family: Arial, sans-serif;
	  ">No Results</span>
	  <button id="search-prev" title="Previous Match">â†‘</button>
	  <button id="search-next" title="Next Match">â†“</button>
	  <button id="search-close" title="Close Search" style="margin-left: auto;">âœ–</button>
	</div>
			
  <div id="console-output" style="
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 160px;
    background: #111;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    overflow-y: auto;
    padding: 24px 10px 6px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
    <button id="console-minimize" style="
      position: absolute;
      top: 4px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 2px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">â€“</button>
    <div id="console-content"></div>
  </div>

  <div id="console-bar" style="
    display: none;
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 24px;
    background: #222;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
  	<span>Console</span>
    <button id="console-restore" style="
      position: absolute;
      top: 1px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 1px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">+</button>
  </div>
			<div id="main"><div class="line" data-text="package kotlin" style="opacity: 0;"><div><span class="kw">package</span> <span class="type-link" data-package="kotlin"><span class="ident">kotlin</span></span></div><br></div>
<div class="line" data-text=" class Int {" style="opacity: 0;"><div id="current-class"> <span class="kw">class</span> <span class="ident">Int</span> {</div></div>
<div class="line" data-text="fun compareTo(arg0: Byte): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">compareTo</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Byte">Byte</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun compareTo(arg0: Short): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">compareTo</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Short">Short</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun compareTo(arg0: Int): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">compareTo</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun compareTo(arg0: Long): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">compareTo</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Long">Long</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun compareTo(arg0: Float): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">compareTo</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Float">Float</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun compareTo(arg0: Double): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">compareTo</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Double">Double</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun plus(arg0: Byte): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">plus</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Byte">Byte</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun plus(arg0: Short): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">plus</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Short">Short</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun plus(arg0: Int): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">plus</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun plus(arg0: Long): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">plus</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Long">Long</span>): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="fun plus(arg0: Float): Float {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">plus</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Float">Float</span>): <span class="type-link" data-type="kotlin.Float">Float</span> {};</div></div>
<div class="line" data-text="fun plus(arg0: Double): Double {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">plus</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Double">Double</span>): <span class="type-link" data-type="kotlin.Double">Double</span> {};</div></div>
<div class="line" data-text="fun minus(arg0: Byte): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">minus</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Byte">Byte</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun minus(arg0: Short): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">minus</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Short">Short</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun minus(arg0: Int): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">minus</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun minus(arg0: Long): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">minus</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Long">Long</span>): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="fun minus(arg0: Float): Float {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">minus</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Float">Float</span>): <span class="type-link" data-type="kotlin.Float">Float</span> {};</div></div>
<div class="line" data-text="fun minus(arg0: Double): Double {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">minus</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Double">Double</span>): <span class="type-link" data-type="kotlin.Double">Double</span> {};</div></div>
<div class="line" data-text="fun times(arg0: Byte): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">times</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Byte">Byte</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun times(arg0: Short): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">times</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Short">Short</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun times(arg0: Int): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">times</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun times(arg0: Long): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">times</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Long">Long</span>): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="fun times(arg0: Float): Float {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">times</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Float">Float</span>): <span class="type-link" data-type="kotlin.Float">Float</span> {};</div></div>
<div class="line" data-text="fun times(arg0: Double): Double {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">times</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Double">Double</span>): <span class="type-link" data-type="kotlin.Double">Double</span> {};</div></div>
<div class="line" data-text="fun div(arg0: Byte): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">div</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Byte">Byte</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun div(arg0: Short): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">div</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Short">Short</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun div(arg0: Int): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">div</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun div(arg0: Long): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">div</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Long">Long</span>): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="fun div(arg0: Float): Float {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">div</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Float">Float</span>): <span class="type-link" data-type="kotlin.Float">Float</span> {};</div></div>
<div class="line" data-text="fun div(arg0: Double): Double {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">div</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Double">Double</span>): <span class="type-link" data-type="kotlin.Double">Double</span> {};</div></div>
<div class="line" data-text="fun rem(arg0: Byte): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">rem</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Byte">Byte</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun rem(arg0: Short): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">rem</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Short">Short</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun rem(arg0: Int): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">rem</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun rem(arg0: Long): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">rem</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Long">Long</span>): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="fun rem(arg0: Float): Float {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">rem</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Float">Float</span>): <span class="type-link" data-type="kotlin.Float">Float</span> {};</div></div>
<div class="line" data-text="fun rem(arg0: Double): Double {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">rem</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Double">Double</span>): <span class="type-link" data-type="kotlin.Double">Double</span> {};</div></div>
<div class="line" data-text="fun inc(): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">inc</span>(): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun dec(): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">dec</span>(): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun unaryPlus(): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">unaryPlus</span>(): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun unaryMinus(): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">unaryMinus</span>(): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun rangeTo(arg0: Byte): IntRange {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">rangeTo</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Byte">Byte</span>): <span class="type-link" data-type="kotlin.ranges.IntRange">IntRange</span> {};</div></div>
<div class="line" data-text="fun rangeTo(arg0: Short): IntRange {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">rangeTo</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Short">Short</span>): <span class="type-link" data-type="kotlin.ranges.IntRange">IntRange</span> {};</div></div>
<div class="line" data-text="fun rangeTo(arg0: Int): IntRange {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">rangeTo</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="kotlin.ranges.IntRange">IntRange</span> {};</div></div>
<div class="line" data-text="fun rangeTo(arg0: Long): LongRange {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">rangeTo</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Long">Long</span>): <span class="type-link" data-type="kotlin.ranges.LongRange">LongRange</span> {};</div></div>
<div class="line" data-text="fun rangeUntil(arg0: Byte): IntRange {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">rangeUntil</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Byte">Byte</span>): <span class="type-link" data-type="kotlin.ranges.IntRange">IntRange</span> {};</div></div>
<div class="line" data-text="fun rangeUntil(arg0: Short): IntRange {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">rangeUntil</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Short">Short</span>): <span class="type-link" data-type="kotlin.ranges.IntRange">IntRange</span> {};</div></div>
<div class="line" data-text="fun rangeUntil(arg0: Int): IntRange {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">rangeUntil</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="kotlin.ranges.IntRange">IntRange</span> {};</div></div>
<div class="line" data-text="fun rangeUntil(arg0: Long): LongRange {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">rangeUntil</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Long">Long</span>): <span class="type-link" data-type="kotlin.ranges.LongRange">LongRange</span> {};</div></div>
<div class="line" data-text="fun shl(arg0: Int): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">shl</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun shr(arg0: Int): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">shr</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun ushr(arg0: Int): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">ushr</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun and(arg0: Int): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">and</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun or(arg0: Int): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">or</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun xor(arg0: Int): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">xor</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun inv(): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">inv</span>(): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun toByte(): Byte {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">toByte</span>(): <span class="type-link" data-type="kotlin.Byte">Byte</span> {};</div></div>
<div class="line" data-text="fun toChar(): Char {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">toChar</span>(): <span class="type-link" data-type="kotlin.Char">Char</span> {};</div></div>
<div class="line" data-text="fun toShort(): Short {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">toShort</span>(): <span class="type-link" data-type="kotlin.Short">Short</span> {};</div></div>
<div class="line" data-text="fun toInt(): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">toInt</span>(): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun toLong(): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">toLong</span>(): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="fun toFloat(): Float {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">toFloat</span>(): <span class="type-link" data-type="kotlin.Float">Float</span> {};</div></div>
<div class="line" data-text="fun toDouble(): Double {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">toDouble</span>(): <span class="type-link" data-type="kotlin.Double">Double</span> {};</div></div>
<div class="line" data-text="fun toString(): String {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">toString</span>(): <span class="type-link" data-type="kotlin.String">String</span> {};</div></div>
<div class="line" data-text="fun equals(arg0: Any): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">equals</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Any">Any</span>): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="}" style="opacity: 0;"><div>}</div></div>
<div class="line" data-text="" style="opacity: 0;"></div></div></div>
			
	<div id="hover-preview" style="
	  position: fixed;
	  overflow: auto;
	  background: #2b2b2b;
	  color: #ddd;
	  border: 1px solid #444;
	  border-radius: 6px;
	  font-size: 13px;
	  padding: 8px;
	  display: none;
	  z-index: 50;
	  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.5);
	  pointer-events: auto;
	">
	  <div id="hover-content"></div>
	</div>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/constantsPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/consoleViewer.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/classPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/searchBarViewer.js"></script>
		  </body>
		  </html>
[Log] <!DOCTYPE html>
		  <html lang="en">
		  <head>
			<meta charset="UTF-8">
			<style>
			  
		#class-search-bar {
		display: flex;
		align-items: center;
		gap: 8px;
		padding: 8px 12px;
		background: #2b2b2b;
		border-bottom: 1px solid #444;
		z-index: 150;
		position: relative;
		}

		#class-search-results {
		position: absolute;
		top: 100%;
		left: 0;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: 100%;
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
		}

			  
	@keyframes pop {
	  0% { transform: scale(1); }
	  50% { transform: scale(1.04); }
	  100% { transform: scale(1.035); }
	}
			  
	body {
	  margin: 0;
	  font-family: Consolas, monospace;
	  background: #1e1e1e;
	  color: rgb(210, 222, 174);
	  padding: 16px;
	}
			  
	#main {
	  cursor: text;
	  flex-grow: 1;
	  height: 100vh;
	  overflow: visible;
	  padding: 16px;
	  box-sizing: border-box;
	}
  
	.kw {
	  color: rgba(76, 156, 222, 0.93);
	  font-weight: bold;
	}
  
	.annotation {
	  color: rgb(238, 223, 154);
	}
  
	.type-link {
	  color: rgba(108, 220, 175, 0.92);
	  cursor: default;
	  text-decoration: none;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link {
	  cursor: pointer;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link:hover {
	  color: rgba(158, 234, 203, 0.92);
	  text-decoration: underline;
	  display: inline-block;
	  animation: pop 0.17s ease-in-out forwards;
	}
  
	.ident {
	  color: #9cdcfe;
	}
  
	.method-name {
	  color: rgba(231, 229, 151, 0.92);
	}
  
	.arg-name {
	  color: rgba(104, 208, 237, 0.97);
	}
  
	.line {
	  opacity: 0;
	  transition: opacity 0.05s linear;
	}
			  
	.highlight-box {
	  position: absolute;
	  background-color: rgba(255, 160, 80, 0.35);
	  border-radius: 2px;
	}
  
	.highlight-box.current {
	  outline: 1px solid #3794ff;
	  background-color: rgba(55, 148, 255, 0.3);
	  box-shadow: 0 0 4px #3794ff99;
	  z-index: 60;
	}
  
	.debug-overlay-wrapper {
	  position: fixed;
	  pointer-events: none;
	  z-index: 10000;
	}
  
	.debug-overlay-wrapper > div {
	  position: absolute;
	  pointer-events: auto;
	  background: rgba(255, 0, 0, 0.2);
	}
  
	#search-bar button {
	  background-color: rgba(30, 30, 30, 0.27);
	  color: white;
	  border: 1px solid #555;
	  border-radius: 6px;
	  padding: 4px 8px;
	  cursor: pointer;
	  transition: all 0.2s ease-in-out;
	  font-size: 13px;
	  font-family: inherit;
	  user-select: none;
	}
  
	#search-bar button.active {
	  background-color: #094771;
	  border-color: #3794ff;
	  color: white;
	}
			</style>
		  </head>
		  <body>
		    
	<div id="class-search-bar" style="
	  display: flex;
	  align-items: center;
	  gap: 8px;
	  padding: 8px 12px;
	  background: #2b2b2b;
	  border-bottom: 1px solid #444;
	  z-index: 150;
	">
	  <input id="class-search-input" type="text" placeholder="Search classes..." style="
		flex-grow: 1;
		padding: 6px 10px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 6px;
		font-family: inherit;
	  ">
	  <div id="class-search-results" style="
		position: absolute;
		top: 42px;
		left: 12px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: calc(100% - 24px);
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
	  "></div>
	</div>
			
	<div id="search-bar" style="
	  display: none;
	  position: fixed;
	  top: 8px;
	  right: 8px;
	  z-index: 200;
	  background: #2c2c2c;
	  padding: 4px 8px;
	  border-radius: 4px;
	  display: flex;
	  gap: 4px;
	  align-items: center;
	">
	  <input type="text" id="search-input" placeholder="Search..." style="
		width: 180px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		padding: 4px;
	  " />
	  <button id="toggle-case" title="Match Case">Aa</button>
	  <button id="toggle-whole" title="Whole Word">â›¶</button>
	  <button id="toggle-regex" title="Regex">*</button>
	  <span id="search-count" style="
		color: white;
		min-width: 30px;
		text-align: center;
		font-size: 13px;
		font-family: Arial, sans-serif;
	  ">No Results</span>
	  <button id="search-prev" title="Previous Match">â†‘</button>
	  <button id="search-next" title="Next Match">â†“</button>
	  <button id="search-close" title="Close Search" style="margin-left: auto;">âœ–</button>
	</div>
			
  <div id="console-output" style="
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 160px;
    background: #111;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    overflow-y: auto;
    padding: 24px 10px 6px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
    <button id="console-minimize" style="
      position: absolute;
      top: 4px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 2px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">â€“</button>
    <div id="console-content"></div>
  </div>

  <div id="console-bar" style="
    display: none;
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 24px;
    background: #222;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
  	<span>Console</span>
    <button id="console-restore" style="
      position: absolute;
      top: 1px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 1px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">+</button>
  </div>
			<div id="main"><div class="line" data-text="package kotlin" style="opacity: 0;"><div><span class="kw">package</span> <span class="type-link" data-package="kotlin"><span class="ident">kotlin</span></span></div><br></div>
<div class="line" data-text=" class Byte {" style="opacity: 0;"><div id="current-class"> <span class="kw">class</span> <span class="ident">Byte</span> {</div></div>
<div class="line" data-text="fun compareTo(arg0: Byte): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">compareTo</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Byte">Byte</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun compareTo(arg0: Short): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">compareTo</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Short">Short</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun compareTo(arg0: Int): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">compareTo</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun compareTo(arg0: Long): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">compareTo</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Long">Long</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun compareTo(arg0: Float): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">compareTo</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Float">Float</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun compareTo(arg0: Double): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">compareTo</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Double">Double</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun plus(arg0: Byte): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">plus</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Byte">Byte</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun plus(arg0: Short): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">plus</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Short">Short</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun plus(arg0: Int): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">plus</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun plus(arg0: Long): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">plus</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Long">Long</span>): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="fun plus(arg0: Float): Float {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">plus</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Float">Float</span>): <span class="type-link" data-type="kotlin.Float">Float</span> {};</div></div>
<div class="line" data-text="fun plus(arg0: Double): Double {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">plus</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Double">Double</span>): <span class="type-link" data-type="kotlin.Double">Double</span> {};</div></div>
<div class="line" data-text="fun minus(arg0: Byte): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">minus</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Byte">Byte</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun minus(arg0: Short): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">minus</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Short">Short</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun minus(arg0: Int): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">minus</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun minus(arg0: Long): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">minus</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Long">Long</span>): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="fun minus(arg0: Float): Float {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">minus</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Float">Float</span>): <span class="type-link" data-type="kotlin.Float">Float</span> {};</div></div>
<div class="line" data-text="fun minus(arg0: Double): Double {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">minus</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Double">Double</span>): <span class="type-link" data-type="kotlin.Double">Double</span> {};</div></div>
<div class="line" data-text="fun times(arg0: Byte): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">times</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Byte">Byte</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun times(arg0: Short): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">times</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Short">Short</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun times(arg0: Int): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">times</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun times(arg0: Long): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">times</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Long">Long</span>): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="fun times(arg0: Float): Float {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">times</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Float">Float</span>): <span class="type-link" data-type="kotlin.Float">Float</span> {};</div></div>
<div class="line" data-text="fun times(arg0: Double): Double {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">times</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Double">Double</span>): <span class="type-link" data-type="kotlin.Double">Double</span> {};</div></div>
<div class="line" data-text="fun div(arg0: Byte): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">div</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Byte">Byte</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun div(arg0: Short): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">div</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Short">Short</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun div(arg0: Int): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">div</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun div(arg0: Long): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">div</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Long">Long</span>): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="fun div(arg0: Float): Float {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">div</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Float">Float</span>): <span class="type-link" data-type="kotlin.Float">Float</span> {};</div></div>
<div class="line" data-text="fun div(arg0: Double): Double {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">div</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Double">Double</span>): <span class="type-link" data-type="kotlin.Double">Double</span> {};</div></div>
<div class="line" data-text="fun rem(arg0: Byte): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">rem</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Byte">Byte</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun rem(arg0: Short): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">rem</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Short">Short</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun rem(arg0: Int): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">rem</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun rem(arg0: Long): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">rem</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Long">Long</span>): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="fun rem(arg0: Float): Float {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">rem</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Float">Float</span>): <span class="type-link" data-type="kotlin.Float">Float</span> {};</div></div>
<div class="line" data-text="fun rem(arg0: Double): Double {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">rem</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Double">Double</span>): <span class="type-link" data-type="kotlin.Double">Double</span> {};</div></div>
<div class="line" data-text="fun inc(): Byte {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">inc</span>(): <span class="type-link" data-type="kotlin.Byte">Byte</span> {};</div></div>
<div class="line" data-text="fun dec(): Byte {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">dec</span>(): <span class="type-link" data-type="kotlin.Byte">Byte</span> {};</div></div>
<div class="line" data-text="fun unaryPlus(): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">unaryPlus</span>(): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun unaryMinus(): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">unaryMinus</span>(): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun rangeTo(arg0: Byte): IntRange {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">rangeTo</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Byte">Byte</span>): <span class="type-link" data-type="kotlin.ranges.IntRange">IntRange</span> {};</div></div>
<div class="line" data-text="fun rangeTo(arg0: Short): IntRange {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">rangeTo</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Short">Short</span>): <span class="type-link" data-type="kotlin.ranges.IntRange">IntRange</span> {};</div></div>
<div class="line" data-text="fun rangeTo(arg0: Int): IntRange {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">rangeTo</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="kotlin.ranges.IntRange">IntRange</span> {};</div></div>
<div class="line" data-text="fun rangeTo(arg0: Long): LongRange {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">rangeTo</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Long">Long</span>): <span class="type-link" data-type="kotlin.ranges.LongRange">LongRange</span> {};</div></div>
<div class="line" data-text="fun rangeUntil(arg0: Byte): IntRange {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">rangeUntil</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Byte">Byte</span>): <span class="type-link" data-type="kotlin.ranges.IntRange">IntRange</span> {};</div></div>
<div class="line" data-text="fun rangeUntil(arg0: Short): IntRange {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">rangeUntil</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Short">Short</span>): <span class="type-link" data-type="kotlin.ranges.IntRange">IntRange</span> {};</div></div>
<div class="line" data-text="fun rangeUntil(arg0: Int): IntRange {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">rangeUntil</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="kotlin.ranges.IntRange">IntRange</span> {};</div></div>
<div class="line" data-text="fun rangeUntil(arg0: Long): LongRange {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">rangeUntil</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Long">Long</span>): <span class="type-link" data-type="kotlin.ranges.LongRange">LongRange</span> {};</div></div>
<div class="line" data-text="fun toByte(): Byte {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">toByte</span>(): <span class="type-link" data-type="kotlin.Byte">Byte</span> {};</div></div>
<div class="line" data-text="fun toChar(): Char {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">toChar</span>(): <span class="type-link" data-type="kotlin.Char">Char</span> {};</div></div>
<div class="line" data-text="fun toShort(): Short {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">toShort</span>(): <span class="type-link" data-type="kotlin.Short">Short</span> {};</div></div>
<div class="line" data-text="fun toInt(): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">toInt</span>(): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun toLong(): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">toLong</span>(): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="fun toFloat(): Float {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">toFloat</span>(): <span class="type-link" data-type="kotlin.Float">Float</span> {};</div></div>
<div class="line" data-text="fun toDouble(): Double {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">toDouble</span>(): <span class="type-link" data-type="kotlin.Double">Double</span> {};</div></div>
<div class="line" data-text="fun toString(): String {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">toString</span>(): <span class="type-link" data-type="kotlin.String">String</span> {};</div></div>
<div class="line" data-text="fun equals(arg0: Any): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">equals</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Any">Any</span>): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="}" style="opacity: 0;"><div>}</div></div>
<div class="line" data-text="" style="opacity: 0;"></div></div></div>
			
	<div id="hover-preview" style="
	  position: fixed;
	  overflow: auto;
	  background: #2b2b2b;
	  color: #ddd;
	  border: 1px solid #444;
	  border-radius: 6px;
	  font-size: 13px;
	  padding: 8px;
	  display: none;
	  z-index: 50;
	  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.5);
	  pointer-events: auto;
	">
	  <div id="hover-content"></div>
	</div>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/constantsPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/consoleViewer.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/classPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/searchBarViewer.js"></script>
		  </body>
		  </html>
[Log] <!DOCTYPE html>
		  <html lang="en">
		  <head>
			<meta charset="UTF-8">
			<style>
			  
		#class-search-bar {
		display: flex;
		align-items: center;
		gap: 8px;
		padding: 8px 12px;
		background: #2b2b2b;
		border-bottom: 1px solid #444;
		z-index: 150;
		position: relative;
		}

		#class-search-results {
		position: absolute;
		top: 100%;
		left: 0;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: 100%;
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
		}

			  
	@keyframes pop {
	  0% { transform: scale(1); }
	  50% { transform: scale(1.04); }
	  100% { transform: scale(1.035); }
	}
			  
	body {
	  margin: 0;
	  font-family: Consolas, monospace;
	  background: #1e1e1e;
	  color: rgb(210, 222, 174);
	  padding: 16px;
	}
			  
	#main {
	  cursor: text;
	  flex-grow: 1;
	  height: 100vh;
	  overflow: visible;
	  padding: 16px;
	  box-sizing: border-box;
	}
  
	.kw {
	  color: rgba(76, 156, 222, 0.93);
	  font-weight: bold;
	}
  
	.annotation {
	  color: rgb(238, 223, 154);
	}
  
	.type-link {
	  color: rgba(108, 220, 175, 0.92);
	  cursor: default;
	  text-decoration: none;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link {
	  cursor: pointer;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link:hover {
	  color: rgba(158, 234, 203, 0.92);
	  text-decoration: underline;
	  display: inline-block;
	  animation: pop 0.17s ease-in-out forwards;
	}
  
	.ident {
	  color: #9cdcfe;
	}
  
	.method-name {
	  color: rgba(231, 229, 151, 0.92);
	}
  
	.arg-name {
	  color: rgba(104, 208, 237, 0.97);
	}
  
	.line {
	  opacity: 0;
	  transition: opacity 0.05s linear;
	}
			  
	.highlight-box {
	  position: absolute;
	  background-color: rgba(255, 160, 80, 0.35);
	  border-radius: 2px;
	}
  
	.highlight-box.current {
	  outline: 1px solid #3794ff;
	  background-color: rgba(55, 148, 255, 0.3);
	  box-shadow: 0 0 4px #3794ff99;
	  z-index: 60;
	}
  
	.debug-overlay-wrapper {
	  position: fixed;
	  pointer-events: none;
	  z-index: 10000;
	}
  
	.debug-overlay-wrapper > div {
	  position: absolute;
	  pointer-events: auto;
	  background: rgba(255, 0, 0, 0.2);
	}
  
	#search-bar button {
	  background-color: rgba(30, 30, 30, 0.27);
	  color: white;
	  border: 1px solid #555;
	  border-radius: 6px;
	  padding: 4px 8px;
	  cursor: pointer;
	  transition: all 0.2s ease-in-out;
	  font-size: 13px;
	  font-family: inherit;
	  user-select: none;
	}
  
	#search-bar button.active {
	  background-color: #094771;
	  border-color: #3794ff;
	  color: white;
	}
			</style>
		  </head>
		  <body>
		    
	<div id="class-search-bar" style="
	  display: flex;
	  align-items: center;
	  gap: 8px;
	  padding: 8px 12px;
	  background: #2b2b2b;
	  border-bottom: 1px solid #444;
	  z-index: 150;
	">
	  <input id="class-search-input" type="text" placeholder="Search classes..." style="
		flex-grow: 1;
		padding: 6px 10px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 6px;
		font-family: inherit;
	  ">
	  <div id="class-search-results" style="
		position: absolute;
		top: 42px;
		left: 12px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: calc(100% - 24px);
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
	  "></div>
	</div>
			
	<div id="search-bar" style="
	  display: none;
	  position: fixed;
	  top: 8px;
	  right: 8px;
	  z-index: 200;
	  background: #2c2c2c;
	  padding: 4px 8px;
	  border-radius: 4px;
	  display: flex;
	  gap: 4px;
	  align-items: center;
	">
	  <input type="text" id="search-input" placeholder="Search..." style="
		width: 180px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		padding: 4px;
	  " />
	  <button id="toggle-case" title="Match Case">Aa</button>
	  <button id="toggle-whole" title="Whole Word">â›¶</button>
	  <button id="toggle-regex" title="Regex">*</button>
	  <span id="search-count" style="
		color: white;
		min-width: 30px;
		text-align: center;
		font-size: 13px;
		font-family: Arial, sans-serif;
	  ">No Results</span>
	  <button id="search-prev" title="Previous Match">â†‘</button>
	  <button id="search-next" title="Next Match">â†“</button>
	  <button id="search-close" title="Close Search" style="margin-left: auto;">âœ–</button>
	</div>
			
  <div id="console-output" style="
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 160px;
    background: #111;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    overflow-y: auto;
    padding: 24px 10px 6px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
    <button id="console-minimize" style="
      position: absolute;
      top: 4px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 2px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">â€“</button>
    <div id="console-content"></div>
  </div>

  <div id="console-bar" style="
    display: none;
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 24px;
    background: #222;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
  	<span>Console</span>
    <button id="console-restore" style="
      position: absolute;
      top: 1px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 1px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">+</button>
  </div>
			<div id="main"><div class="line" data-text="package kotlin" style="opacity: 0;"><div><span class="kw">package</span> <span class="type-link" data-package="kotlin"><span class="ident">kotlin</span></span></div><br></div>
<div class="line" data-text=" class ByteArray {" style="opacity: 0;"><div id="current-class"> <span class="kw">class</span> <span class="ident">ByteArray</span> {</div></div>
<div class="line" data-text="fun get(arg0: Int): Byte {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">get</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="kotlin.Byte">Byte</span> {};</div></div>
<div class="line" data-text="fun set(arg0: Int, arg1: Byte): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">set</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="kotlin.Byte">Byte</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun size(): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">size</span>(): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun iterator(): ByteIterator {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">iterator</span>(): <span class="type-link" data-type="kotlin.collections.ByteIterator">ByteIterator</span> {};</div></div>
<div class="line" data-text="}" style="opacity: 0;"><div>}</div></div>
<div class="line" data-text="" style="opacity: 0;"></div></div></div>
			
	<div id="hover-preview" style="
	  position: fixed;
	  overflow: auto;
	  background: #2b2b2b;
	  color: #ddd;
	  border: 1px solid #444;
	  border-radius: 6px;
	  font-size: 13px;
	  padding: 8px;
	  display: none;
	  z-index: 50;
	  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.5);
	  pointer-events: auto;
	">
	  <div id="hover-content"></div>
	</div>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/constantsPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/consoleViewer.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/classPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/searchBarViewer.js"></script>
		  </body>
		  </html>
[Log] <!DOCTYPE html>
		  <html lang="en">
		  <head>
			<meta charset="UTF-8">
			<style>
			  
		#class-search-bar {
		display: flex;
		align-items: center;
		gap: 8px;
		padding: 8px 12px;
		background: #2b2b2b;
		border-bottom: 1px solid #444;
		z-index: 150;
		position: relative;
		}

		#class-search-results {
		position: absolute;
		top: 100%;
		left: 0;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: 100%;
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
		}

			  
	@keyframes pop {
	  0% { transform: scale(1); }
	  50% { transform: scale(1.04); }
	  100% { transform: scale(1.035); }
	}
			  
	body {
	  margin: 0;
	  font-family: Consolas, monospace;
	  background: #1e1e1e;
	  color: rgb(210, 222, 174);
	  padding: 16px;
	}
			  
	#main {
	  cursor: text;
	  flex-grow: 1;
	  height: 100vh;
	  overflow: visible;
	  padding: 16px;
	  box-sizing: border-box;
	}
  
	.kw {
	  color: rgba(76, 156, 222, 0.93);
	  font-weight: bold;
	}
  
	.annotation {
	  color: rgb(238, 223, 154);
	}
  
	.type-link {
	  color: rgba(108, 220, 175, 0.92);
	  cursor: default;
	  text-decoration: none;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link {
	  cursor: pointer;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link:hover {
	  color: rgba(158, 234, 203, 0.92);
	  text-decoration: underline;
	  display: inline-block;
	  animation: pop 0.17s ease-in-out forwards;
	}
  
	.ident {
	  color: #9cdcfe;
	}
  
	.method-name {
	  color: rgba(231, 229, 151, 0.92);
	}
  
	.arg-name {
	  color: rgba(104, 208, 237, 0.97);
	}
  
	.line {
	  opacity: 0;
	  transition: opacity 0.05s linear;
	}
			  
	.highlight-box {
	  position: absolute;
	  background-color: rgba(255, 160, 80, 0.35);
	  border-radius: 2px;
	}
  
	.highlight-box.current {
	  outline: 1px solid #3794ff;
	  background-color: rgba(55, 148, 255, 0.3);
	  box-shadow: 0 0 4px #3794ff99;
	  z-index: 60;
	}
  
	.debug-overlay-wrapper {
	  position: fixed;
	  pointer-events: none;
	  z-index: 10000;
	}
  
	.debug-overlay-wrapper > div {
	  position: absolute;
	  pointer-events: auto;
	  background: rgba(255, 0, 0, 0.2);
	}
  
	#search-bar button {
	  background-color: rgba(30, 30, 30, 0.27);
	  color: white;
	  border: 1px solid #555;
	  border-radius: 6px;
	  padding: 4px 8px;
	  cursor: pointer;
	  transition: all 0.2s ease-in-out;
	  font-size: 13px;
	  font-family: inherit;
	  user-select: none;
	}
  
	#search-bar button.active {
	  background-color: #094771;
	  border-color: #3794ff;
	  color: white;
	}
			</style>
		  </head>
		  <body>
		    
	<div id="class-search-bar" style="
	  display: flex;
	  align-items: center;
	  gap: 8px;
	  padding: 8px 12px;
	  background: #2b2b2b;
	  border-bottom: 1px solid #444;
	  z-index: 150;
	">
	  <input id="class-search-input" type="text" placeholder="Search classes..." style="
		flex-grow: 1;
		padding: 6px 10px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 6px;
		font-family: inherit;
	  ">
	  <div id="class-search-results" style="
		position: absolute;
		top: 42px;
		left: 12px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: calc(100% - 24px);
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
	  "></div>
	</div>
			
	<div id="search-bar" style="
	  display: none;
	  position: fixed;
	  top: 8px;
	  right: 8px;
	  z-index: 200;
	  background: #2c2c2c;
	  padding: 4px 8px;
	  border-radius: 4px;
	  display: flex;
	  gap: 4px;
	  align-items: center;
	">
	  <input type="text" id="search-input" placeholder="Search..." style="
		width: 180px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		padding: 4px;
	  " />
	  <button id="toggle-case" title="Match Case">Aa</button>
	  <button id="toggle-whole" title="Whole Word">â›¶</button>
	  <button id="toggle-regex" title="Regex">*</button>
	  <span id="search-count" style="
		color: white;
		min-width: 30px;
		text-align: center;
		font-size: 13px;
		font-family: Arial, sans-serif;
	  ">No Results</span>
	  <button id="search-prev" title="Previous Match">â†‘</button>
	  <button id="search-next" title="Next Match">â†“</button>
	  <button id="search-close" title="Close Search" style="margin-left: auto;">âœ–</button>
	</div>
			
  <div id="console-output" style="
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 160px;
    background: #111;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    overflow-y: auto;
    padding: 24px 10px 6px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
    <button id="console-minimize" style="
      position: absolute;
      top: 4px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 2px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">â€“</button>
    <div id="console-content"></div>
  </div>

  <div id="console-bar" style="
    display: none;
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 24px;
    background: #222;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
  	<span>Console</span>
    <button id="console-restore" style="
      position: absolute;
      top: 1px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 1px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">+</button>
  </div>
			<div id="main"><div class="line" data-text="package java.util.function" style="opacity: 0;"><div><span class="kw">package</span> <span class="type-link" data-package="java"><span class="ident">java</span></span><span>.</span><span class="type-link" data-package="java.util"><span class="ident">util</span></span><span>.</span><span class="type-link" data-package="java.util.function"><span class="ident">function</span></span></div><br></div>
<div class="line" data-text=" interface Consumer<T> {" style="opacity: 0;"><div id="current-class"> <span class="kw">interface</span> <span class="ident">Consumer</span>&lt;<span class="ident">T</span>&gt; {</div></div>
<div class="line" data-text="fun accept(arg0: T): Unit;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">accept</span>(<span class="arg-name">arg0</span>: <span class="ident">T</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span>;</div></div>
<div class="line" data-text="fun andThen(arg0: Consumer<in T>): Consumer<T> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">andThen</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.function.Consumer">Consumer</span>&lt;<span class="kw">in</span> <span class="ident">T</span>&gt;): <span class="type-link" data-type="java.util.function.Consumer">Consumer</span>&lt;<span class="ident">T</span>&gt; {};</div></div>
<div class="line" data-text="}" style="opacity: 0;"><div>}</div></div>
<div class="line" data-text="" style="opacity: 0;"></div></div></div>
			
	<div id="hover-preview" style="
	  position: fixed;
	  overflow: auto;
	  background: #2b2b2b;
	  color: #ddd;
	  border: 1px solid #444;
	  border-radius: 6px;
	  font-size: 13px;
	  padding: 8px;
	  display: none;
	  z-index: 50;
	  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.5);
	  pointer-events: auto;
	">
	  <div id="hover-content"></div>
	</div>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/constantsPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/consoleViewer.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/classPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/searchBarViewer.js"></script>
		  </body>
		  </html>
[Log] <!DOCTYPE html>
		  <html lang="en">
		  <head>
			<meta charset="UTF-8">
			<style>
			  
		#class-search-bar {
		display: flex;
		align-items: center;
		gap: 8px;
		padding: 8px 12px;
		background: #2b2b2b;
		border-bottom: 1px solid #444;
		z-index: 150;
		position: relative;
		}

		#class-search-results {
		position: absolute;
		top: 100%;
		left: 0;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: 100%;
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
		}

			  
	@keyframes pop {
	  0% { transform: scale(1); }
	  50% { transform: scale(1.04); }
	  100% { transform: scale(1.035); }
	}
			  
	body {
	  margin: 0;
	  font-family: Consolas, monospace;
	  background: #1e1e1e;
	  color: rgb(210, 222, 174);
	  padding: 16px;
	}
			  
	#main {
	  cursor: text;
	  flex-grow: 1;
	  height: 100vh;
	  overflow: visible;
	  padding: 16px;
	  box-sizing: border-box;
	}
  
	.kw {
	  color: rgba(76, 156, 222, 0.93);
	  font-weight: bold;
	}
  
	.annotation {
	  color: rgb(238, 223, 154);
	}
  
	.type-link {
	  color: rgba(108, 220, 175, 0.92);
	  cursor: default;
	  text-decoration: none;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link {
	  cursor: pointer;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link:hover {
	  color: rgba(158, 234, 203, 0.92);
	  text-decoration: underline;
	  display: inline-block;
	  animation: pop 0.17s ease-in-out forwards;
	}
  
	.ident {
	  color: #9cdcfe;
	}
  
	.method-name {
	  color: rgba(231, 229, 151, 0.92);
	}
  
	.arg-name {
	  color: rgba(104, 208, 237, 0.97);
	}
  
	.line {
	  opacity: 0;
	  transition: opacity 0.05s linear;
	}
			  
	.highlight-box {
	  position: absolute;
	  background-color: rgba(255, 160, 80, 0.35);
	  border-radius: 2px;
	}
  
	.highlight-box.current {
	  outline: 1px solid #3794ff;
	  background-color: rgba(55, 148, 255, 0.3);
	  box-shadow: 0 0 4px #3794ff99;
	  z-index: 60;
	}
  
	.debug-overlay-wrapper {
	  position: fixed;
	  pointer-events: none;
	  z-index: 10000;
	}
  
	.debug-overlay-wrapper > div {
	  position: absolute;
	  pointer-events: auto;
	  background: rgba(255, 0, 0, 0.2);
	}
  
	#search-bar button {
	  background-color: rgba(30, 30, 30, 0.27);
	  color: white;
	  border: 1px solid #555;
	  border-radius: 6px;
	  padding: 4px 8px;
	  cursor: pointer;
	  transition: all 0.2s ease-in-out;
	  font-size: 13px;
	  font-family: inherit;
	  user-select: none;
	}
  
	#search-bar button.active {
	  background-color: #094771;
	  border-color: #3794ff;
	  color: white;
	}
			</style>
		  </head>
		  <body>
		    
	<div id="class-search-bar" style="
	  display: flex;
	  align-items: center;
	  gap: 8px;
	  padding: 8px 12px;
	  background: #2b2b2b;
	  border-bottom: 1px solid #444;
	  z-index: 150;
	">
	  <input id="class-search-input" type="text" placeholder="Search classes..." style="
		flex-grow: 1;
		padding: 6px 10px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 6px;
		font-family: inherit;
	  ">
	  <div id="class-search-results" style="
		position: absolute;
		top: 42px;
		left: 12px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: calc(100% - 24px);
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
	  "></div>
	</div>
			
	<div id="search-bar" style="
	  display: none;
	  position: fixed;
	  top: 8px;
	  right: 8px;
	  z-index: 200;
	  background: #2c2c2c;
	  padding: 4px 8px;
	  border-radius: 4px;
	  display: flex;
	  gap: 4px;
	  align-items: center;
	">
	  <input type="text" id="search-input" placeholder="Search..." style="
		width: 180px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		padding: 4px;
	  " />
	  <button id="toggle-case" title="Match Case">Aa</button>
	  <button id="toggle-whole" title="Whole Word">â›¶</button>
	  <button id="toggle-regex" title="Regex">*</button>
	  <span id="search-count" style="
		color: white;
		min-width: 30px;
		text-align: center;
		font-size: 13px;
		font-family: Arial, sans-serif;
	  ">No Results</span>
	  <button id="search-prev" title="Previous Match">â†‘</button>
	  <button id="search-next" title="Next Match">â†“</button>
	  <button id="search-close" title="Close Search" style="margin-left: auto;">âœ–</button>
	</div>
			
  <div id="console-output" style="
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 160px;
    background: #111;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    overflow-y: auto;
    padding: 24px 10px 6px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
    <button id="console-minimize" style="
      position: absolute;
      top: 4px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 2px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">â€“</button>
    <div id="console-content"></div>
  </div>

  <div id="console-bar" style="
    display: none;
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 24px;
    background: #222;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
  	<span>Console</span>
    <button id="console-restore" style="
      position: absolute;
      top: 1px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 1px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">+</button>
  </div>
			<div id="main"><div class="line" data-text="package kotlin" style="opacity: 0;"><div><span class="kw">package</span> <span class="type-link" data-package="kotlin"><span class="ident">kotlin</span></span></div><br></div>
<div class="line" data-text="final class Unit {" style="opacity: 0;"><div id="current-class"><span class="kw">final</span> <span class="kw">class</span> <span class="ident">Unit</span> {</div></div>
<div class="line" data-text="companion object {" style="opacity: 0;"><br><div style="padding-left: 2em"><span class="kw">companion object</span> {</div></div>
<div class="line" data-text="@JvmStaticfinal val INSTANCE: Unit;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">final</span> <span class="kw">val</span> <span class="ident">INSTANCE</span>: <span class="type-link" data-type="kotlin.Unit">Unit</span>;</div></div>
<div class="line" data-text="}" style="opacity: 0;"><div style="padding-left: 2em">}</div></div>
<div class="line" data-text="}" style="opacity: 0;"><div>}</div></div>
<div class="line" data-text="" style="opacity: 0;"></div></div></div>
			
	<div id="hover-preview" style="
	  position: fixed;
	  overflow: auto;
	  background: #2b2b2b;
	  color: #ddd;
	  border: 1px solid #444;
	  border-radius: 6px;
	  font-size: 13px;
	  padding: 8px;
	  display: none;
	  z-index: 50;
	  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.5);
	  pointer-events: auto;
	">
	  <div id="hover-content"></div>
	</div>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/constantsPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/consoleViewer.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/classPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/searchBarViewer.js"></script>
		  </body>
		  </html>
[Log] <!DOCTYPE html>
		  <html lang="en">
		  <head>
			<meta charset="UTF-8">
			<style>
			  
		#class-search-bar {
		display: flex;
		align-items: center;
		gap: 8px;
		padding: 8px 12px;
		background: #2b2b2b;
		border-bottom: 1px solid #444;
		z-index: 150;
		position: relative;
		}

		#class-search-results {
		position: absolute;
		top: 100%;
		left: 0;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: 100%;
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
		}

			  
	@keyframes pop {
	  0% { transform: scale(1); }
	  50% { transform: scale(1.04); }
	  100% { transform: scale(1.035); }
	}
			  
	body {
	  margin: 0;
	  font-family: Consolas, monospace;
	  background: #1e1e1e;
	  color: rgb(210, 222, 174);
	  padding: 16px;
	}
			  
	#main {
	  cursor: text;
	  flex-grow: 1;
	  height: 100vh;
	  overflow: visible;
	  padding: 16px;
	  box-sizing: border-box;
	}
  
	.kw {
	  color: rgba(76, 156, 222, 0.93);
	  font-weight: bold;
	}
  
	.annotation {
	  color: rgb(238, 223, 154);
	}
  
	.type-link {
	  color: rgba(108, 220, 175, 0.92);
	  cursor: default;
	  text-decoration: none;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link {
	  cursor: pointer;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link:hover {
	  color: rgba(158, 234, 203, 0.92);
	  text-decoration: underline;
	  display: inline-block;
	  animation: pop 0.17s ease-in-out forwards;
	}
  
	.ident {
	  color: #9cdcfe;
	}
  
	.method-name {
	  color: rgba(231, 229, 151, 0.92);
	}
  
	.arg-name {
	  color: rgba(104, 208, 237, 0.97);
	}
  
	.line {
	  opacity: 0;
	  transition: opacity 0.05s linear;
	}
			  
	.highlight-box {
	  position: absolute;
	  background-color: rgba(255, 160, 80, 0.35);
	  border-radius: 2px;
	}
  
	.highlight-box.current {
	  outline: 1px solid #3794ff;
	  background-color: rgba(55, 148, 255, 0.3);
	  box-shadow: 0 0 4px #3794ff99;
	  z-index: 60;
	}
  
	.debug-overlay-wrapper {
	  position: fixed;
	  pointer-events: none;
	  z-index: 10000;
	}
  
	.debug-overlay-wrapper > div {
	  position: absolute;
	  pointer-events: auto;
	  background: rgba(255, 0, 0, 0.2);
	}
  
	#search-bar button {
	  background-color: rgba(30, 30, 30, 0.27);
	  color: white;
	  border: 1px solid #555;
	  border-radius: 6px;
	  padding: 4px 8px;
	  cursor: pointer;
	  transition: all 0.2s ease-in-out;
	  font-size: 13px;
	  font-family: inherit;
	  user-select: none;
	}
  
	#search-bar button.active {
	  background-color: #094771;
	  border-color: #3794ff;
	  color: white;
	}
			</style>
		  </head>
		  <body>
		    
	<div id="class-search-bar" style="
	  display: flex;
	  align-items: center;
	  gap: 8px;
	  padding: 8px 12px;
	  background: #2b2b2b;
	  border-bottom: 1px solid #444;
	  z-index: 150;
	">
	  <input id="class-search-input" type="text" placeholder="Search classes..." style="
		flex-grow: 1;
		padding: 6px 10px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 6px;
		font-family: inherit;
	  ">
	  <div id="class-search-results" style="
		position: absolute;
		top: 42px;
		left: 12px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: calc(100% - 24px);
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
	  "></div>
	</div>
			
	<div id="search-bar" style="
	  display: none;
	  position: fixed;
	  top: 8px;
	  right: 8px;
	  z-index: 200;
	  background: #2c2c2c;
	  padding: 4px 8px;
	  border-radius: 4px;
	  display: flex;
	  gap: 4px;
	  align-items: center;
	">
	  <input type="text" id="search-input" placeholder="Search..." style="
		width: 180px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		padding: 4px;
	  " />
	  <button id="toggle-case" title="Match Case">Aa</button>
	  <button id="toggle-whole" title="Whole Word">â›¶</button>
	  <button id="toggle-regex" title="Regex">*</button>
	  <span id="search-count" style="
		color: white;
		min-width: 30px;
		text-align: center;
		font-size: 13px;
		font-family: Arial, sans-serif;
	  ">No Results</span>
	  <button id="search-prev" title="Previous Match">â†‘</button>
	  <button id="search-next" title="Next Match">â†“</button>
	  <button id="search-close" title="Close Search" style="margin-left: auto;">âœ–</button>
	</div>
			
  <div id="console-output" style="
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 160px;
    background: #111;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    overflow-y: auto;
    padding: 24px 10px 6px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
    <button id="console-minimize" style="
      position: absolute;
      top: 4px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 2px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">â€“</button>
    <div id="console-content"></div>
  </div>

  <div id="console-bar" style="
    display: none;
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 24px;
    background: #222;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
  	<span>Console</span>
    <button id="console-restore" style="
      position: absolute;
      top: 1px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 1px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">+</button>
  </div>
			<div id="main"><div class="line" data-text="package kotlin.jvm" style="opacity: 0;"><div><span class="kw">package</span> <span class="type-link" data-package="kotlin"><span class="ident">kotlin</span></span><span>.</span><span class="type-link" data-package="kotlin.jvm"><span class="ident">jvm</span></span></div><br></div>
<div class="line" data-text=" interface JvmStatic : Annotation {" style="opacity: 0;"><div id="current-class"> <span class="kw">interface</span> <span class="ident">JvmStatic</span> : <span class="type-link" data-type="java.lang.annotation.Annotation">Annotation</span> {</div></div>
<div class="line" data-text="fun annotationType(): Class<out Annotation>;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">annotationType</span>(): <span class="type-link" data-type="java.lang.Class">Class</span>&lt;<span class="kw">out</span> <span class="type-link" data-type="java.lang.annotation.Annotation">Annotation</span>&gt;;</div></div>
<div class="line" data-text="}" style="opacity: 0;"><div>}</div></div>
<div class="line" data-text="" style="opacity: 0;"></div></div></div>
			
	<div id="hover-preview" style="
	  position: fixed;
	  overflow: auto;
	  background: #2b2b2b;
	  color: #ddd;
	  border: 1px solid #444;
	  border-radius: 6px;
	  font-size: 13px;
	  padding: 8px;
	  display: none;
	  z-index: 50;
	  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.5);
	  pointer-events: auto;
	">
	  <div id="hover-content"></div>
	</div>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/constantsPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/consoleViewer.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/classPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/searchBarViewer.js"></script>
		  </body>
		  </html>
[Log] Closed document: file:///d%3A/minecraft/instances/1.21%20fab/package.json
[Log] <!DOCTYPE html>
		  <html lang="en">
		  <head>
			<meta charset="UTF-8">
			<style>
			  
		#class-search-bar {
		display: flex;
		align-items: center;
		gap: 8px;
		padding: 8px 12px;
		background: #2b2b2b;
		border-bottom: 1px solid #444;
		z-index: 150;
		position: relative;
		}

		#class-search-results {
		position: absolute;
		top: 100%;
		left: 0;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: 100%;
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
		}

			  
	@keyframes pop {
	  0% { transform: scale(1); }
	  50% { transform: scale(1.04); }
	  100% { transform: scale(1.035); }
	}
			  
	body {
	  margin: 0;
	  font-family: Consolas, monospace;
	  background: #1e1e1e;
	  color: rgb(210, 222, 174);
	  padding: 16px;
	}
			  
	#main {
	  cursor: text;
	  flex-grow: 1;
	  height: 100vh;
	  overflow: visible;
	  padding: 16px;
	  box-sizing: border-box;
	}
  
	.kw {
	  color: rgba(76, 156, 222, 0.93);
	  font-weight: bold;
	}
  
	.annotation {
	  color: rgb(238, 223, 154);
	}
  
	.type-link {
	  color: rgba(108, 220, 175, 0.92);
	  cursor: default;
	  text-decoration: none;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link {
	  cursor: pointer;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link:hover {
	  color: rgba(158, 234, 203, 0.92);
	  text-decoration: underline;
	  display: inline-block;
	  animation: pop 0.17s ease-in-out forwards;
	}
  
	.ident {
	  color: #9cdcfe;
	}
  
	.method-name {
	  color: rgba(231, 229, 151, 0.92);
	}
  
	.arg-name {
	  color: rgba(104, 208, 237, 0.97);
	}
  
	.line {
	  opacity: 0;
	  transition: opacity 0.05s linear;
	}
			  
	.highlight-box {
	  position: absolute;
	  background-color: rgba(255, 160, 80, 0.35);
	  border-radius: 2px;
	}
  
	.highlight-box.current {
	  outline: 1px solid #3794ff;
	  background-color: rgba(55, 148, 255, 0.3);
	  box-shadow: 0 0 4px #3794ff99;
	  z-index: 60;
	}
  
	.debug-overlay-wrapper {
	  position: fixed;
	  pointer-events: none;
	  z-index: 10000;
	}
  
	.debug-overlay-wrapper > div {
	  position: absolute;
	  pointer-events: auto;
	  background: rgba(255, 0, 0, 0.2);
	}
  
	#search-bar button {
	  background-color: rgba(30, 30, 30, 0.27);
	  color: white;
	  border: 1px solid #555;
	  border-radius: 6px;
	  padding: 4px 8px;
	  cursor: pointer;
	  transition: all 0.2s ease-in-out;
	  font-size: 13px;
	  font-family: inherit;
	  user-select: none;
	}
  
	#search-bar button.active {
	  background-color: #094771;
	  border-color: #3794ff;
	  color: white;
	}
			</style>
		  </head>
		  <body>
		    
	<div id="class-search-bar" style="
	  display: flex;
	  align-items: center;
	  gap: 8px;
	  padding: 8px 12px;
	  background: #2b2b2b;
	  border-bottom: 1px solid #444;
	  z-index: 150;
	">
	  <input id="class-search-input" type="text" placeholder="Search classes..." style="
		flex-grow: 1;
		padding: 6px 10px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 6px;
		font-family: inherit;
	  ">
	  <div id="class-search-results" style="
		position: absolute;
		top: 42px;
		left: 12px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: calc(100% - 24px);
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
	  "></div>
	</div>
			
	<div id="search-bar" style="
	  display: none;
	  position: fixed;
	  top: 8px;
	  right: 8px;
	  z-index: 200;
	  background: #2c2c2c;
	  padding: 4px 8px;
	  border-radius: 4px;
	  display: flex;
	  gap: 4px;
	  align-items: center;
	">
	  <input type="text" id="search-input" placeholder="Search..." style="
		width: 180px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		padding: 4px;
	  " />
	  <button id="toggle-case" title="Match Case">Aa</button>
	  <button id="toggle-whole" title="Whole Word">â›¶</button>
	  <button id="toggle-regex" title="Regex">*</button>
	  <span id="search-count" style="
		color: white;
		min-width: 30px;
		text-align: center;
		font-size: 13px;
		font-family: Arial, sans-serif;
	  ">No Results</span>
	  <button id="search-prev" title="Previous Match">â†‘</button>
	  <button id="search-next" title="Next Match">â†“</button>
	  <button id="search-close" title="Close Search" style="margin-left: auto;">âœ–</button>
	</div>
			
  <div id="console-output" style="
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 160px;
    background: #111;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    overflow-y: auto;
    padding: 24px 10px 6px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
    <button id="console-minimize" style="
      position: absolute;
      top: 4px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 2px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">â€“</button>
    <div id="console-content"></div>
  </div>

  <div id="console-bar" style="
    display: none;
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 24px;
    background: #222;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
  	<span>Console</span>
    <button id="console-restore" style="
      position: absolute;
      top: 1px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 1px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">+</button>
  </div>
			<div id="main"><div class="line" data-text="package java.lang.annotation" style="opacity: 0;"><div><span class="kw">package</span> <span class="type-link" data-package="java"><span class="ident">java</span></span><span>.</span><span class="type-link" data-package="java.lang"><span class="ident">lang</span></span><span>.</span><span class="type-link" data-package="java.lang.annotation"><span class="ident">annotation</span></span></div><br></div>
<div class="line" data-text=" interface Annotation {" style="opacity: 0;"><div id="current-class"> <span class="kw">interface</span> <span class="ident">Annotation</span> {</div></div>
<div class="line" data-text="fun annotationType(): Class<out Annotation>;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">annotationType</span>(): <span class="type-link" data-type="java.lang.Class">Class</span>&lt;<span class="kw">out</span> <span class="type-link" data-type="java.lang.annotation.Annotation">Annotation</span>&gt;;</div></div>
<div class="line" data-text="}" style="opacity: 0;"><div>}</div></div>
<div class="line" data-text="" style="opacity: 0;"></div></div></div>
			
	<div id="hover-preview" style="
	  position: fixed;
	  overflow: auto;
	  background: #2b2b2b;
	  color: #ddd;
	  border: 1px solid #444;
	  border-radius: 6px;
	  font-size: 13px;
	  padding: 8px;
	  display: none;
	  z-index: 50;
	  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.5);
	  pointer-events: auto;
	">
	  <div id="hover-content"></div>
	</div>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/constantsPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/consoleViewer.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/classPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/searchBarViewer.js"></script>
		  </body>
		  </html>
[Log] <!DOCTYPE html>
		  <html lang="en">
		  <head>
			<meta charset="UTF-8">
			<style>
			  
		#class-search-bar {
		display: flex;
		align-items: center;
		gap: 8px;
		padding: 8px 12px;
		background: #2b2b2b;
		border-bottom: 1px solid #444;
		z-index: 150;
		position: relative;
		}

		#class-search-results {
		position: absolute;
		top: 100%;
		left: 0;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: 100%;
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
		}

			  
	@keyframes pop {
	  0% { transform: scale(1); }
	  50% { transform: scale(1.04); }
	  100% { transform: scale(1.035); }
	}
			  
	body {
	  margin: 0;
	  font-family: Consolas, monospace;
	  background: #1e1e1e;
	  color: rgb(210, 222, 174);
	  padding: 16px;
	}
			  
	#main {
	  cursor: text;
	  flex-grow: 1;
	  height: 100vh;
	  overflow: visible;
	  padding: 16px;
	  box-sizing: border-box;
	}
  
	.kw {
	  color: rgba(76, 156, 222, 0.93);
	  font-weight: bold;
	}
  
	.annotation {
	  color: rgb(238, 223, 154);
	}
  
	.type-link {
	  color: rgba(108, 220, 175, 0.92);
	  cursor: default;
	  text-decoration: none;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link {
	  cursor: pointer;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link:hover {
	  color: rgba(158, 234, 203, 0.92);
	  text-decoration: underline;
	  display: inline-block;
	  animation: pop 0.17s ease-in-out forwards;
	}
  
	.ident {
	  color: #9cdcfe;
	}
  
	.method-name {
	  color: rgba(231, 229, 151, 0.92);
	}
  
	.arg-name {
	  color: rgba(104, 208, 237, 0.97);
	}
  
	.line {
	  opacity: 0;
	  transition: opacity 0.05s linear;
	}
			  
	.highlight-box {
	  position: absolute;
	  background-color: rgba(255, 160, 80, 0.35);
	  border-radius: 2px;
	}
  
	.highlight-box.current {
	  outline: 1px solid #3794ff;
	  background-color: rgba(55, 148, 255, 0.3);
	  box-shadow: 0 0 4px #3794ff99;
	  z-index: 60;
	}
  
	.debug-overlay-wrapper {
	  position: fixed;
	  pointer-events: none;
	  z-index: 10000;
	}
  
	.debug-overlay-wrapper > div {
	  position: absolute;
	  pointer-events: auto;
	  background: rgba(255, 0, 0, 0.2);
	}
  
	#search-bar button {
	  background-color: rgba(30, 30, 30, 0.27);
	  color: white;
	  border: 1px solid #555;
	  border-radius: 6px;
	  padding: 4px 8px;
	  cursor: pointer;
	  transition: all 0.2s ease-in-out;
	  font-size: 13px;
	  font-family: inherit;
	  user-select: none;
	}
  
	#search-bar button.active {
	  background-color: #094771;
	  border-color: #3794ff;
	  color: white;
	}
			</style>
		  </head>
		  <body>
		    
	<div id="class-search-bar" style="
	  display: flex;
	  align-items: center;
	  gap: 8px;
	  padding: 8px 12px;
	  background: #2b2b2b;
	  border-bottom: 1px solid #444;
	  z-index: 150;
	">
	  <input id="class-search-input" type="text" placeholder="Search classes..." style="
		flex-grow: 1;
		padding: 6px 10px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 6px;
		font-family: inherit;
	  ">
	  <div id="class-search-results" style="
		position: absolute;
		top: 42px;
		left: 12px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: calc(100% - 24px);
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
	  "></div>
	</div>
			
	<div id="search-bar" style="
	  display: none;
	  position: fixed;
	  top: 8px;
	  right: 8px;
	  z-index: 200;
	  background: #2c2c2c;
	  padding: 4px 8px;
	  border-radius: 4px;
	  display: flex;
	  gap: 4px;
	  align-items: center;
	">
	  <input type="text" id="search-input" placeholder="Search..." style="
		width: 180px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		padding: 4px;
	  " />
	  <button id="toggle-case" title="Match Case">Aa</button>
	  <button id="toggle-whole" title="Whole Word">â›¶</button>
	  <button id="toggle-regex" title="Regex">*</button>
	  <span id="search-count" style="
		color: white;
		min-width: 30px;
		text-align: center;
		font-size: 13px;
		font-family: Arial, sans-serif;
	  ">No Results</span>
	  <button id="search-prev" title="Previous Match">â†‘</button>
	  <button id="search-next" title="Next Match">â†“</button>
	  <button id="search-close" title="Close Search" style="margin-left: auto;">âœ–</button>
	</div>
			
  <div id="console-output" style="
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 160px;
    background: #111;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    overflow-y: auto;
    padding: 24px 10px 6px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
    <button id="console-minimize" style="
      position: absolute;
      top: 4px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 2px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">â€“</button>
    <div id="console-content"></div>
  </div>

  <div id="console-bar" style="
    display: none;
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 24px;
    background: #222;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
  	<span>Console</span>
    <button id="console-restore" style="
      position: absolute;
      top: 1px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 1px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">+</button>
  </div>
			<div id="main"><div class="line" data-text="package java.lang.invoke" style="opacity: 0;"><div><span class="kw">package</span> <span class="type-link" data-package="java"><span class="ident">java</span></span><span>.</span><span class="type-link" data-package="java.lang"><span class="ident">lang</span></span><span>.</span><span class="type-link" data-package="java.lang.invoke"><span class="ident">invoke</span></span></div><br></div>
<div class="line" data-text=" interface TypeDescriptor$OfField<F : TypeDescriptor$OfField<F>> : TypeDescriptor {" style="opacity: 0;"><div id="current-class"> <span class="kw">interface</span> <span class="ident">TypeDescriptor$OfField</span>&lt;<span class="ident">F</span> : <span class="type-link" data-type="java.lang.invoke.TypeDescriptor$OfField">TypeDescriptor$OfField</span>&lt;<span class="ident">F</span>&gt;&gt; : <span class="type-link" data-type="java.lang.invoke.TypeDescriptor">TypeDescriptor</span> {</div></div>
<div class="line" data-text="fun isArray(): Boolean;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">isArray</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span>;</div></div>
<div class="line" data-text="fun isPrimitive(): Boolean;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">isPrimitive</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span>;</div></div>
<div class="line" data-text="fun componentType(): F;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">componentType</span>(): <span class="ident">F</span>;</div></div>
<div class="line" data-text="fun arrayType(): F;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">arrayType</span>(): <span class="ident">F</span>;</div></div>
<div class="line" data-text="fun descriptorString(): String;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">descriptorString</span>(): <span class="type-link" data-type="java.lang.String">String</span>;</div></div>
<div class="line" data-text="}" style="opacity: 0;"><div>}</div></div>
<div class="line" data-text="" style="opacity: 0;"></div></div></div>
			
	<div id="hover-preview" style="
	  position: fixed;
	  overflow: auto;
	  background: #2b2b2b;
	  color: #ddd;
	  border: 1px solid #444;
	  border-radius: 6px;
	  font-size: 13px;
	  padding: 8px;
	  display: none;
	  z-index: 50;
	  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.5);
	  pointer-events: auto;
	">
	  <div id="hover-content"></div>
	</div>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/constantsPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/consoleViewer.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/classPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/searchBarViewer.js"></script>
		  </body>
		  </html>
[Log] <!DOCTYPE html>
		  <html lang="en">
		  <head>
			<meta charset="UTF-8">
			<style>
			  
		#class-search-bar {
		display: flex;
		align-items: center;
		gap: 8px;
		padding: 8px 12px;
		background: #2b2b2b;
		border-bottom: 1px solid #444;
		z-index: 150;
		position: relative;
		}

		#class-search-results {
		position: absolute;
		top: 100%;
		left: 0;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: 100%;
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
		}

			  
	@keyframes pop {
	  0% { transform: scale(1); }
	  50% { transform: scale(1.04); }
	  100% { transform: scale(1.035); }
	}
			  
	body {
	  margin: 0;
	  font-family: Consolas, monospace;
	  background: #1e1e1e;
	  color: rgb(210, 222, 174);
	  padding: 16px;
	}
			  
	#main {
	  cursor: text;
	  flex-grow: 1;
	  height: 100vh;
	  overflow: visible;
	  padding: 16px;
	  box-sizing: border-box;
	}
  
	.kw {
	  color: rgba(76, 156, 222, 0.93);
	  font-weight: bold;
	}
  
	.annotation {
	  color: rgb(238, 223, 154);
	}
  
	.type-link {
	  color: rgba(108, 220, 175, 0.92);
	  cursor: default;
	  text-decoration: none;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link {
	  cursor: pointer;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link:hover {
	  color: rgba(158, 234, 203, 0.92);
	  text-decoration: underline;
	  display: inline-block;
	  animation: pop 0.17s ease-in-out forwards;
	}
  
	.ident {
	  color: #9cdcfe;
	}
  
	.method-name {
	  color: rgba(231, 229, 151, 0.92);
	}
  
	.arg-name {
	  color: rgba(104, 208, 237, 0.97);
	}
  
	.line {
	  opacity: 0;
	  transition: opacity 0.05s linear;
	}
			  
	.highlight-box {
	  position: absolute;
	  background-color: rgba(255, 160, 80, 0.35);
	  border-radius: 2px;
	}
  
	.highlight-box.current {
	  outline: 1px solid #3794ff;
	  background-color: rgba(55, 148, 255, 0.3);
	  box-shadow: 0 0 4px #3794ff99;
	  z-index: 60;
	}
  
	.debug-overlay-wrapper {
	  position: fixed;
	  pointer-events: none;
	  z-index: 10000;
	}
  
	.debug-overlay-wrapper > div {
	  position: absolute;
	  pointer-events: auto;
	  background: rgba(255, 0, 0, 0.2);
	}
  
	#search-bar button {
	  background-color: rgba(30, 30, 30, 0.27);
	  color: white;
	  border: 1px solid #555;
	  border-radius: 6px;
	  padding: 4px 8px;
	  cursor: pointer;
	  transition: all 0.2s ease-in-out;
	  font-size: 13px;
	  font-family: inherit;
	  user-select: none;
	}
  
	#search-bar button.active {
	  background-color: #094771;
	  border-color: #3794ff;
	  color: white;
	}
			</style>
		  </head>
		  <body>
		    
	<div id="class-search-bar" style="
	  display: flex;
	  align-items: center;
	  gap: 8px;
	  padding: 8px 12px;
	  background: #2b2b2b;
	  border-bottom: 1px solid #444;
	  z-index: 150;
	">
	  <input id="class-search-input" type="text" placeholder="Search classes..." style="
		flex-grow: 1;
		padding: 6px 10px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 6px;
		font-family: inherit;
	  ">
	  <div id="class-search-results" style="
		position: absolute;
		top: 42px;
		left: 12px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: calc(100% - 24px);
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
	  "></div>
	</div>
			
	<div id="search-bar" style="
	  display: none;
	  position: fixed;
	  top: 8px;
	  right: 8px;
	  z-index: 200;
	  background: #2c2c2c;
	  padding: 4px 8px;
	  border-radius: 4px;
	  display: flex;
	  gap: 4px;
	  align-items: center;
	">
	  <input type="text" id="search-input" placeholder="Search..." style="
		width: 180px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		padding: 4px;
	  " />
	  <button id="toggle-case" title="Match Case">Aa</button>
	  <button id="toggle-whole" title="Whole Word">â›¶</button>
	  <button id="toggle-regex" title="Regex">*</button>
	  <span id="search-count" style="
		color: white;
		min-width: 30px;
		text-align: center;
		font-size: 13px;
		font-family: Arial, sans-serif;
	  ">No Results</span>
	  <button id="search-prev" title="Previous Match">â†‘</button>
	  <button id="search-next" title="Next Match">â†“</button>
	  <button id="search-close" title="Close Search" style="margin-left: auto;">âœ–</button>
	</div>
			
  <div id="console-output" style="
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 160px;
    background: #111;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    overflow-y: auto;
    padding: 24px 10px 6px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
    <button id="console-minimize" style="
      position: absolute;
      top: 4px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 2px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">â€“</button>
    <div id="console-content"></div>
  </div>

  <div id="console-bar" style="
    display: none;
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 24px;
    background: #222;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
  	<span>Console</span>
    <button id="console-restore" style="
      position: absolute;
      top: 1px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 1px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">+</button>
  </div>
			<div id="main"><div class="line" data-text="package java.lang" style="opacity: 0;"><div><span class="kw">package</span> <span class="type-link" data-package="java"><span class="ident">java</span></span><span>.</span><span class="type-link" data-package="java.lang"><span class="ident">lang</span></span></div><br></div>
<div class="line" data-text=" class Throwable : Serializable {" style="opacity: 0;"><div id="current-class"> <span class="kw">class</span> <span class="ident">Throwable</span> : <span class="type-link" data-type="java.io.Serializable">Serializable</span> {</div></div>
<div class="line" data-text="@Transientprivate val backtrace: Object;" style="opacity: 0;"><div style="padding-left: 2em"><span class="annotation">@Transient</span></div><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">backtrace</span>: <span class="type-link" data-type="java.lang.Object">Object</span>;</div></div>
<div class="line" data-text="private val detailMessage: String;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">detailMessage</span>: <span class="type-link" data-type="java.lang.String">String</span>;</div></div>
<div class="line" data-text="private val cause: Throwable;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">cause</span>: <span class="type-link" data-type="java.lang.Throwable">Throwable</span>;</div></div>
<div class="line" data-text="private val stackTrace: StackTraceElement[];" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">stackTrace</span>: <span class="type-link" data-type="java.lang.StackTraceElement">StackTraceElement</span>[];</div></div>
<div class="line" data-text="@Transientprivate val depth: Int;" style="opacity: 0;"><div style="padding-left: 2em"><span class="annotation">@Transient</span></div><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">depth</span>: <span class="type-link" data-type="kotlin.Int">Int</span>;</div></div>
<div class="line" data-text="private val suppressedExceptions: List<Throwable>;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">suppressedExceptions</span>: <span class="type-link" data-type="java.util.List">List</span>&lt;<span class="type-link" data-type="java.lang.Throwable">Throwable</span>&gt;;</div></div>
<div class="line" data-text="fun getMessage(): String {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getMessage</span>(): <span class="type-link" data-type="java.lang.String">String</span> {};</div></div>
<div class="line" data-text="fun getLocalizedMessage(): String {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getLocalizedMessage</span>(): <span class="type-link" data-type="java.lang.String">String</span> {};</div></div>
<div class="line" data-text="@Synchronizedfun getCause(): Throwable {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="annotation">@Synchronized</span></div><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getCause</span>(): <span class="type-link" data-type="java.lang.Throwable">Throwable</span> {};</div></div>
<div class="line" data-text="@Synchronizedfun initCause(arg0: Throwable): Throwable {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="annotation">@Synchronized</span></div><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">initCause</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.Throwable">Throwable</span>): <span class="type-link" data-type="java.lang.Throwable">Throwable</span> {};</div></div>
<div class="line" data-text="final fun setCause(arg0: Throwable): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">final</span> <span class="kw">fun</span> <span class="method-name">setCause</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.Throwable">Throwable</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun printStackTrace(): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">printStackTrace</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun printStackTrace(arg0: PrintStream): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">printStackTrace</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.io.PrintStream">PrintStream</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="private fun printStackTrace(arg0: Throwable$PrintStreamOrWriter): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">printStackTrace</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.Throwable$PrintStreamOrWriter">Throwable$PrintStreamOrWriter</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="private fun lockedPrintStackTrace(arg0: Throwable$PrintStreamOrWriter): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">lockedPrintStackTrace</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.Throwable$PrintStreamOrWriter">Throwable$PrintStreamOrWriter</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="private fun printEnclosedStackTrace(arg0: StackTraceElement[], arg1: String, arg2: String, arg3: Throwable$PrintStreamOrWriter, arg4: Set<Throwable>): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">printEnclosedStackTrace</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.StackTraceElement">StackTraceElement</span>[], <span class="arg-name">arg1</span>: <span class="type-link" data-type="java.lang.String">String</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="java.lang.String">String</span>, <span class="arg-name">arg3</span>: <span class="type-link" data-type="java.lang.Throwable$PrintStreamOrWriter">Throwable$PrintStreamOrWriter</span>, <span class="arg-name">arg4</span>: <span class="type-link" data-type="java.util.Set">Set</span>&lt;<span class="type-link" data-type="java.lang.Throwable">Throwable</span>&gt;): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun printStackTrace(arg0: PrintWriter): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">printStackTrace</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.io.PrintWriter">PrintWriter</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@Synchronizedfun fillInStackTrace(): Throwable {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="annotation">@Synchronized</span></div><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">fillInStackTrace</span>(): <span class="type-link" data-type="java.lang.Throwable">Throwable</span> {};</div></div>
<div class="line" data-text="private external fun fillInStackTrace(arg0: Int): Throwable;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">external</span> <span class="kw">fun</span> <span class="method-name">fillInStackTrace</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="java.lang.Throwable">Throwable</span>;</div></div>
<div class="line" data-text="fun getStackTrace(): StackTraceElement[] {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getStackTrace</span>(): <span class="type-link" data-type="java.lang.StackTraceElement">StackTraceElement</span>[] {};</div></div>
<div class="line" data-text="@Synchronizedprivate fun getOurStackTrace(): StackTraceElement[] {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="annotation">@Synchronized</span></div><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">getOurStackTrace</span>(): <span class="type-link" data-type="java.lang.StackTraceElement">StackTraceElement</span>[] {};</div></div>
<div class="line" data-text="fun setStackTrace(arg0: StackTraceElement[]): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">setStackTrace</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.StackTraceElement">StackTraceElement</span>[]): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="private fun readObject(arg0: ObjectInputStream): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">readObject</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.io.ObjectInputStream">ObjectInputStream</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="private fun validateSuppressedExceptionsList(arg0: List<Throwable>): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">validateSuppressedExceptionsList</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.List">List</span>&lt;<span class="type-link" data-type="java.lang.Throwable">Throwable</span>&gt;): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="@Synchronizedprivate fun writeObject(arg0: ObjectOutputStream): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="annotation">@Synchronized</span></div><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">writeObject</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.io.ObjectOutputStream">ObjectOutputStream</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@Synchronizedfinal fun addSuppressed(arg0: Throwable): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="annotation">@Synchronized</span></div><div style="padding-left: 2em"><span class="kw">final</span> <span class="kw">fun</span> <span class="method-name">addSuppressed</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.Throwable">Throwable</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@Synchronizedfinal fun getSuppressed(): Throwable[] {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="annotation">@Synchronized</span></div><div style="padding-left: 2em"><span class="kw">final</span> <span class="kw">fun</span> <span class="method-name">getSuppressed</span>(): <span class="type-link" data-type="java.lang.Throwable">Throwable</span>[] {};</div></div>
<div class="line" data-text="companion object {" style="opacity: 0;"><br><div style="padding-left: 2em"><span class="kw">companion object</span> {</div></div>
<div class="line" data-text="@JvmStaticprivate final val serialVersionUID: Long;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">serialVersionUID</span>: <span class="type-link" data-type="kotlin.Long">Long</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val UNASSIGNED_STACK: StackTraceElement[];" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">UNASSIGNED_STACK</span>: <span class="type-link" data-type="java.lang.StackTraceElement">StackTraceElement</span>[];</div></div>
<div class="line" data-text="@JvmStaticprivate final val SUPPRESSED_SENTINEL: List<Throwable>;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">SUPPRESSED_SENTINEL</span>: <span class="type-link" data-type="java.util.List">List</span>&lt;<span class="type-link" data-type="java.lang.Throwable">Throwable</span>&gt;;</div></div>
<div class="line" data-text="@JvmStaticprivate final val NULL_CAUSE_MESSAGE: String;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">NULL_CAUSE_MESSAGE</span>: <span class="type-link" data-type="java.lang.String">String</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val SELF_SUPPRESSION_MESSAGE: String;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">SELF_SUPPRESSION_MESSAGE</span>: <span class="type-link" data-type="java.lang.String">String</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val CAUSE_CAPTION: String;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">CAUSE_CAPTION</span>: <span class="type-link" data-type="java.lang.String">String</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val SUPPRESSED_CAPTION: String;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">SUPPRESSED_CAPTION</span>: <span class="type-link" data-type="java.lang.String">String</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val EMPTY_THROWABLE_ARRAY: Throwable[];" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">EMPTY_THROWABLE_ARRAY</span>: <span class="type-link" data-type="java.lang.Throwable">Throwable</span>[];</div></div>
<div class="line" data-text="}" style="opacity: 0;"><div style="padding-left: 2em">}</div></div>
<div class="line" data-text="}" style="opacity: 0;"><div>}</div></div>
<div class="line" data-text="" style="opacity: 0;"></div></div></div>
			
	<div id="hover-preview" style="
	  position: fixed;
	  overflow: auto;
	  background: #2b2b2b;
	  color: #ddd;
	  border: 1px solid #444;
	  border-radius: 6px;
	  font-size: 13px;
	  padding: 8px;
	  display: none;
	  z-index: 50;
	  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.5);
	  pointer-events: auto;
	">
	  <div id="hover-content"></div>
	</div>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/constantsPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/consoleViewer.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/classPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/searchBarViewer.js"></script>
		  </body>
		  </html>
[Log] <!DOCTYPE html>
		  <html lang="en">
		  <head>
			<meta charset="UTF-8">
			<style>
			  
		#class-search-bar {
		display: flex;
		align-items: center;
		gap: 8px;
		padding: 8px 12px;
		background: #2b2b2b;
		border-bottom: 1px solid #444;
		z-index: 150;
		position: relative;
		}

		#class-search-results {
		position: absolute;
		top: 100%;
		left: 0;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: 100%;
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
		}

			  
	@keyframes pop {
	  0% { transform: scale(1); }
	  50% { transform: scale(1.04); }
	  100% { transform: scale(1.035); }
	}
			  
	body {
	  margin: 0;
	  font-family: Consolas, monospace;
	  background: #1e1e1e;
	  color: rgb(210, 222, 174);
	  padding: 16px;
	}
			  
	#main {
	  cursor: text;
	  flex-grow: 1;
	  height: 100vh;
	  overflow: visible;
	  padding: 16px;
	  box-sizing: border-box;
	}
  
	.kw {
	  color: rgba(76, 156, 222, 0.93);
	  font-weight: bold;
	}
  
	.annotation {
	  color: rgb(238, 223, 154);
	}
  
	.type-link {
	  color: rgba(108, 220, 175, 0.92);
	  cursor: default;
	  text-decoration: none;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link {
	  cursor: pointer;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link:hover {
	  color: rgba(158, 234, 203, 0.92);
	  text-decoration: underline;
	  display: inline-block;
	  animation: pop 0.17s ease-in-out forwards;
	}
  
	.ident {
	  color: #9cdcfe;
	}
  
	.method-name {
	  color: rgba(231, 229, 151, 0.92);
	}
  
	.arg-name {
	  color: rgba(104, 208, 237, 0.97);
	}
  
	.line {
	  opacity: 0;
	  transition: opacity 0.05s linear;
	}
			  
	.highlight-box {
	  position: absolute;
	  background-color: rgba(255, 160, 80, 0.35);
	  border-radius: 2px;
	}
  
	.highlight-box.current {
	  outline: 1px solid #3794ff;
	  background-color: rgba(55, 148, 255, 0.3);
	  box-shadow: 0 0 4px #3794ff99;
	  z-index: 60;
	}
  
	.debug-overlay-wrapper {
	  position: fixed;
	  pointer-events: none;
	  z-index: 10000;
	}
  
	.debug-overlay-wrapper > div {
	  position: absolute;
	  pointer-events: auto;
	  background: rgba(255, 0, 0, 0.2);
	}
  
	#search-bar button {
	  background-color: rgba(30, 30, 30, 0.27);
	  color: white;
	  border: 1px solid #555;
	  border-radius: 6px;
	  padding: 4px 8px;
	  cursor: pointer;
	  transition: all 0.2s ease-in-out;
	  font-size: 13px;
	  font-family: inherit;
	  user-select: none;
	}
  
	#search-bar button.active {
	  background-color: #094771;
	  border-color: #3794ff;
	  color: white;
	}
			</style>
		  </head>
		  <body>
		    
	<div id="class-search-bar" style="
	  display: flex;
	  align-items: center;
	  gap: 8px;
	  padding: 8px 12px;
	  background: #2b2b2b;
	  border-bottom: 1px solid #444;
	  z-index: 150;
	">
	  <input id="class-search-input" type="text" placeholder="Search classes..." style="
		flex-grow: 1;
		padding: 6px 10px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 6px;
		font-family: inherit;
	  ">
	  <div id="class-search-results" style="
		position: absolute;
		top: 42px;
		left: 12px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: calc(100% - 24px);
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
	  "></div>
	</div>
			
	<div id="search-bar" style="
	  display: none;
	  position: fixed;
	  top: 8px;
	  right: 8px;
	  z-index: 200;
	  background: #2c2c2c;
	  padding: 4px 8px;
	  border-radius: 4px;
	  display: flex;
	  gap: 4px;
	  align-items: center;
	">
	  <input type="text" id="search-input" placeholder="Search..." style="
		width: 180px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		padding: 4px;
	  " />
	  <button id="toggle-case" title="Match Case">Aa</button>
	  <button id="toggle-whole" title="Whole Word">â›¶</button>
	  <button id="toggle-regex" title="Regex">*</button>
	  <span id="search-count" style="
		color: white;
		min-width: 30px;
		text-align: center;
		font-size: 13px;
		font-family: Arial, sans-serif;
	  ">No Results</span>
	  <button id="search-prev" title="Previous Match">â†‘</button>
	  <button id="search-next" title="Next Match">â†“</button>
	  <button id="search-close" title="Close Search" style="margin-left: auto;">âœ–</button>
	</div>
			
  <div id="console-output" style="
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 160px;
    background: #111;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    overflow-y: auto;
    padding: 24px 10px 6px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
    <button id="console-minimize" style="
      position: absolute;
      top: 4px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 2px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">â€“</button>
    <div id="console-content"></div>
  </div>

  <div id="console-bar" style="
    display: none;
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 24px;
    background: #222;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
  	<span>Console</span>
    <button id="console-restore" style="
      position: absolute;
      top: 1px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 1px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">+</button>
  </div>
			<div id="main"><div class="line" data-text="package java.lang" style="opacity: 0;"><div><span class="kw">package</span> <span class="type-link" data-package="java"><span class="ident">java</span></span><span>.</span><span class="type-link" data-package="java.lang"><span class="ident">lang</span></span></div><br></div>
<div class="line" data-text=" class ThreadLocal<T> {" style="opacity: 0;"><div id="current-class"> <span class="kw">class</span> <span class="ident">ThreadLocal</span>&lt;<span class="ident">T</span>&gt; {</div></div>
<div class="line" data-text="private final val threadLocalHashCode: Int;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">threadLocalHashCode</span>: <span class="type-link" data-type="kotlin.Int">Int</span>;</div></div>
<div class="line" data-text="protected fun initialValue(): T {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">protected</span> <span class="kw">fun</span> <span class="method-name">initialValue</span>(): <span class="ident">T</span> {};</div></div>
<div class="line" data-text="fun get(): T {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">get</span>(): <span class="ident">T</span> {};</div></div>
<div class="line" data-text="fun getCarrierThreadLocal(): T {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getCarrierThreadLocal</span>(): <span class="ident">T</span> {};</div></div>
<div class="line" data-text="private fun get(arg0: Thread): T {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">get</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.Thread">Thread</span>): <span class="ident">T</span> {};</div></div>
<div class="line" data-text="fun isCarrierThreadLocalPresent(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">isCarrierThreadLocalPresent</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="private fun isPresent(arg0: Thread): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">isPresent</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.Thread">Thread</span>): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="private fun setInitialValue(arg0: Thread): T {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">setInitialValue</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.Thread">Thread</span>): <span class="ident">T</span> {};</div></div>
<div class="line" data-text="fun set(arg0: T): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">set</span>(<span class="arg-name">arg0</span>: <span class="ident">T</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun setCarrierThreadLocal(arg0: T): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">setCarrierThreadLocal</span>(<span class="arg-name">arg0</span>: <span class="ident">T</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="private fun set(arg0: T, arg1: Thread): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">set</span>(<span class="arg-name">arg0</span>: <span class="ident">T</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="java.lang.Thread">Thread</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun remove(): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">remove</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun removeCarrierThreadLocal(): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">removeCarrierThreadLocal</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="private fun remove(arg0: Thread): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">remove</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.Thread">Thread</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun getMap(arg0: Thread): ThreadLocal$ThreadLocalMap {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getMap</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.Thread">Thread</span>): <span class="type-link" data-type="java.lang.ThreadLocal$ThreadLocalMap">ThreadLocal$ThreadLocalMap</span> {};</div></div>
<div class="line" data-text="fun createMap(arg0: T, arg1: Thread): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">createMap</span>(<span class="arg-name">arg0</span>: <span class="ident">T</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="java.lang.Thread">Thread</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun childValue(arg0: T): T {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">childValue</span>(<span class="arg-name">arg0</span>: <span class="ident">T</span>): <span class="ident">T</span> {};</div></div>
<div class="line" data-text="companion object {" style="opacity: 0;"><br><div style="padding-left: 2em"><span class="kw">companion object</span> {</div></div>
<div class="line" data-text="@JvmStaticprivate final val TRACE_VTHREAD_LOCALS: Boolean;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">TRACE_VTHREAD_LOCALS</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate val nextHashCode: AtomicInteger;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">nextHashCode</span>: <span class="type-link" data-type="java.util.concurrent.atomic.AtomicInteger">AtomicInteger</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val HASH_INCREMENT: Int;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">HASH_INCREMENT</span>: <span class="type-link" data-type="kotlin.Int">Int</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate fun nextHashCode(): Int {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">nextHashCode</span>(): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun withInitial(arg0: Supplier<out S>): ThreadLocal<S> {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">withInitial</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.function.Supplier">Supplier</span>&lt;<span class="kw">out</span> <span class="ident">S</span>&gt;): <span class="type-link" data-type="java.lang.ThreadLocal">ThreadLocal</span>&lt;<span class="ident">S</span>&gt; {};</div></div>
<div class="line" data-text="@JvmStaticfun createInheritedMap(arg0: ThreadLocal$ThreadLocalMap): ThreadLocal$ThreadLocalMap {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">createInheritedMap</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.ThreadLocal$ThreadLocalMap">ThreadLocal$ThreadLocalMap</span>): <span class="type-link" data-type="java.lang.ThreadLocal$ThreadLocalMap">ThreadLocal$ThreadLocalMap</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun traceVirtualThreadLocals(): Boolean {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">traceVirtualThreadLocals</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun dumpStackIfVirtualThread(): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">dumpStackIfVirtualThread</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="}" style="opacity: 0;"><div style="padding-left: 2em">}</div></div>
<div class="line" data-text="}" style="opacity: 0;"><div>}</div></div>
<div class="line" data-text="" style="opacity: 0;"></div></div></div>
			
	<div id="hover-preview" style="
	  position: fixed;
	  overflow: auto;
	  background: #2b2b2b;
	  color: #ddd;
	  border: 1px solid #444;
	  border-radius: 6px;
	  font-size: 13px;
	  padding: 8px;
	  display: none;
	  z-index: 50;
	  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.5);
	  pointer-events: auto;
	">
	  <div id="hover-content"></div>
	</div>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/constantsPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/consoleViewer.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/classPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/searchBarViewer.js"></script>
		  </body>
		  </html>
[Log] document has not changed
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=34, character=41
[Log] [prepareContext] No navigation_expression iNode found.
[Log] [provideCompletionItems] Setup preparation failed, exiting.
[Log] updating tokens
[Log] document has not changed
[Log] updating tokens
[Log] document has not changed
[Log] updating tokens
[Log] document has not changed
[Log] updating tokens
[Log] document has not changed
[Log] updating tokens
[Log] document has not changed
[Log] updating tokens
[Log] document has not changed
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=22, character=10
[Log] [prepareContext] Successfully prepared context.
[Log] [prepareContext] Found iNode type: navigation_expression, [prepareContext] Found iNode text: Minecraft.c
[Log] [provideCompletionItems] iNode (navigation_expression) type: navigation_expression, [provideCompletionItems] iNode (navigation_expression) text: Minecraft.c
[Log] [provideCompletionItems] No scope found for current position.
[Log] [resolveBaseType] Starting base type resolution...
[Log] [resolveBaseType] No lastChild found, using simple_identifier from current node
[Log] [resolveBaseType] No scoped variable found, falling back to resolveBaseTypeFromImports
[Log] [resolveBaseTypeFromImports] Starting import-based resolution...
[Log] [resolveBaseTypeFromImports] Checking 1 potential imports...
[Log] [resolveBaseTypeFromImports] Resolved from import: Minecraft
[Log] [resolveBaseType] Call is directly off class, setting isStaticClassCall = true
[Log] [resolveBaseType] Final resolved baseType: net.minecraft.client.Minecraft
[Log] [resolveBaseType] isCallOffClass: true
[Log] [resolveBaseType] isStaticClassCall: true
[Log] [resolveTypingsFromSuffixes] BaseType at start: net.minecraft.client.Minecraft
[Log] [resolveTypingsFromSuffixes] isCallOffClass: true
[Log] [resolveTypingsFromSuffixes] Found suffix: c, isMethodCall: false
[Log] [resolveTypingsFromSuffixes] Found refined suffixes: [
  "c"
]
[Log] [resolveTypingsFromSuffixes] Static call context, checking baseType: net.minecraft.client.Minecraft
[Log] [resolveTypingsFromSuffixes] Found TypingsMember: net.minecraft.client.Minecraft
[Log] [resolveTypingsFromSuffixes] Final resolved currentType: net.minecraft.client.Minecraft
[Log] [provideCompletionItems] Variable is not Companion, forcing instance context.
[Log] [provideCompletionItems] Found TypingsMember: net.minecraft.client.Minecraft, preparing completions.
[Log] [buildCompletionItems] Building completions for: net.minecraft.client.Minecraft
[Log] [buildCompletionItems] isCallOffClass: false, isStaticClassCall: false
[Log] [buildCompletionItems] Built 328 completion items.
[Log] document has not changed
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=22, character=33
[Log] [prepareContext] Successfully prepared context.
[Log] [prepareContext] Found iNode type: navigation_expression, [prepareContext] Found iNode text: Minecraft.rollbackResourcePacks().
fun
[Log] [provideCompletionItems] iNode (navigation_expression) type: navigation_expression, [provideCompletionItems] iNode (navigation_expression) text: Minecraft.rollbackResourcePacks().
fun
[Log] [provideCompletionItems] No scope found for current position.
[Log] [resolveBaseType] Starting base type resolution...
[Log] [resolveBaseType] Found firstChild navigation_expression
[Log] [resolveBaseType] No scoped variable found, falling back to resolveBaseTypeFromImports
[Log] [resolveBaseTypeFromImports] Starting import-based resolution...
[Log] [resolveBaseTypeFromImports] Checking 2 potential imports...
[Log] [resolveBaseTypeFromImports] Resolved from import: Minecraft
[Log] [resolveBaseType] Final resolved baseType: net.minecraft.client.Minecraft
[Log] [resolveBaseType] isCallOffClass: false
[Log] [resolveBaseType] isStaticClassCall: true
[Log] [resolveTypingsFromSuffixes] BaseType at start: net.minecraft.client.Minecraft
[Log] [resolveTypingsFromSuffixes] isCallOffClass: false
[Log] [isMethodCall] navigation_suffix leads into call_expression: .rollbackResourcePacks
[Log] [resolveTypingsFromSuffixes] Found suffix: rollbackResourcePacks, isMethodCall: true
[Log] [resolveTypingsFromSuffixes] Found suffix: fun, isMethodCall: false
[Log] [resolveTypingsFromSuffixes] Found refined suffixes: [
  "rollbackResourcePacks()",
  "fun"
]
[Log] [resolveTypingsFromSuffixes] Resolving instance chain from baseType: net.minecraft.client.Minecraft
[Log] [resolveTypingsFromSuffixes] Processing suffix: rollbackResourcePacks()
[Log] [resolveTypingsFromSuffixes] Method not found: rollbackResourcePacks() in net.minecraft.client.Minecraft
[Log] [resolveTypingsFromSuffixes] Final resolved currentType: net.minecraft.client.Minecraft
[Log] [provideCompletionItems] Variable is not Companion, forcing instance context.
[Log] [provideCompletionItems] Found TypingsMember: net.minecraft.client.Minecraft, preparing completions.
[Log] [buildCompletionItems] Building completions for: net.minecraft.client.Minecraft
[Log] [buildCompletionItems] isCallOffClass: false, isStaticClassCall: false
[Log] [buildCompletionItems] Built 328 completion items.
[Log] updating tokens
[Log] <!DOCTYPE html>
		  <html lang="en">
		  <head>
			<meta charset="UTF-8">
			<style>
			  
		#class-search-bar {
		display: flex;
		align-items: center;
		gap: 8px;
		padding: 8px 12px;
		background: #2b2b2b;
		border-bottom: 1px solid #444;
		z-index: 150;
		position: relative;
		}

		#class-search-results {
		position: absolute;
		top: 100%;
		left: 0;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: 100%;
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
		}

			  
	@keyframes pop {
	  0% { transform: scale(1); }
	  50% { transform: scale(1.04); }
	  100% { transform: scale(1.035); }
	}
			  
	body {
	  margin: 0;
	  font-family: Consolas, monospace;
	  background: #1e1e1e;
	  color: rgb(210, 222, 174);
	  padding: 16px;
	}
			  
	#main {
	  cursor: text;
	  flex-grow: 1;
	  height: 100vh;
	  overflow: visible;
	  padding: 16px;
	  box-sizing: border-box;
	}
  
	.kw {
	  color: rgba(76, 156, 222, 0.93);
	  font-weight: bold;
	}
  
	.annotation {
	  color: rgb(238, 223, 154);
	}
  
	.type-link {
	  color: rgba(108, 220, 175, 0.92);
	  cursor: default;
	  text-decoration: none;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link {
	  cursor: pointer;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link:hover {
	  color: rgba(158, 234, 203, 0.92);
	  text-decoration: underline;
	  display: inline-block;
	  animation: pop 0.17s ease-in-out forwards;
	}
  
	.ident {
	  color: #9cdcfe;
	}
  
	.method-name {
	  color: rgba(231, 229, 151, 0.92);
	}
  
	.arg-name {
	  color: rgba(104, 208, 237, 0.97);
	}
  
	.line {
	  opacity: 0;
	  transition: opacity 0.05s linear;
	}
			  
	.highlight-box {
	  position: absolute;
	  background-color: rgba(255, 160, 80, 0.35);
	  border-radius: 2px;
	}
  
	.highlight-box.current {
	  outline: 1px solid #3794ff;
	  background-color: rgba(55, 148, 255, 0.3);
	  box-shadow: 0 0 4px #3794ff99;
	  z-index: 60;
	}
  
	.debug-overlay-wrapper {
	  position: fixed;
	  pointer-events: none;
	  z-index: 10000;
	}
  
	.debug-overlay-wrapper > div {
	  position: absolute;
	  pointer-events: auto;
	  background: rgba(255, 0, 0, 0.2);
	}
  
	#search-bar button {
	  background-color: rgba(30, 30, 30, 0.27);
	  color: white;
	  border: 1px solid #555;
	  border-radius: 6px;
	  padding: 4px 8px;
	  cursor: pointer;
	  transition: all 0.2s ease-in-out;
	  font-size: 13px;
	  font-family: inherit;
	  user-select: none;
	}
  
	#search-bar button.active {
	  background-color: #094771;
	  border-color: #3794ff;
	  color: white;
	}
			</style>
		  </head>
		  <body>
		    
	<div id="class-search-bar" style="
	  display: flex;
	  align-items: center;
	  gap: 8px;
	  padding: 8px 12px;
	  background: #2b2b2b;
	  border-bottom: 1px solid #444;
	  z-index: 150;
	">
	  <input id="class-search-input" type="text" placeholder="Search classes..." style="
		flex-grow: 1;
		padding: 6px 10px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 6px;
		font-family: inherit;
	  ">
	  <div id="class-search-results" style="
		position: absolute;
		top: 42px;
		left: 12px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: calc(100% - 24px);
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
	  "></div>
	</div>
			
	<div id="search-bar" style="
	  display: none;
	  position: fixed;
	  top: 8px;
	  right: 8px;
	  z-index: 200;
	  background: #2c2c2c;
	  padding: 4px 8px;
	  border-radius: 4px;
	  display: flex;
	  gap: 4px;
	  align-items: center;
	">
	  <input type="text" id="search-input" placeholder="Search..." style="
		width: 180px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		padding: 4px;
	  " />
	  <button id="toggle-case" title="Match Case">Aa</button>
	  <button id="toggle-whole" title="Whole Word">â›¶</button>
	  <button id="toggle-regex" title="Regex">*</button>
	  <span id="search-count" style="
		color: white;
		min-width: 30px;
		text-align: center;
		font-size: 13px;
		font-family: Arial, sans-serif;
	  ">No Results</span>
	  <button id="search-prev" title="Previous Match">â†‘</button>
	  <button id="search-next" title="Next Match">â†“</button>
	  <button id="search-close" title="Close Search" style="margin-left: auto;">âœ–</button>
	</div>
			
  <div id="console-output" style="
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 160px;
    background: #111;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    overflow-y: auto;
    padding: 24px 10px 6px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
    <button id="console-minimize" style="
      position: absolute;
      top: 4px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 2px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">â€“</button>
    <div id="console-content"></div>
  </div>

  <div id="console-bar" style="
    display: none;
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 24px;
    background: #222;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
  	<span>Console</span>
    <button id="console-restore" style="
      position: absolute;
      top: 1px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 1px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">+</button>
  </div>
			<div id="main"><div class="line" data-text="package net.minecraft.client.renderer.block" style="opacity: 0;"><div><span class="kw">package</span> <span class="type-link" data-package="net"><span class="ident">net</span></span><span>.</span><span class="type-link" data-package="net.minecraft"><span class="ident">minecraft</span></span><span>.</span><span class="type-link" data-package="net.minecraft.client"><span class="ident">client</span></span><span>.</span><span class="type-link" data-package="net.minecraft.client.renderer"><span class="ident">renderer</span></span><span>.</span><span class="type-link" data-package="net.minecraft.client.renderer.block"><span class="ident">block</span></span></div><br></div>
<div class="line" data-text=" class BlockRenderDispatcher : ResourceManagerReloadListener, PreparableReloadListener {" style="opacity: 0;"><div id="current-class"> <span class="kw">class</span> <span class="ident">BlockRenderDispatcher</span> : <span class="type-link" data-type="net.minecraft.server.packs.resources.ResourceManagerReloadListener">ResourceManagerReloadListener</span>, <span class="type-link" data-type="net.minecraft.server.packs.resources.PreparableReloadListener">PreparableReloadListener</span> {</div></div>
<div class="line" data-text="private final val blockModelShaper: BlockModelShaper;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">blockModelShaper</span>: <span class="type-link" data-type="net.minecraft.client.renderer.block.BlockModelShaper">BlockModelShaper</span>;</div></div>
<div class="line" data-text="private final val modelRenderer: ModelBlockRenderer;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">modelRenderer</span>: <span class="type-link" data-type="net.minecraft.client.renderer.block.ModelBlockRenderer">ModelBlockRenderer</span>;</div></div>
<div class="line" data-text="private final val blockEntityRenderer: BlockEntityWithoutLevelRenderer;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">blockEntityRenderer</span>: <span class="type-link" data-type="net.minecraft.client.renderer.BlockEntityWithoutLevelRenderer">BlockEntityWithoutLevelRenderer</span>;</div></div>
<div class="line" data-text="private final val liquidBlockRenderer: LiquidBlockRenderer;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">liquidBlockRenderer</span>: <span class="type-link" data-type="net.minecraft.client.renderer.block.LiquidBlockRenderer">LiquidBlockRenderer</span>;</div></div>
<div class="line" data-text="private final val random: RandomSource;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">random</span>: <span class="type-link" data-type="net.minecraft.util.RandomSource">RandomSource</span>;</div></div>
<div class="line" data-text="private final val blockColors: BlockColors;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">blockColors</span>: <span class="type-link" data-type="net.minecraft.client.color.block.BlockColors">BlockColors</span>;</div></div>
<div class="line" data-text="fun getBlockModelShaper(): BlockModelShaper {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getBlockModelShaper</span>(): <span class="type-link" data-type="net.minecraft.client.renderer.block.BlockModelShaper">BlockModelShaper</span> {};</div></div>
<div class="line" data-text="fun renderBreakingTexture(arg0: PoseStack, arg1: VertexConsumer, arg2: BlockPos, arg3: BlockAndTintGetter, arg4: BlockState): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">renderBreakingTexture</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="com.mojang.blaze3d.vertex.PoseStack">PoseStack</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="com.mojang.blaze3d.vertex.VertexConsumer">VertexConsumer</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg3</span>: <span class="type-link" data-type="net.minecraft.world.level.BlockAndTintGetter">BlockAndTintGetter</span>, <span class="arg-name">arg4</span>: <span class="type-link" data-type="net.minecraft.world.level.block.state.BlockState">BlockState</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun renderBatched(arg0: Boolean, arg1: PoseStack, arg2: VertexConsumer, arg3: BlockPos, arg4: RandomSource, arg5: BlockAndTintGetter, arg6: BlockState): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">renderBatched</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="com.mojang.blaze3d.vertex.PoseStack">PoseStack</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="com.mojang.blaze3d.vertex.VertexConsumer">VertexConsumer</span>, <span class="arg-name">arg3</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg4</span>: <span class="type-link" data-type="net.minecraft.util.RandomSource">RandomSource</span>, <span class="arg-name">arg5</span>: <span class="type-link" data-type="net.minecraft.world.level.BlockAndTintGetter">BlockAndTintGetter</span>, <span class="arg-name">arg6</span>: <span class="type-link" data-type="net.minecraft.world.level.block.state.BlockState">BlockState</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun renderLiquid(arg0: VertexConsumer, arg1: BlockPos, arg2: BlockAndTintGetter, arg3: BlockState, arg4: FluidState): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">renderLiquid</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="com.mojang.blaze3d.vertex.VertexConsumer">VertexConsumer</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.world.level.BlockAndTintGetter">BlockAndTintGetter</span>, <span class="arg-name">arg3</span>: <span class="type-link" data-type="net.minecraft.world.level.block.state.BlockState">BlockState</span>, <span class="arg-name">arg4</span>: <span class="type-link" data-type="net.minecraft.world.level.material.FluidState">FluidState</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun getModelRenderer(): ModelBlockRenderer {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getModelRenderer</span>(): <span class="type-link" data-type="net.minecraft.client.renderer.block.ModelBlockRenderer">ModelBlockRenderer</span> {};</div></div>
<div class="line" data-text="fun getBlockModel(arg0: BlockState): BakedModel {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getBlockModel</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.world.level.block.state.BlockState">BlockState</span>): <span class="type-link" data-type="net.minecraft.client.resources.model.BakedModel">BakedModel</span> {};</div></div>
<div class="line" data-text="fun renderSingleBlock(arg0: PoseStack, arg1: Int, arg2: Int, arg3: MultiBufferSource, arg4: BlockState): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">renderSingleBlock</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="com.mojang.blaze3d.vertex.PoseStack">PoseStack</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="kotlin.Int">Int</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="kotlin.Int">Int</span>, <span class="arg-name">arg3</span>: <span class="type-link" data-type="net.minecraft.client.renderer.MultiBufferSource">MultiBufferSource</span>, <span class="arg-name">arg4</span>: <span class="type-link" data-type="net.minecraft.world.level.block.state.BlockState">BlockState</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun onResourceManagerReload(arg0: ResourceManager): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">onResourceManagerReload</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.server.packs.resources.ResourceManager">ResourceManager</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun reload(arg0: Executor, arg1: Executor, arg2: PreparableReloadListener$PreparationBarrier, arg3: ResourceManager, arg4: ProfilerFiller, arg5: ProfilerFiller): CompletableFuture<Void> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">reload</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.concurrent.Executor">Executor</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="java.util.concurrent.Executor">Executor</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.server.packs.resources.PreparableReloadListener$PreparationBarrier">PreparableReloadListener$PreparationBarrier</span>, <span class="arg-name">arg3</span>: <span class="type-link" data-type="net.minecraft.server.packs.resources.ResourceManager">ResourceManager</span>, <span class="arg-name">arg4</span>: <span class="type-link" data-type="net.minecraft.util.profiling.ProfilerFiller">ProfilerFiller</span>, <span class="arg-name">arg5</span>: <span class="type-link" data-type="net.minecraft.util.profiling.ProfilerFiller">ProfilerFiller</span>): <span class="type-link" data-type="java.util.concurrent.CompletableFuture">CompletableFuture</span>&lt;<span class="type-link" data-type="java.lang.Void">Void</span>&gt; {};</div></div>
<div class="line" data-text="private fun method_29490(arg0: ResourceManager, arg1: ProfilerFiller): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_29490</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.server.packs.resources.ResourceManager">ResourceManager</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.util.profiling.ProfilerFiller">ProfilerFiller</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun getName(): String {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getName</span>(): <span class="type-link" data-type="java.lang.String">String</span> {};</div></div>
<div class="line" data-text="}" style="opacity: 0;"><div>}</div></div>
<div class="line" data-text="" style="opacity: 0;"></div></div></div>
			
	<div id="hover-preview" style="
	  position: fixed;
	  overflow: auto;
	  background: #2b2b2b;
	  color: #ddd;
	  border: 1px solid #444;
	  border-radius: 6px;
	  font-size: 13px;
	  padding: 8px;
	  display: none;
	  z-index: 50;
	  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.5);
	  pointer-events: auto;
	">
	  <div id="hover-content"></div>
	</div>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/constantsPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/consoleViewer.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/classPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/searchBarViewer.js"></script>
		  </body>
		  </html>
[Log] <!DOCTYPE html>
		  <html lang="en">
		  <head>
			<meta charset="UTF-8">
			<style>
			  
		#class-search-bar {
		display: flex;
		align-items: center;
		gap: 8px;
		padding: 8px 12px;
		background: #2b2b2b;
		border-bottom: 1px solid #444;
		z-index: 150;
		position: relative;
		}

		#class-search-results {
		position: absolute;
		top: 100%;
		left: 0;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: 100%;
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
		}

			  
	@keyframes pop {
	  0% { transform: scale(1); }
	  50% { transform: scale(1.04); }
	  100% { transform: scale(1.035); }
	}
			  
	body {
	  margin: 0;
	  font-family: Consolas, monospace;
	  background: #1e1e1e;
	  color: rgb(210, 222, 174);
	  padding: 16px;
	}
			  
	#main {
	  cursor: text;
	  flex-grow: 1;
	  height: 100vh;
	  overflow: visible;
	  padding: 16px;
	  box-sizing: border-box;
	}
  
	.kw {
	  color: rgba(76, 156, 222, 0.93);
	  font-weight: bold;
	}
  
	.annotation {
	  color: rgb(238, 223, 154);
	}
  
	.type-link {
	  color: rgba(108, 220, 175, 0.92);
	  cursor: default;
	  text-decoration: none;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link {
	  cursor: pointer;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link:hover {
	  color: rgba(158, 234, 203, 0.92);
	  text-decoration: underline;
	  display: inline-block;
	  animation: pop 0.17s ease-in-out forwards;
	}
  
	.ident {
	  color: #9cdcfe;
	}
  
	.method-name {
	  color: rgba(231, 229, 151, 0.92);
	}
  
	.arg-name {
	  color: rgba(104, 208, 237, 0.97);
	}
  
	.line {
	  opacity: 0;
	  transition: opacity 0.05s linear;
	}
			  
	.highlight-box {
	  position: absolute;
	  background-color: rgba(255, 160, 80, 0.35);
	  border-radius: 2px;
	}
  
	.highlight-box.current {
	  outline: 1px solid #3794ff;
	  background-color: rgba(55, 148, 255, 0.3);
	  box-shadow: 0 0 4px #3794ff99;
	  z-index: 60;
	}
  
	.debug-overlay-wrapper {
	  position: fixed;
	  pointer-events: none;
	  z-index: 10000;
	}
  
	.debug-overlay-wrapper > div {
	  position: absolute;
	  pointer-events: auto;
	  background: rgba(255, 0, 0, 0.2);
	}
  
	#search-bar button {
	  background-color: rgba(30, 30, 30, 0.27);
	  color: white;
	  border: 1px solid #555;
	  border-radius: 6px;
	  padding: 4px 8px;
	  cursor: pointer;
	  transition: all 0.2s ease-in-out;
	  font-size: 13px;
	  font-family: inherit;
	  user-select: none;
	}
  
	#search-bar button.active {
	  background-color: #094771;
	  border-color: #3794ff;
	  color: white;
	}
			</style>
		  </head>
		  <body>
		    
	<div id="class-search-bar" style="
	  display: flex;
	  align-items: center;
	  gap: 8px;
	  padding: 8px 12px;
	  background: #2b2b2b;
	  border-bottom: 1px solid #444;
	  z-index: 150;
	">
	  <input id="class-search-input" type="text" placeholder="Search classes..." style="
		flex-grow: 1;
		padding: 6px 10px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 6px;
		font-family: inherit;
	  ">
	  <div id="class-search-results" style="
		position: absolute;
		top: 42px;
		left: 12px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: calc(100% - 24px);
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
	  "></div>
	</div>
			
	<div id="search-bar" style="
	  display: none;
	  position: fixed;
	  top: 8px;
	  right: 8px;
	  z-index: 200;
	  background: #2c2c2c;
	  padding: 4px 8px;
	  border-radius: 4px;
	  display: flex;
	  gap: 4px;
	  align-items: center;
	">
	  <input type="text" id="search-input" placeholder="Search..." style="
		width: 180px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		padding: 4px;
	  " />
	  <button id="toggle-case" title="Match Case">Aa</button>
	  <button id="toggle-whole" title="Whole Word">â›¶</button>
	  <button id="toggle-regex" title="Regex">*</button>
	  <span id="search-count" style="
		color: white;
		min-width: 30px;
		text-align: center;
		font-size: 13px;
		font-family: Arial, sans-serif;
	  ">No Results</span>
	  <button id="search-prev" title="Previous Match">â†‘</button>
	  <button id="search-next" title="Next Match">â†“</button>
	  <button id="search-close" title="Close Search" style="margin-left: auto;">âœ–</button>
	</div>
			
  <div id="console-output" style="
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 160px;
    background: #111;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    overflow-y: auto;
    padding: 24px 10px 6px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
    <button id="console-minimize" style="
      position: absolute;
      top: 4px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 2px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">â€“</button>
    <div id="console-content"></div>
  </div>

  <div id="console-bar" style="
    display: none;
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 24px;
    background: #222;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
  	<span>Console</span>
    <button id="console-restore" style="
      position: absolute;
      top: 1px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 1px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">+</button>
  </div>
			<div id="main"><div class="line" data-text="package net.minecraft.world.level.block.state" style="opacity: 0;"><div><span class="kw">package</span> <span class="type-link" data-package="net"><span class="ident">net</span></span><span>.</span><span class="type-link" data-package="net.minecraft"><span class="ident">minecraft</span></span><span>.</span><span class="type-link" data-package="net.minecraft.world"><span class="ident">world</span></span><span>.</span><span class="type-link" data-package="net.minecraft.world.level"><span class="ident">level</span></span><span>.</span><span class="type-link" data-package="net.minecraft.world.level.block"><span class="ident">block</span></span><span>.</span><span class="type-link" data-package="net.minecraft.world.level.block.state"><span class="ident">state</span></span></div><br></div>
<div class="line" data-text=" class BlockState : BlockBehaviour$BlockStateBase, FabricBlockState {" style="opacity: 0;"><div id="current-class"> <span class="kw">class</span> <span class="ident">BlockState</span> : <span class="type-link" data-type="net.minecraft.world.level.block.state.BlockBehaviour$BlockStateBase">BlockBehaviour$BlockStateBase</span>, <span class="type-link" data-type="net.fabricmc.fabric.api.block.v1.FabricBlockState">FabricBlockState</span> {</div></div>
<div class="line" data-text="protected fun asState(): BlockState {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">protected</span> <span class="kw">fun</span> <span class="method-name">asState</span>(): <span class="type-link" data-type="net.minecraft.world.level.block.state.BlockState">BlockState</span> {};</div></div>
<div class="line" data-text="fun getAppearance(arg0: BlockPos, arg1: BlockState, arg2: BlockPos, arg3: Direction, arg4: BlockAndTintGetter): BlockState {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getAppearance</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.world.level.block.state.BlockState">BlockState</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg3</span>: <span class="type-link" data-type="net.minecraft.core.Direction">Direction</span>, <span class="arg-name">arg4</span>: <span class="type-link" data-type="net.minecraft.world.level.BlockAndTintGetter">BlockAndTintGetter</span>): <span class="type-link" data-type="net.minecraft.world.level.block.state.BlockState">BlockState</span> {};</div></div>
<div class="line" data-text="private fun calculateSolid(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">calculateSolid</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun initCache(): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">initCache</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun getBlock(): Block {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getBlock</span>(): <span class="type-link" data-type="net.minecraft.world.level.block.Block">Block</span> {};</div></div>
<div class="line" data-text="fun getBlockHolder(): Holder<Block> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getBlockHolder</span>(): <span class="type-link" data-type="net.minecraft.core.Holder">Holder</span>&lt;<span class="type-link" data-type="net.minecraft.world.level.block.Block">Block</span>&gt; {};</div></div>
<div class="line" data-text="fun blocksMotion(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">blocksMotion</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun isSolid(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">isSolid</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun isValidSpawn(arg0: BlockPos, arg1: EntityType<*>, arg2: BlockGetter): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">isValidSpawn</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.world.entity.EntityType">EntityType</span>&lt;<span class="kw">*</span>&gt;, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.world.level.BlockGetter">BlockGetter</span>): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun propagatesSkylightDown(arg0: BlockPos, arg1: BlockGetter): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">propagatesSkylightDown</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.world.level.BlockGetter">BlockGetter</span>): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun getLightBlock(arg0: BlockPos, arg1: BlockGetter): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getLightBlock</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.world.level.BlockGetter">BlockGetter</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun getFaceOcclusionShape(arg0: BlockPos, arg1: Direction, arg2: BlockGetter): VoxelShape {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getFaceOcclusionShape</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.core.Direction">Direction</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.world.level.BlockGetter">BlockGetter</span>): <span class="type-link" data-type="net.minecraft.world.phys.shapes.VoxelShape">VoxelShape</span> {};</div></div>
<div class="line" data-text="fun getOcclusionShape(arg0: BlockPos, arg1: BlockGetter): VoxelShape {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getOcclusionShape</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.world.level.BlockGetter">BlockGetter</span>): <span class="type-link" data-type="net.minecraft.world.phys.shapes.VoxelShape">VoxelShape</span> {};</div></div>
<div class="line" data-text="fun hasLargeCollisionShape(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">hasLargeCollisionShape</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun useShapeForLightOcclusion(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">useShapeForLightOcclusion</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun getLightEmission(): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getLightEmission</span>(): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun isAir(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">isAir</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun ignitedByLava(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">ignitedByLava</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun liquid(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">liquid</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun getMapColor(arg0: BlockPos, arg1: BlockGetter): MapColor {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getMapColor</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.world.level.BlockGetter">BlockGetter</span>): <span class="type-link" data-type="net.minecraft.world.level.material.MapColor">MapColor</span> {};</div></div>
<div class="line" data-text="fun rotate(arg0: Rotation): BlockState {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">rotate</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.world.level.block.Rotation">Rotation</span>): <span class="type-link" data-type="net.minecraft.world.level.block.state.BlockState">BlockState</span> {};</div></div>
<div class="line" data-text="fun mirror(arg0: Mirror): BlockState {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">mirror</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.world.level.block.Mirror">Mirror</span>): <span class="type-link" data-type="net.minecraft.world.level.block.state.BlockState">BlockState</span> {};</div></div>
<div class="line" data-text="fun getRenderShape(): RenderShape {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getRenderShape</span>(): <span class="type-link" data-type="net.minecraft.world.level.block.RenderShape">RenderShape</span> {};</div></div>
<div class="line" data-text="fun emissiveRendering(arg0: BlockPos, arg1: BlockGetter): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">emissiveRendering</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.world.level.BlockGetter">BlockGetter</span>): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun getShadeBrightness(arg0: BlockPos, arg1: BlockGetter): Float {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getShadeBrightness</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.world.level.BlockGetter">BlockGetter</span>): <span class="type-link" data-type="kotlin.Float">Float</span> {};</div></div>
<div class="line" data-text="fun isRedstoneConductor(arg0: BlockPos, arg1: BlockGetter): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">isRedstoneConductor</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.world.level.BlockGetter">BlockGetter</span>): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun isSignalSource(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">isSignalSource</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun getSignal(arg0: BlockPos, arg1: Direction, arg2: BlockGetter): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getSignal</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.core.Direction">Direction</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.world.level.BlockGetter">BlockGetter</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun hasAnalogOutputSignal(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">hasAnalogOutputSignal</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun getAnalogOutputSignal(arg0: BlockPos, arg1: Level): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getAnalogOutputSignal</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.world.level.Level">Level</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun getDestroySpeed(arg0: BlockPos, arg1: BlockGetter): Float {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getDestroySpeed</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.world.level.BlockGetter">BlockGetter</span>): <span class="type-link" data-type="kotlin.Float">Float</span> {};</div></div>
<div class="line" data-text="fun getDestroyProgress(arg0: BlockPos, arg1: Player, arg2: BlockGetter): Float {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getDestroyProgress</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.world.entity.player.Player">Player</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.world.level.BlockGetter">BlockGetter</span>): <span class="type-link" data-type="kotlin.Float">Float</span> {};</div></div>
<div class="line" data-text="fun getDirectSignal(arg0: BlockPos, arg1: Direction, arg2: BlockGetter): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getDirectSignal</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.core.Direction">Direction</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.world.level.BlockGetter">BlockGetter</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun getPistonPushReaction(): PushReaction {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getPistonPushReaction</span>(): <span class="type-link" data-type="net.minecraft.world.level.material.PushReaction">PushReaction</span> {};</div></div>
<div class="line" data-text="fun isSolidRender(arg0: BlockPos, arg1: BlockGetter): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">isSolidRender</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.world.level.BlockGetter">BlockGetter</span>): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun canOcclude(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">canOcclude</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun skipRendering(arg0: Direction, arg1: BlockState): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">skipRendering</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.core.Direction">Direction</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.world.level.block.state.BlockState">BlockState</span>): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun getShape(arg0: BlockPos, arg1: BlockGetter): VoxelShape {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getShape</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.world.level.BlockGetter">BlockGetter</span>): <span class="type-link" data-type="net.minecraft.world.phys.shapes.VoxelShape">VoxelShape</span> {};</div></div>
<div class="line" data-text="fun getShape(arg0: BlockPos, arg1: BlockGetter, arg2: CollisionContext): VoxelShape {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getShape</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.world.level.BlockGetter">BlockGetter</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.world.phys.shapes.CollisionContext">CollisionContext</span>): <span class="type-link" data-type="net.minecraft.world.phys.shapes.VoxelShape">VoxelShape</span> {};</div></div>
<div class="line" data-text="fun getCollisionShape(arg0: BlockPos, arg1: BlockGetter): VoxelShape {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getCollisionShape</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.world.level.BlockGetter">BlockGetter</span>): <span class="type-link" data-type="net.minecraft.world.phys.shapes.VoxelShape">VoxelShape</span> {};</div></div>
<div class="line" data-text="fun getCollisionShape(arg0: BlockPos, arg1: BlockGetter, arg2: CollisionContext): VoxelShape {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getCollisionShape</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.world.level.BlockGetter">BlockGetter</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.world.phys.shapes.CollisionContext">CollisionContext</span>): <span class="type-link" data-type="net.minecraft.world.phys.shapes.VoxelShape">VoxelShape</span> {};</div></div>
<div class="line" data-text="fun getBlockSupportShape(arg0: BlockPos, arg1: BlockGetter): VoxelShape {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getBlockSupportShape</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.world.level.BlockGetter">BlockGetter</span>): <span class="type-link" data-type="net.minecraft.world.phys.shapes.VoxelShape">VoxelShape</span> {};</div></div>
<div class="line" data-text="fun getVisualShape(arg0: BlockPos, arg1: BlockGetter, arg2: CollisionContext): VoxelShape {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getVisualShape</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.world.level.BlockGetter">BlockGetter</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.world.phys.shapes.CollisionContext">CollisionContext</span>): <span class="type-link" data-type="net.minecraft.world.phys.shapes.VoxelShape">VoxelShape</span> {};</div></div>
<div class="line" data-text="fun getInteractionShape(arg0: BlockPos, arg1: BlockGetter): VoxelShape {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getInteractionShape</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.world.level.BlockGetter">BlockGetter</span>): <span class="type-link" data-type="net.minecraft.world.phys.shapes.VoxelShape">VoxelShape</span> {};</div></div>
<div class="line" data-text="final fun entityCanStandOn(arg0: BlockPos, arg1: Entity, arg2: BlockGetter): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">final</span> <span class="kw">fun</span> <span class="method-name">entityCanStandOn</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.world.entity.Entity">Entity</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.world.level.BlockGetter">BlockGetter</span>): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="final fun entityCanStandOnFace(arg0: BlockPos, arg1: Direction, arg2: Entity, arg3: BlockGetter): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">final</span> <span class="kw">fun</span> <span class="method-name">entityCanStandOnFace</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.core.Direction">Direction</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.world.entity.Entity">Entity</span>, <span class="arg-name">arg3</span>: <span class="type-link" data-type="net.minecraft.world.level.BlockGetter">BlockGetter</span>): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun getOffset(arg0: BlockPos, arg1: BlockGetter): Vec3 {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getOffset</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.world.level.BlockGetter">BlockGetter</span>): <span class="type-link" data-type="net.minecraft.world.phys.Vec3">Vec3</span> {};</div></div>
<div class="line" data-text="fun hasOffsetFunction(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">hasOffsetFunction</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun triggerEvent(arg0: Int, arg1: Int, arg2: BlockPos, arg3: Level): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">triggerEvent</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="kotlin.Int">Int</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg3</span>: <span class="type-link" data-type="net.minecraft.world.level.Level">Level</span>): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun handleNeighborChanged(arg0: Boolean, arg1: BlockPos, arg2: BlockPos, arg3: Level, arg4: Block): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">handleNeighborChanged</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg3</span>: <span class="type-link" data-type="net.minecraft.world.level.Level">Level</span>, <span class="arg-name">arg4</span>: <span class="type-link" data-type="net.minecraft.world.level.block.Block">Block</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="final fun updateNeighbourShapes(arg0: Int, arg1: BlockPos, arg2: LevelAccessor): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">final</span> <span class="kw">fun</span> <span class="method-name">updateNeighbourShapes</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.world.level.LevelAccessor">LevelAccessor</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="final fun updateNeighbourShapes(arg0: Int, arg1: Int, arg2: BlockPos, arg3: LevelAccessor): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">final</span> <span class="kw">fun</span> <span class="method-name">updateNeighbourShapes</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="kotlin.Int">Int</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg3</span>: <span class="type-link" data-type="net.minecraft.world.level.LevelAccessor">LevelAccessor</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="final fun updateIndirectNeighbourShapes(arg0: Int, arg1: BlockPos, arg2: LevelAccessor): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">final</span> <span class="kw">fun</span> <span class="method-name">updateIndirectNeighbourShapes</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.world.level.LevelAccessor">LevelAccessor</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun updateIndirectNeighbourShapes(arg0: Int, arg1: Int, arg2: BlockPos, arg3: LevelAccessor): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">updateIndirectNeighbourShapes</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="kotlin.Int">Int</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg3</span>: <span class="type-link" data-type="net.minecraft.world.level.LevelAccessor">LevelAccessor</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun onPlace(arg0: Boolean, arg1: BlockPos, arg2: Level, arg3: BlockState): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">onPlace</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.world.level.Level">Level</span>, <span class="arg-name">arg3</span>: <span class="type-link" data-type="net.minecraft.world.level.block.state.BlockState">BlockState</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun onRemove(arg0: Boolean, arg1: BlockPos, arg2: Level, arg3: BlockState): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">onRemove</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.world.level.Level">Level</span>, <span class="arg-name">arg3</span>: <span class="type-link" data-type="net.minecraft.world.level.block.state.BlockState">BlockState</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun onExplosionHit(arg0: BiConsumer<ItemStack, BlockPos>, arg1: BlockPos, arg2: Explosion, arg3: Level): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">onExplosionHit</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.function.BiConsumer">BiConsumer</span>&lt;<span class="type-link" data-type="net.minecraft.world.item.ItemStack">ItemStack</span>, <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>&gt;, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.world.level.Explosion">Explosion</span>, <span class="arg-name">arg3</span>: <span class="type-link" data-type="net.minecraft.world.level.Level">Level</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun tick(arg0: BlockPos, arg1: ServerLevel, arg2: RandomSource): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">tick</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.server.level.ServerLevel">ServerLevel</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.util.RandomSource">RandomSource</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun randomTick(arg0: BlockPos, arg1: ServerLevel, arg2: RandomSource): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">randomTick</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.server.level.ServerLevel">ServerLevel</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.util.RandomSource">RandomSource</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun entityInside(arg0: BlockPos, arg1: Entity, arg2: Level): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">entityInside</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.world.entity.Entity">Entity</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.world.level.Level">Level</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun spawnAfterBreak(arg0: Boolean, arg1: BlockPos, arg2: ServerLevel, arg3: ItemStack): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">spawnAfterBreak</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.server.level.ServerLevel">ServerLevel</span>, <span class="arg-name">arg3</span>: <span class="type-link" data-type="net.minecraft.world.item.ItemStack">ItemStack</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun getDrops(arg0: LootParams$Builder): List<ItemStack> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getDrops</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.world.level.storage.loot.LootParams$Builder">LootParams$Builder</span>): <span class="type-link" data-type="java.util.List">List</span>&lt;<span class="type-link" data-type="net.minecraft.world.item.ItemStack">ItemStack</span>&gt; {};</div></div>
<div class="line" data-text="fun useItemOn(arg0: InteractionHand, arg1: Player, arg2: ItemStack, arg3: Level, arg4: BlockHitResult): ItemInteractionResult {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">useItemOn</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.world.InteractionHand">InteractionHand</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.world.entity.player.Player">Player</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.world.item.ItemStack">ItemStack</span>, <span class="arg-name">arg3</span>: <span class="type-link" data-type="net.minecraft.world.level.Level">Level</span>, <span class="arg-name">arg4</span>: <span class="type-link" data-type="net.minecraft.world.phys.BlockHitResult">BlockHitResult</span>): <span class="type-link" data-type="net.minecraft.world.ItemInteractionResult">ItemInteractionResult</span> {};</div></div>
<div class="line" data-text="fun useWithoutItem(arg0: Player, arg1: Level, arg2: BlockHitResult): InteractionResult {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">useWithoutItem</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.world.entity.player.Player">Player</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.world.level.Level">Level</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.world.phys.BlockHitResult">BlockHitResult</span>): <span class="type-link" data-type="net.minecraft.world.InteractionResult">InteractionResult</span> {};</div></div>
<div class="line" data-text="fun attack(arg0: BlockPos, arg1: Player, arg2: Level): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">attack</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.world.entity.player.Player">Player</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.world.level.Level">Level</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun isSuffocating(arg0: BlockPos, arg1: BlockGetter): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">isSuffocating</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.world.level.BlockGetter">BlockGetter</span>): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun isViewBlocking(arg0: BlockPos, arg1: BlockGetter): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">isViewBlocking</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.world.level.BlockGetter">BlockGetter</span>): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun updateShape(arg0: BlockPos, arg1: BlockPos, arg2: Direction, arg3: LevelAccessor, arg4: BlockState): BlockState {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">updateShape</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.core.Direction">Direction</span>, <span class="arg-name">arg3</span>: <span class="type-link" data-type="net.minecraft.world.level.LevelAccessor">LevelAccessor</span>, <span class="arg-name">arg4</span>: <span class="type-link" data-type="net.minecraft.world.level.block.state.BlockState">BlockState</span>): <span class="type-link" data-type="net.minecraft.world.level.block.state.BlockState">BlockState</span> {};</div></div>
<div class="line" data-text="fun isPathfindable(arg0: PathComputationType): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">isPathfindable</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.world.level.pathfinder.PathComputationType">PathComputationType</span>): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun canBeReplaced(arg0: BlockPlaceContext): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">canBeReplaced</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.world.item.context.BlockPlaceContext">BlockPlaceContext</span>): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun canBeReplaced(arg0: Fluid): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">canBeReplaced</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.world.level.material.Fluid">Fluid</span>): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun canBeReplaced(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">canBeReplaced</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun canSurvive(arg0: BlockPos, arg1: LevelReader): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">canSurvive</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.world.level.LevelReader">LevelReader</span>): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun hasPostProcess(arg0: BlockPos, arg1: BlockGetter): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">hasPostProcess</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.world.level.BlockGetter">BlockGetter</span>): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun getMenuProvider(arg0: BlockPos, arg1: Level): MenuProvider {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getMenuProvider</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.world.level.Level">Level</span>): <span class="type-link" data-type="net.minecraft.world.MenuProvider">MenuProvider</span> {};</div></div>
<div class="line" data-text="fun is(arg0: TagKey<Block>): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">is</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.tags.TagKey">TagKey</span>&lt;<span class="type-link" data-type="net.minecraft.world.level.block.Block">Block</span>&gt;): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun is(arg0: Predicate<BlockBehaviour$BlockStateBase>, arg1: TagKey<Block>): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">is</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.function.Predicate">Predicate</span>&lt;<span class="type-link" data-type="net.minecraft.world.level.block.state.BlockBehaviour$BlockStateBase">BlockBehaviour$BlockStateBase</span>&gt;, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.tags.TagKey">TagKey</span>&lt;<span class="type-link" data-type="net.minecraft.world.level.block.Block">Block</span>&gt;): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun is(arg0: HolderSet<Block>): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">is</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.core.HolderSet">HolderSet</span>&lt;<span class="type-link" data-type="net.minecraft.world.level.block.Block">Block</span>&gt;): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun is(arg0: Holder<Block>): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">is</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.core.Holder">Holder</span>&lt;<span class="type-link" data-type="net.minecraft.world.level.block.Block">Block</span>&gt;): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun getTags(): Stream<TagKey<Block>> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getTags</span>(): <span class="type-link" data-type="java.util.stream.Stream">Stream</span>&lt;<span class="type-link" data-type="net.minecraft.tags.TagKey">TagKey</span>&lt;<span class="type-link" data-type="net.minecraft.world.level.block.Block">Block</span>&gt;&gt; {};</div></div>
<div class="line" data-text="fun hasBlockEntity(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">hasBlockEntity</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun getTicker(arg0: Level, arg1: BlockEntityType<T>): BlockEntityTicker<T> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getTicker</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.world.level.Level">Level</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.world.level.block.entity.BlockEntityType">BlockEntityType</span>&lt;<span class="ident">T</span>&gt;): <span class="type-link" data-type="net.minecraft.world.level.block.entity.BlockEntityTicker">BlockEntityTicker</span>&lt;<span class="ident">T</span>&gt; {};</div></div>
<div class="line" data-text="fun is(arg0: Block): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">is</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.world.level.block.Block">Block</span>): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun is(arg0: ResourceKey<Block>): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">is</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceKey">ResourceKey</span>&lt;<span class="type-link" data-type="net.minecraft.world.level.block.Block">Block</span>&gt;): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun getFluidState(): FluidState {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getFluidState</span>(): <span class="type-link" data-type="net.minecraft.world.level.material.FluidState">FluidState</span> {};</div></div>
<div class="line" data-text="fun isRandomlyTicking(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">isRandomlyTicking</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun getSeed(arg0: BlockPos): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getSeed</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="fun getSoundType(): SoundType {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getSoundType</span>(): <span class="type-link" data-type="net.minecraft.world.level.block.SoundType">SoundType</span> {};</div></div>
<div class="line" data-text="fun onProjectileHit(arg0: Projectile, arg1: Level, arg2: BlockState, arg3: BlockHitResult): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">onProjectileHit</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.world.entity.projectile.Projectile">Projectile</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.world.level.Level">Level</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.world.level.block.state.BlockState">BlockState</span>, <span class="arg-name">arg3</span>: <span class="type-link" data-type="net.minecraft.world.phys.BlockHitResult">BlockHitResult</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun isFaceSturdy(arg0: BlockPos, arg1: Direction, arg2: BlockGetter): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">isFaceSturdy</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.core.Direction">Direction</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.world.level.BlockGetter">BlockGetter</span>): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun isFaceSturdy(arg0: BlockPos, arg1: Direction, arg2: BlockGetter, arg3: SupportType): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">isFaceSturdy</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.core.Direction">Direction</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.world.level.BlockGetter">BlockGetter</span>, <span class="arg-name">arg3</span>: <span class="type-link" data-type="net.minecraft.world.level.block.SupportType">SupportType</span>): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun isCollisionShapeFullBlock(arg0: BlockPos, arg1: BlockGetter): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">isCollisionShapeFullBlock</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.world.level.BlockGetter">BlockGetter</span>): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun requiresCorrectToolForDrops(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">requiresCorrectToolForDrops</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun shouldSpawnTerrainParticles(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">shouldSpawnTerrainParticles</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun instrument(): NoteBlockInstrument {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">instrument</span>(): <span class="type-link" data-type="net.minecraft.world.level.block.state.properties.NoteBlockInstrument">NoteBlockInstrument</span> {};</div></div>
<div class="line" data-text="fun cycle(arg0: Property<T>): S {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">cycle</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.world.level.block.state.properties.Property">Property</span>&lt;<span class="ident">T</span>&gt;): <span class="ident">S</span> {};</div></div>
<div class="line" data-text="fun getProperties(): Collection<Property<?>> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getProperties</span>(): <span class="type-link" data-type="java.util.Collection">Collection</span>&lt;<span class="type-link" data-type="net.minecraft.world.level.block.state.properties.Property">Property</span>&lt;<span class="type-link" data-type="?">?</span>&gt;&gt; {};</div></div>
<div class="line" data-text="fun hasProperty(arg0: Property<T>): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">hasProperty</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.world.level.block.state.properties.Property">Property</span>&lt;<span class="ident">T</span>&gt;): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun getValue(arg0: Property<T>): T {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getValue</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.world.level.block.state.properties.Property">Property</span>&lt;<span class="ident">T</span>&gt;): <span class="ident">T</span> {};</div></div>
<div class="line" data-text="fun getOptionalValue(arg0: Property<T>): Optional<T> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getOptionalValue</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.world.level.block.state.properties.Property">Property</span>&lt;<span class="ident">T</span>&gt;): <span class="type-link" data-type="java.util.Optional">Optional</span>&lt;<span class="ident">T</span>&gt; {};</div></div>
<div class="line" data-text="fun setValue(arg0: V, arg1: Property<T>): S {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">setValue</span>(<span class="arg-name">arg0</span>: <span class="ident">V</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.world.level.block.state.properties.Property">Property</span>&lt;<span class="ident">T</span>&gt;): <span class="ident">S</span> {};</div></div>
<div class="line" data-text="fun trySetValue(arg0: V, arg1: Property<T>): S {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">trySetValue</span>(<span class="arg-name">arg0</span>: <span class="ident">V</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.world.level.block.state.properties.Property">Property</span>&lt;<span class="ident">T</span>&gt;): <span class="ident">S</span> {};</div></div>
<div class="line" data-text="fun populateNeighbours(arg0: Map<Map<Property<?>, Comparable<?>>, S>): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">populateNeighbours</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.Map">Map</span>&lt;<span class="type-link" data-type="java.util.Map">Map</span>&lt;<span class="type-link" data-type="net.minecraft.world.level.block.state.properties.Property">Property</span>&lt;<span class="type-link" data-type="?">?</span>&gt;, <span class="type-link" data-type="java.lang.Comparable">Comparable</span>&lt;<span class="type-link" data-type="?">?</span>&gt;&gt;, <span class="ident">S</span>&gt;): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="private fun makeNeighbourValues(arg0: Comparable<*>, arg1: Property<*>): Map<Property<?>, Comparable<?>> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">makeNeighbourValues</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.Comparable">Comparable</span>&lt;<span class="kw">*</span>&gt;, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.world.level.block.state.properties.Property">Property</span>&lt;<span class="kw">*</span>&gt;): <span class="type-link" data-type="java.util.Map">Map</span>&lt;<span class="type-link" data-type="net.minecraft.world.level.block.state.properties.Property">Property</span>&lt;<span class="type-link" data-type="?">?</span>&gt;, <span class="type-link" data-type="java.lang.Comparable">Comparable</span>&lt;<span class="type-link" data-type="?">?</span>&gt;&gt; {};</div></div>
<div class="line" data-text="fun getValues(): Map<Property<?>, Comparable<?>> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getValues</span>(): <span class="type-link" data-type="java.util.Map">Map</span>&lt;<span class="type-link" data-type="net.minecraft.world.level.block.state.properties.Property">Property</span>&lt;<span class="type-link" data-type="?">?</span>&gt;, <span class="type-link" data-type="java.lang.Comparable">Comparable</span>&lt;<span class="type-link" data-type="?">?</span>&gt;&gt; {};</div></div>
<div class="line" data-text="companion object {" style="opacity: 0;"><br><div style="padding-left: 2em"><span class="kw">companion object</span> {</div></div>
<div class="line" data-text="@JvmStaticfinal val CODEC: Codec<BlockState>;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">final</span> <span class="kw">val</span> <span class="ident">CODEC</span>: <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="type-link" data-type="net.minecraft.world.level.block.state.BlockState">BlockState</span>&gt;;</div></div>
<div class="line" data-text="@JvmStaticprotected fun findNextInCollection(arg0: T, arg1: Collection<T>): T {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">protected</span> <span class="kw">fun</span> <span class="method-name">findNextInCollection</span>(<span class="arg-name">arg0</span>: <span class="ident">T</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="java.util.Collection">Collection</span>&lt;<span class="ident">T</span>&gt;): <span class="ident">T</span> {};</div></div>
<div class="line" data-text="@JvmStaticprotected fun codec(arg0: Codec<O>, arg1: Function<O, S>): Codec<S> {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">protected</span> <span class="kw">fun</span> <span class="method-name">codec</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">O</span>&gt;, <span class="arg-name">arg1</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="ident">O</span>, <span class="ident">S</span>&gt;): <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">S</span>&gt; {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_28497(arg0: Object, arg1: Function): MapCodec {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_28497</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.Object">Object</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>): <span class="type-link" data-type="com.mojang.serialization.MapCodec">MapCodec</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_38860(arg0: Optional, arg1: StateHolder): StateHolder {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_38860</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.Optional">Optional</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.world.level.block.state.StateHolder">StateHolder</span>): <span class="type-link" data-type="net.minecraft.world.level.block.state.StateHolder">StateHolder</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_28492(arg0: StateHolder): Object {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_28492</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.world.level.block.state.StateHolder">StateHolder</span>): <span class="type-link" data-type="java.lang.Object">Object</span> {};</div></div>
<div class="line" data-text="}" style="opacity: 0;"><div style="padding-left: 2em">}</div></div>
<div class="line" data-text="}" style="opacity: 0;"><div>}</div></div>
<div class="line" data-text="" style="opacity: 0;"></div></div></div>
			
	<div id="hover-preview" style="
	  position: fixed;
	  overflow: auto;
	  background: #2b2b2b;
	  color: #ddd;
	  border: 1px solid #444;
	  border-radius: 6px;
	  font-size: 13px;
	  padding: 8px;
	  display: none;
	  z-index: 50;
	  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.5);
	  pointer-events: auto;
	">
	  <div id="hover-content"></div>
	</div>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/constantsPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/consoleViewer.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/classPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/searchBarViewer.js"></script>
		  </body>
		  </html>
[Log] <!DOCTYPE html>
		  <html lang="en">
		  <head>
			<meta charset="UTF-8">
			<style>
			  
		#class-search-bar {
		display: flex;
		align-items: center;
		gap: 8px;
		padding: 8px 12px;
		background: #2b2b2b;
		border-bottom: 1px solid #444;
		z-index: 150;
		position: relative;
		}

		#class-search-results {
		position: absolute;
		top: 100%;
		left: 0;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: 100%;
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
		}

			  
	@keyframes pop {
	  0% { transform: scale(1); }
	  50% { transform: scale(1.04); }
	  100% { transform: scale(1.035); }
	}
			  
	body {
	  margin: 0;
	  font-family: Consolas, monospace;
	  background: #1e1e1e;
	  color: rgb(210, 222, 174);
	  padding: 16px;
	}
			  
	#main {
	  cursor: text;
	  flex-grow: 1;
	  height: 100vh;
	  overflow: visible;
	  padding: 16px;
	  box-sizing: border-box;
	}
  
	.kw {
	  color: rgba(76, 156, 222, 0.93);
	  font-weight: bold;
	}
  
	.annotation {
	  color: rgb(238, 223, 154);
	}
  
	.type-link {
	  color: rgba(108, 220, 175, 0.92);
	  cursor: default;
	  text-decoration: none;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link {
	  cursor: pointer;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link:hover {
	  color: rgba(158, 234, 203, 0.92);
	  text-decoration: underline;
	  display: inline-block;
	  animation: pop 0.17s ease-in-out forwards;
	}
  
	.ident {
	  color: #9cdcfe;
	}
  
	.method-name {
	  color: rgba(231, 229, 151, 0.92);
	}
  
	.arg-name {
	  color: rgba(104, 208, 237, 0.97);
	}
  
	.line {
	  opacity: 0;
	  transition: opacity 0.05s linear;
	}
			  
	.highlight-box {
	  position: absolute;
	  background-color: rgba(255, 160, 80, 0.35);
	  border-radius: 2px;
	}
  
	.highlight-box.current {
	  outline: 1px solid #3794ff;
	  background-color: rgba(55, 148, 255, 0.3);
	  box-shadow: 0 0 4px #3794ff99;
	  z-index: 60;
	}
  
	.debug-overlay-wrapper {
	  position: fixed;
	  pointer-events: none;
	  z-index: 10000;
	}
  
	.debug-overlay-wrapper > div {
	  position: absolute;
	  pointer-events: auto;
	  background: rgba(255, 0, 0, 0.2);
	}
  
	#search-bar button {
	  background-color: rgba(30, 30, 30, 0.27);
	  color: white;
	  border: 1px solid #555;
	  border-radius: 6px;
	  padding: 4px 8px;
	  cursor: pointer;
	  transition: all 0.2s ease-in-out;
	  font-size: 13px;
	  font-family: inherit;
	  user-select: none;
	}
  
	#search-bar button.active {
	  background-color: #094771;
	  border-color: #3794ff;
	  color: white;
	}
			</style>
		  </head>
		  <body>
		    
	<div id="class-search-bar" style="
	  display: flex;
	  align-items: center;
	  gap: 8px;
	  padding: 8px 12px;
	  background: #2b2b2b;
	  border-bottom: 1px solid #444;
	  z-index: 150;
	">
	  <input id="class-search-input" type="text" placeholder="Search classes..." style="
		flex-grow: 1;
		padding: 6px 10px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 6px;
		font-family: inherit;
	  ">
	  <div id="class-search-results" style="
		position: absolute;
		top: 42px;
		left: 12px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: calc(100% - 24px);
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
	  "></div>
	</div>
			
	<div id="search-bar" style="
	  display: none;
	  position: fixed;
	  top: 8px;
	  right: 8px;
	  z-index: 200;
	  background: #2c2c2c;
	  padding: 4px 8px;
	  border-radius: 4px;
	  display: flex;
	  gap: 4px;
	  align-items: center;
	">
	  <input type="text" id="search-input" placeholder="Search..." style="
		width: 180px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		padding: 4px;
	  " />
	  <button id="toggle-case" title="Match Case">Aa</button>
	  <button id="toggle-whole" title="Whole Word">â›¶</button>
	  <button id="toggle-regex" title="Regex">*</button>
	  <span id="search-count" style="
		color: white;
		min-width: 30px;
		text-align: center;
		font-size: 13px;
		font-family: Arial, sans-serif;
	  ">No Results</span>
	  <button id="search-prev" title="Previous Match">â†‘</button>
	  <button id="search-next" title="Next Match">â†“</button>
	  <button id="search-close" title="Close Search" style="margin-left: auto;">âœ–</button>
	</div>
			
  <div id="console-output" style="
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 160px;
    background: #111;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    overflow-y: auto;
    padding: 24px 10px 6px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
    <button id="console-minimize" style="
      position: absolute;
      top: 4px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 2px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">â€“</button>
    <div id="console-content"></div>
  </div>

  <div id="console-bar" style="
    display: none;
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 24px;
    background: #222;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
  	<span>Console</span>
    <button id="console-restore" style="
      position: absolute;
      top: 1px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 1px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">+</button>
  </div>
			<div id="main"><div class="line" data-text="package net.fabricmc.fabric.api.block.v1" style="opacity: 0;"><div><span class="kw">package</span> <span class="type-link" data-package="net"><span class="ident">net</span></span><span>.</span><span class="type-link" data-package="net.fabricmc"><span class="ident">fabricmc</span></span><span>.</span><span class="type-link" data-package="net.fabricmc.fabric"><span class="ident">fabric</span></span><span>.</span><span class="type-link" data-package="net.fabricmc.fabric.api"><span class="ident">api</span></span><span>.</span><span class="type-link" data-package="net.fabricmc.fabric.api.block"><span class="ident">block</span></span><span>.</span><span class="type-link" data-package="net.fabricmc.fabric.api.block.v1"><span class="ident">v1</span></span></div><br></div>
<div class="line" data-text=" interface FabricBlockState {" style="opacity: 0;"><div id="current-class"> <span class="kw">interface</span> <span class="ident">FabricBlockState</span> {</div></div>
<div class="line" data-text="fun getAppearance(arg0: BlockPos, arg1: BlockState, arg2: BlockPos, arg3: Direction, arg4: BlockAndTintGetter): BlockState {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getAppearance</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.world.level.block.state.BlockState">BlockState</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg3</span>: <span class="type-link" data-type="net.minecraft.core.Direction">Direction</span>, <span class="arg-name">arg4</span>: <span class="type-link" data-type="net.minecraft.world.level.BlockAndTintGetter">BlockAndTintGetter</span>): <span class="type-link" data-type="net.minecraft.world.level.block.state.BlockState">BlockState</span> {};</div></div>
<div class="line" data-text="}" style="opacity: 0;"><div>}</div></div>
<div class="line" data-text="" style="opacity: 0;"></div></div></div>
			
	<div id="hover-preview" style="
	  position: fixed;
	  overflow: auto;
	  background: #2b2b2b;
	  color: #ddd;
	  border: 1px solid #444;
	  border-radius: 6px;
	  font-size: 13px;
	  padding: 8px;
	  display: none;
	  z-index: 50;
	  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.5);
	  pointer-events: auto;
	">
	  <div id="hover-content"></div>
	</div>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/constantsPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/consoleViewer.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/classPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/searchBarViewer.js"></script>
		  </body>
		  </html>
[Log] <!DOCTYPE html>
		  <html lang="en">
		  <head>
			<meta charset="UTF-8">
			<style>
			  
		#class-search-bar {
		display: flex;
		align-items: center;
		gap: 8px;
		padding: 8px 12px;
		background: #2b2b2b;
		border-bottom: 1px solid #444;
		z-index: 150;
		position: relative;
		}

		#class-search-results {
		position: absolute;
		top: 100%;
		left: 0;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: 100%;
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
		}

			  
	@keyframes pop {
	  0% { transform: scale(1); }
	  50% { transform: scale(1.04); }
	  100% { transform: scale(1.035); }
	}
			  
	body {
	  margin: 0;
	  font-family: Consolas, monospace;
	  background: #1e1e1e;
	  color: rgb(210, 222, 174);
	  padding: 16px;
	}
			  
	#main {
	  cursor: text;
	  flex-grow: 1;
	  height: 100vh;
	  overflow: visible;
	  padding: 16px;
	  box-sizing: border-box;
	}
  
	.kw {
	  color: rgba(76, 156, 222, 0.93);
	  font-weight: bold;
	}
  
	.annotation {
	  color: rgb(238, 223, 154);
	}
  
	.type-link {
	  color: rgba(108, 220, 175, 0.92);
	  cursor: default;
	  text-decoration: none;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link {
	  cursor: pointer;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link:hover {
	  color: rgba(158, 234, 203, 0.92);
	  text-decoration: underline;
	  display: inline-block;
	  animation: pop 0.17s ease-in-out forwards;
	}
  
	.ident {
	  color: #9cdcfe;
	}
  
	.method-name {
	  color: rgba(231, 229, 151, 0.92);
	}
  
	.arg-name {
	  color: rgba(104, 208, 237, 0.97);
	}
  
	.line {
	  opacity: 0;
	  transition: opacity 0.05s linear;
	}
			  
	.highlight-box {
	  position: absolute;
	  background-color: rgba(255, 160, 80, 0.35);
	  border-radius: 2px;
	}
  
	.highlight-box.current {
	  outline: 1px solid #3794ff;
	  background-color: rgba(55, 148, 255, 0.3);
	  box-shadow: 0 0 4px #3794ff99;
	  z-index: 60;
	}
  
	.debug-overlay-wrapper {
	  position: fixed;
	  pointer-events: none;
	  z-index: 10000;
	}
  
	.debug-overlay-wrapper > div {
	  position: absolute;
	  pointer-events: auto;
	  background: rgba(255, 0, 0, 0.2);
	}
  
	#search-bar button {
	  background-color: rgba(30, 30, 30, 0.27);
	  color: white;
	  border: 1px solid #555;
	  border-radius: 6px;
	  padding: 4px 8px;
	  cursor: pointer;
	  transition: all 0.2s ease-in-out;
	  font-size: 13px;
	  font-family: inherit;
	  user-select: none;
	}
  
	#search-bar button.active {
	  background-color: #094771;
	  border-color: #3794ff;
	  color: white;
	}
			</style>
		  </head>
		  <body>
		    
	<div id="class-search-bar" style="
	  display: flex;
	  align-items: center;
	  gap: 8px;
	  padding: 8px 12px;
	  background: #2b2b2b;
	  border-bottom: 1px solid #444;
	  z-index: 150;
	">
	  <input id="class-search-input" type="text" placeholder="Search classes..." style="
		flex-grow: 1;
		padding: 6px 10px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 6px;
		font-family: inherit;
	  ">
	  <div id="class-search-results" style="
		position: absolute;
		top: 42px;
		left: 12px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: calc(100% - 24px);
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
	  "></div>
	</div>
			
	<div id="search-bar" style="
	  display: none;
	  position: fixed;
	  top: 8px;
	  right: 8px;
	  z-index: 200;
	  background: #2c2c2c;
	  padding: 4px 8px;
	  border-radius: 4px;
	  display: flex;
	  gap: 4px;
	  align-items: center;
	">
	  <input type="text" id="search-input" placeholder="Search..." style="
		width: 180px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		padding: 4px;
	  " />
	  <button id="toggle-case" title="Match Case">Aa</button>
	  <button id="toggle-whole" title="Whole Word">â›¶</button>
	  <button id="toggle-regex" title="Regex">*</button>
	  <span id="search-count" style="
		color: white;
		min-width: 30px;
		text-align: center;
		font-size: 13px;
		font-family: Arial, sans-serif;
	  ">No Results</span>
	  <button id="search-prev" title="Previous Match">â†‘</button>
	  <button id="search-next" title="Next Match">â†“</button>
	  <button id="search-close" title="Close Search" style="margin-left: auto;">âœ–</button>
	</div>
			
  <div id="console-output" style="
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 160px;
    background: #111;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    overflow-y: auto;
    padding: 24px 10px 6px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
    <button id="console-minimize" style="
      position: absolute;
      top: 4px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 2px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">â€“</button>
    <div id="console-content"></div>
  </div>

  <div id="console-bar" style="
    display: none;
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 24px;
    background: #222;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
  	<span>Console</span>
    <button id="console-restore" style="
      position: absolute;
      top: 1px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 1px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">+</button>
  </div>
			<div id="main"><div class="line" data-text="package com.mojang.serialization" style="opacity: 0;"><div><span class="kw">package</span> <span class="type-link" data-package="com"><span class="ident">com</span></span><span>.</span><span class="type-link" data-package="com.mojang"><span class="ident">mojang</span></span><span>.</span><span class="type-link" data-package="com.mojang.serialization"><span class="ident">serialization</span></span></div><br></div>
<div class="line" data-text=" interface Codec<A> : Encoder, Decoder {" style="opacity: 0;"><div id="current-class"> <span class="kw">interface</span> <span class="ident">Codec</span>&lt;<span class="ident">A</span>&gt; : <span class="type-link" data-type="com.mojang.serialization.Encoder">Encoder</span>, <span class="type-link" data-type="com.mojang.serialization.Decoder">Decoder</span> {</div></div>
<div class="line" data-text="fun withLifecycle(arg0: Lifecycle): Decoder {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">withLifecycle</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="com.mojang.serialization.Lifecycle">Lifecycle</span>): <span class="type-link" data-type="com.mojang.serialization.Decoder">Decoder</span> {};</div></div>
<div class="line" data-text="fun stable(): Codec<A> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">stable</span>(): <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">A</span>&gt; {};</div></div>
<div class="line" data-text="fun deprecated(arg0: Int): Codec<A> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">deprecated</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">A</span>&gt; {};</div></div>
<div class="line" data-text="fun listOf(): Codec<List<A>> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">listOf</span>(): <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="type-link" data-type="java.util.List">List</span>&lt;<span class="ident">A</span>&gt;&gt; {};</div></div>
<div class="line" data-text="fun listOf(arg0: Int, arg1: Int): Codec<List<A>> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">listOf</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="type-link" data-type="java.util.List">List</span>&lt;<span class="ident">A</span>&gt;&gt; {};</div></div>
<div class="line" data-text="fun sizeLimitedListOf(arg0: Int): Codec<List<A>> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">sizeLimitedListOf</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="type-link" data-type="java.util.List">List</span>&lt;<span class="ident">A</span>&gt;&gt; {};</div></div>
<div class="line" data-text="fun xmap(arg0: Function<in A, out S>, arg1: Function<in S, out A>): Codec<S> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">xmap</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="kw">in</span> <span class="ident">A</span>, <span class="kw">out</span> <span class="ident">S</span>&gt;, <span class="arg-name">arg1</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="kw">in</span> <span class="ident">S</span>, <span class="kw">out</span> <span class="ident">A</span>&gt;): <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">S</span>&gt; {};</div></div>
<div class="line" data-text="fun comapFlatMap(arg0: Function<in A, DataResult<? extends S>>, arg1: Function<in S, out A>): Codec<S> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">comapFlatMap</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="kw">in</span> <span class="ident">A</span>, <span class="type-link" data-type="out com.mojang.serialization.DataResult">DataResult</span>&lt;<span class="type-link" data-type="? extends S">? extends S</span>&gt;&gt;, <span class="arg-name">arg1</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="kw">in</span> <span class="ident">S</span>, <span class="kw">out</span> <span class="ident">A</span>&gt;): <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">S</span>&gt; {};</div></div>
<div class="line" data-text="fun flatComapMap(arg0: Function<in A, out S>, arg1: Function<in S, DataResult<? extends A>>): Codec<S> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">flatComapMap</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="kw">in</span> <span class="ident">A</span>, <span class="kw">out</span> <span class="ident">S</span>&gt;, <span class="arg-name">arg1</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="kw">in</span> <span class="ident">S</span>, <span class="type-link" data-type="out com.mojang.serialization.DataResult">DataResult</span>&lt;<span class="type-link" data-type="? extends A">? extends A</span>&gt;&gt;): <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">S</span>&gt; {};</div></div>
<div class="line" data-text="fun flatXmap(arg0: Function<in A, DataResult<? extends S>>, arg1: Function<in S, DataResult<? extends A>>): Codec<S> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">flatXmap</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="kw">in</span> <span class="ident">A</span>, <span class="type-link" data-type="out com.mojang.serialization.DataResult">DataResult</span>&lt;<span class="type-link" data-type="? extends S">? extends S</span>&gt;&gt;, <span class="arg-name">arg1</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="kw">in</span> <span class="ident">S</span>, <span class="type-link" data-type="out com.mojang.serialization.DataResult">DataResult</span>&lt;<span class="type-link" data-type="? extends A">? extends A</span>&gt;&gt;): <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">S</span>&gt; {};</div></div>
<div class="line" data-text="fun fieldOf(arg0: String): MapDecoder {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">fieldOf</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.String">String</span>): <span class="type-link" data-type="com.mojang.serialization.MapDecoder">MapDecoder</span> {};</div></div>
<div class="line" data-text="fun optionalFieldOf(arg0: String): MapCodec<Optional<A>> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">optionalFieldOf</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.String">String</span>): <span class="type-link" data-type="com.mojang.serialization.MapCodec">MapCodec</span>&lt;<span class="type-link" data-type="java.util.Optional">Optional</span>&lt;<span class="ident">A</span>&gt;&gt; {};</div></div>
<div class="line" data-text="fun optionalFieldOf(arg0: A, arg1: String): MapCodec<A> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">optionalFieldOf</span>(<span class="arg-name">arg0</span>: <span class="ident">A</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="java.lang.String">String</span>): <span class="type-link" data-type="com.mojang.serialization.MapCodec">MapCodec</span>&lt;<span class="ident">A</span>&gt; {};</div></div>
<div class="line" data-text="fun optionalFieldOf(arg0: A, arg1: Lifecycle, arg2: String): MapCodec<A> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">optionalFieldOf</span>(<span class="arg-name">arg0</span>: <span class="ident">A</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="com.mojang.serialization.Lifecycle">Lifecycle</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="java.lang.String">String</span>): <span class="type-link" data-type="com.mojang.serialization.MapCodec">MapCodec</span>&lt;<span class="ident">A</span>&gt; {};</div></div>
<div class="line" data-text="fun optionalFieldOf(arg0: A, arg1: Lifecycle, arg2: Lifecycle, arg3: String): MapCodec<A> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">optionalFieldOf</span>(<span class="arg-name">arg0</span>: <span class="ident">A</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="com.mojang.serialization.Lifecycle">Lifecycle</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="com.mojang.serialization.Lifecycle">Lifecycle</span>, <span class="arg-name">arg3</span>: <span class="type-link" data-type="java.lang.String">String</span>): <span class="type-link" data-type="com.mojang.serialization.MapCodec">MapCodec</span>&lt;<span class="ident">A</span>&gt; {};</div></div>
<div class="line" data-text="fun lenientOptionalFieldOf(arg0: String): MapCodec<Optional<A>> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">lenientOptionalFieldOf</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.String">String</span>): <span class="type-link" data-type="com.mojang.serialization.MapCodec">MapCodec</span>&lt;<span class="type-link" data-type="java.util.Optional">Optional</span>&lt;<span class="ident">A</span>&gt;&gt; {};</div></div>
<div class="line" data-text="fun lenientOptionalFieldOf(arg0: A, arg1: String): MapCodec<A> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">lenientOptionalFieldOf</span>(<span class="arg-name">arg0</span>: <span class="ident">A</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="java.lang.String">String</span>): <span class="type-link" data-type="com.mojang.serialization.MapCodec">MapCodec</span>&lt;<span class="ident">A</span>&gt; {};</div></div>
<div class="line" data-text="fun lenientOptionalFieldOf(arg0: A, arg1: Lifecycle, arg2: String): MapCodec<A> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">lenientOptionalFieldOf</span>(<span class="arg-name">arg0</span>: <span class="ident">A</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="com.mojang.serialization.Lifecycle">Lifecycle</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="java.lang.String">String</span>): <span class="type-link" data-type="com.mojang.serialization.MapCodec">MapCodec</span>&lt;<span class="ident">A</span>&gt; {};</div></div>
<div class="line" data-text="fun lenientOptionalFieldOf(arg0: A, arg1: Lifecycle, arg2: Lifecycle, arg3: String): MapCodec<A> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">lenientOptionalFieldOf</span>(<span class="arg-name">arg0</span>: <span class="ident">A</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="com.mojang.serialization.Lifecycle">Lifecycle</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="com.mojang.serialization.Lifecycle">Lifecycle</span>, <span class="arg-name">arg3</span>: <span class="type-link" data-type="java.lang.String">String</span>): <span class="type-link" data-type="com.mojang.serialization.MapCodec">MapCodec</span>&lt;<span class="ident">A</span>&gt; {};</div></div>
<div class="line" data-text="private fun optionalFieldOf(arg0: A, arg1: Boolean, arg2: String): MapCodec<A> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">optionalFieldOf</span>(<span class="arg-name">arg0</span>: <span class="ident">A</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="java.lang.String">String</span>): <span class="type-link" data-type="com.mojang.serialization.MapCodec">MapCodec</span>&lt;<span class="ident">A</span>&gt; {};</div></div>
<div class="line" data-text="private fun optionalFieldOf(arg0: A, arg1: Boolean, arg2: Lifecycle, arg3: Lifecycle, arg4: String): MapCodec<A> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">optionalFieldOf</span>(<span class="arg-name">arg0</span>: <span class="ident">A</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="com.mojang.serialization.Lifecycle">Lifecycle</span>, <span class="arg-name">arg3</span>: <span class="type-link" data-type="com.mojang.serialization.Lifecycle">Lifecycle</span>, <span class="arg-name">arg4</span>: <span class="type-link" data-type="java.lang.String">String</span>): <span class="type-link" data-type="com.mojang.serialization.MapCodec">MapCodec</span>&lt;<span class="ident">A</span>&gt; {};</div></div>
<div class="line" data-text="fun mapResult(arg0: Codec$ResultFunction<A>): Codec<A> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">mapResult</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="com.mojang.serialization.Codec$ResultFunction">Codec$ResultFunction</span>&lt;<span class="ident">A</span>&gt;): <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">A</span>&gt; {};</div></div>
<div class="line" data-text="fun orElse(arg0: A, arg1: Consumer<String>): Codec<A> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">orElse</span>(<span class="arg-name">arg0</span>: <span class="ident">A</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="java.util.function.Consumer">Consumer</span>&lt;<span class="type-link" data-type="java.lang.String">String</span>&gt;): <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">A</span>&gt; {};</div></div>
<div class="line" data-text="fun orElse(arg0: A, arg1: UnaryOperator<String>): Codec<A> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">orElse</span>(<span class="arg-name">arg0</span>: <span class="ident">A</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="java.util.function.UnaryOperator">UnaryOperator</span>&lt;<span class="type-link" data-type="java.lang.String">String</span>&gt;): <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">A</span>&gt; {};</div></div>
<div class="line" data-text="fun orElseGet(arg0: Consumer<String>, arg1: Supplier<out A>): Codec<A> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">orElseGet</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.function.Consumer">Consumer</span>&lt;<span class="type-link" data-type="java.lang.String">String</span>&gt;, <span class="arg-name">arg1</span>: <span class="type-link" data-type="java.util.function.Supplier">Supplier</span>&lt;<span class="kw">out</span> <span class="ident">A</span>&gt;): <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">A</span>&gt; {};</div></div>
<div class="line" data-text="fun orElseGet(arg0: Supplier<out A>, arg1: UnaryOperator<String>): Codec<A> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">orElseGet</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.function.Supplier">Supplier</span>&lt;<span class="kw">out</span> <span class="ident">A</span>&gt;, <span class="arg-name">arg1</span>: <span class="type-link" data-type="java.util.function.UnaryOperator">UnaryOperator</span>&lt;<span class="type-link" data-type="java.lang.String">String</span>&gt;): <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">A</span>&gt; {};</div></div>
<div class="line" data-text="fun orElse(arg0: A): Codec<A> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">orElse</span>(<span class="arg-name">arg0</span>: <span class="ident">A</span>): <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">A</span>&gt; {};</div></div>
<div class="line" data-text="fun orElseGet(arg0: Supplier<out A>): Codec<A> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">orElseGet</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.function.Supplier">Supplier</span>&lt;<span class="kw">out</span> <span class="ident">A</span>&gt;): <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">A</span>&gt; {};</div></div>
<div class="line" data-text="fun promotePartial(arg0: Consumer<String>): Codec<A> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">promotePartial</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.function.Consumer">Consumer</span>&lt;<span class="type-link" data-type="java.lang.String">String</span>&gt;): <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">A</span>&gt; {};</div></div>
<div class="line" data-text="fun dispatch(arg0: Function<in A, MapCodec<? extends E>>, arg1: Function<in E, out A>): Codec<E> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">dispatch</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="kw">in</span> <span class="ident">A</span>, <span class="type-link" data-type="out com.mojang.serialization.MapCodec">MapCodec</span>&lt;<span class="type-link" data-type="? extends E">? extends E</span>&gt;&gt;, <span class="arg-name">arg1</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="kw">in</span> <span class="ident">E</span>, <span class="kw">out</span> <span class="ident">A</span>&gt;): <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">E</span>&gt; {};</div></div>
<div class="line" data-text="fun dispatch(arg0: String, arg1: Function<in A, MapCodec<? extends E>>, arg2: Function<in E, out A>): Codec<E> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">dispatch</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.String">String</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="kw">in</span> <span class="ident">A</span>, <span class="type-link" data-type="out com.mojang.serialization.MapCodec">MapCodec</span>&lt;<span class="type-link" data-type="? extends E">? extends E</span>&gt;&gt;, <span class="arg-name">arg2</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="kw">in</span> <span class="ident">E</span>, <span class="kw">out</span> <span class="ident">A</span>&gt;): <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">E</span>&gt; {};</div></div>
<div class="line" data-text="fun dispatchStable(arg0: Function<in A, MapCodec<? extends E>>, arg1: Function<in E, out A>): Codec<E> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">dispatchStable</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="kw">in</span> <span class="ident">A</span>, <span class="type-link" data-type="out com.mojang.serialization.MapCodec">MapCodec</span>&lt;<span class="type-link" data-type="? extends E">? extends E</span>&gt;&gt;, <span class="arg-name">arg1</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="kw">in</span> <span class="ident">E</span>, <span class="kw">out</span> <span class="ident">A</span>&gt;): <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">E</span>&gt; {};</div></div>
<div class="line" data-text="fun partialDispatch(arg0: String, arg1: Function<in A, DataResult<MapCodec<? extends E>>>, arg2: Function<in E, DataResult<? extends A>>): Codec<E> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">partialDispatch</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.String">String</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="kw">in</span> <span class="ident">A</span>, <span class="type-link" data-type="out com.mojang.serialization.DataResult">DataResult</span>&lt;<span class="type-link" data-type="? extends com.mojang.serialization.MapCodec">MapCodec</span>&lt;<span class="type-link" data-type="? extends E">? extends E</span>&gt;&gt;&gt;, <span class="arg-name">arg2</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="kw">in</span> <span class="ident">E</span>, <span class="type-link" data-type="out com.mojang.serialization.DataResult">DataResult</span>&lt;<span class="type-link" data-type="? extends A">? extends A</span>&gt;&gt;): <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">E</span>&gt; {};</div></div>
<div class="line" data-text="fun dispatchMap(arg0: Function<in A, MapCodec<? extends E>>, arg1: Function<in E, out A>): MapCodec<E> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">dispatchMap</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="kw">in</span> <span class="ident">A</span>, <span class="type-link" data-type="out com.mojang.serialization.MapCodec">MapCodec</span>&lt;<span class="type-link" data-type="? extends E">? extends E</span>&gt;&gt;, <span class="arg-name">arg1</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="kw">in</span> <span class="ident">E</span>, <span class="kw">out</span> <span class="ident">A</span>&gt;): <span class="type-link" data-type="com.mojang.serialization.MapCodec">MapCodec</span>&lt;<span class="ident">E</span>&gt; {};</div></div>
<div class="line" data-text="fun dispatchMap(arg0: String, arg1: Function<in A, MapCodec<? extends E>>, arg2: Function<in E, out A>): MapCodec<E> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">dispatchMap</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.String">String</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="kw">in</span> <span class="ident">A</span>, <span class="type-link" data-type="out com.mojang.serialization.MapCodec">MapCodec</span>&lt;<span class="type-link" data-type="? extends E">? extends E</span>&gt;&gt;, <span class="arg-name">arg2</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="kw">in</span> <span class="ident">E</span>, <span class="kw">out</span> <span class="ident">A</span>&gt;): <span class="type-link" data-type="com.mojang.serialization.MapCodec">MapCodec</span>&lt;<span class="ident">E</span>&gt; {};</div></div>
<div class="line" data-text="fun validate(arg0: Function<A, DataResult<A>>): Codec<A> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">validate</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="ident">A</span>, <span class="type-link" data-type="com.mojang.serialization.DataResult">DataResult</span>&lt;<span class="ident">A</span>&gt;&gt;): <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">A</span>&gt; {};</div></div>
<div class="line" data-text="fun promotePartial(arg0: Consumer): Decoder {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">promotePartial</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.function.Consumer">Consumer</span>): <span class="type-link" data-type="com.mojang.serialization.Decoder">Decoder</span> {};</div></div>
<div class="line" data-text="fun encode(arg0: A, arg1: T, arg2: DynamicOps<T>): DataResult<T>;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">encode</span>(<span class="arg-name">arg0</span>: <span class="ident">A</span>, <span class="arg-name">arg1</span>: <span class="ident">T</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="com.mojang.serialization.DynamicOps">DynamicOps</span>&lt;<span class="ident">T</span>&gt;): <span class="type-link" data-type="com.mojang.serialization.DataResult">DataResult</span>&lt;<span class="ident">T</span>&gt;;</div></div>
<div class="line" data-text="fun encodeStart(arg0: A, arg1: DynamicOps<T>): DataResult<T> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">encodeStart</span>(<span class="arg-name">arg0</span>: <span class="ident">A</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="com.mojang.serialization.DynamicOps">DynamicOps</span>&lt;<span class="ident">T</span>&gt;): <span class="type-link" data-type="com.mojang.serialization.DataResult">DataResult</span>&lt;<span class="ident">T</span>&gt; {};</div></div>
<div class="line" data-text="fun comap(arg0: Function<in B, out A>): Encoder<B> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">comap</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="kw">in</span> <span class="ident">B</span>, <span class="kw">out</span> <span class="ident">A</span>&gt;): <span class="type-link" data-type="com.mojang.serialization.Encoder">Encoder</span>&lt;<span class="ident">B</span>&gt; {};</div></div>
<div class="line" data-text="fun flatComap(arg0: Function<in B, DataResult<? extends A>>): Encoder<B> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">flatComap</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="kw">in</span> <span class="ident">B</span>, <span class="type-link" data-type="out com.mojang.serialization.DataResult">DataResult</span>&lt;<span class="type-link" data-type="? extends A">? extends A</span>&gt;&gt;): <span class="type-link" data-type="com.mojang.serialization.Encoder">Encoder</span>&lt;<span class="ident">B</span>&gt; {};</div></div>
<div class="line" data-text="fun decode(arg0: T, arg1: DynamicOps<T>): DataResult<Pair<A, T>>;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">decode</span>(<span class="arg-name">arg0</span>: <span class="ident">T</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="com.mojang.serialization.DynamicOps">DynamicOps</span>&lt;<span class="ident">T</span>&gt;): <span class="type-link" data-type="com.mojang.serialization.DataResult">DataResult</span>&lt;<span class="type-link" data-type="com.mojang.datafixers.util.Pair">Pair</span>&lt;<span class="ident">A</span>, <span class="ident">T</span>&gt;&gt;;</div></div>
<div class="line" data-text="fun parse(arg0: T, arg1: DynamicOps<T>): DataResult<A> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">parse</span>(<span class="arg-name">arg0</span>: <span class="ident">T</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="com.mojang.serialization.DynamicOps">DynamicOps</span>&lt;<span class="ident">T</span>&gt;): <span class="type-link" data-type="com.mojang.serialization.DataResult">DataResult</span>&lt;<span class="ident">A</span>&gt; {};</div></div>
<div class="line" data-text="fun decode(arg0: Dynamic<T>): DataResult<Pair<A, T>> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">decode</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="com.mojang.serialization.Dynamic">Dynamic</span>&lt;<span class="ident">T</span>&gt;): <span class="type-link" data-type="com.mojang.serialization.DataResult">DataResult</span>&lt;<span class="type-link" data-type="com.mojang.datafixers.util.Pair">Pair</span>&lt;<span class="ident">A</span>, <span class="ident">T</span>&gt;&gt; {};</div></div>
<div class="line" data-text="fun parse(arg0: Dynamic<T>): DataResult<A> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">parse</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="com.mojang.serialization.Dynamic">Dynamic</span>&lt;<span class="ident">T</span>&gt;): <span class="type-link" data-type="com.mojang.serialization.DataResult">DataResult</span>&lt;<span class="ident">A</span>&gt; {};</div></div>
<div class="line" data-text="fun terminal(): Decoder$Terminal<A> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">terminal</span>(): <span class="type-link" data-type="com.mojang.serialization.Decoder$Terminal">Decoder$Terminal</span>&lt;<span class="ident">A</span>&gt; {};</div></div>
<div class="line" data-text="fun boxed(): Decoder$Boxed<A> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">boxed</span>(): <span class="type-link" data-type="com.mojang.serialization.Decoder$Boxed">Decoder$Boxed</span>&lt;<span class="ident">A</span>&gt; {};</div></div>
<div class="line" data-text="fun simple(): Decoder$Simple<A> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">simple</span>(): <span class="type-link" data-type="com.mojang.serialization.Decoder$Simple">Decoder$Simple</span>&lt;<span class="ident">A</span>&gt; {};</div></div>
<div class="line" data-text="fun flatMap(arg0: Function<in A, DataResult<? extends B>>): Decoder<B> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">flatMap</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="kw">in</span> <span class="ident">A</span>, <span class="type-link" data-type="out com.mojang.serialization.DataResult">DataResult</span>&lt;<span class="type-link" data-type="? extends B">? extends B</span>&gt;&gt;): <span class="type-link" data-type="com.mojang.serialization.Decoder">Decoder</span>&lt;<span class="ident">B</span>&gt; {};</div></div>
<div class="line" data-text="fun map(arg0: Function<in A, out B>): Decoder<B> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">map</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="kw">in</span> <span class="ident">A</span>, <span class="kw">out</span> <span class="ident">B</span>&gt;): <span class="type-link" data-type="com.mojang.serialization.Decoder">Decoder</span>&lt;<span class="ident">B</span>&gt; {};</div></div>
<div class="line" data-text="companion object {" style="opacity: 0;"><br><div style="padding-left: 2em"><span class="kw">companion object</span> {</div></div>
<div class="line" data-text="@JvmStaticfinal val BOOL: PrimitiveCodec<Boolean>;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">final</span> <span class="kw">val</span> <span class="ident">BOOL</span>: <span class="type-link" data-type="com.mojang.serialization.codecs.PrimitiveCodec">PrimitiveCodec</span>&lt;<span class="type-link" data-type="java.lang.Boolean">Boolean</span>&gt;;</div></div>
<div class="line" data-text="@JvmStaticfinal val BYTE: PrimitiveCodec<Byte>;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">final</span> <span class="kw">val</span> <span class="ident">BYTE</span>: <span class="type-link" data-type="com.mojang.serialization.codecs.PrimitiveCodec">PrimitiveCodec</span>&lt;<span class="type-link" data-type="java.lang.Byte">Byte</span>&gt;;</div></div>
<div class="line" data-text="@JvmStaticfinal val SHORT: PrimitiveCodec<Short>;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">final</span> <span class="kw">val</span> <span class="ident">SHORT</span>: <span class="type-link" data-type="com.mojang.serialization.codecs.PrimitiveCodec">PrimitiveCodec</span>&lt;<span class="type-link" data-type="java.lang.Short">Short</span>&gt;;</div></div>
<div class="line" data-text="@JvmStaticfinal val INT: PrimitiveCodec<Integer>;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">final</span> <span class="kw">val</span> <span class="ident">INT</span>: <span class="type-link" data-type="com.mojang.serialization.codecs.PrimitiveCodec">PrimitiveCodec</span>&lt;<span class="type-link" data-type="java.lang.Integer">Integer</span>&gt;;</div></div>
<div class="line" data-text="@JvmStaticfinal val LONG: PrimitiveCodec<Long>;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">final</span> <span class="kw">val</span> <span class="ident">LONG</span>: <span class="type-link" data-type="com.mojang.serialization.codecs.PrimitiveCodec">PrimitiveCodec</span>&lt;<span class="type-link" data-type="java.lang.Long">Long</span>&gt;;</div></div>
<div class="line" data-text="@JvmStaticfinal val FLOAT: PrimitiveCodec<Float>;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">final</span> <span class="kw">val</span> <span class="ident">FLOAT</span>: <span class="type-link" data-type="com.mojang.serialization.codecs.PrimitiveCodec">PrimitiveCodec</span>&lt;<span class="type-link" data-type="java.lang.Float">Float</span>&gt;;</div></div>
<div class="line" data-text="@JvmStaticfinal val DOUBLE: PrimitiveCodec<Double>;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">final</span> <span class="kw">val</span> <span class="ident">DOUBLE</span>: <span class="type-link" data-type="com.mojang.serialization.codecs.PrimitiveCodec">PrimitiveCodec</span>&lt;<span class="type-link" data-type="java.lang.Double">Double</span>&gt;;</div></div>
<div class="line" data-text="@JvmStaticfinal val STRING: PrimitiveCodec<String>;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">final</span> <span class="kw">val</span> <span class="ident">STRING</span>: <span class="type-link" data-type="com.mojang.serialization.codecs.PrimitiveCodec">PrimitiveCodec</span>&lt;<span class="type-link" data-type="java.lang.String">String</span>&gt;;</div></div>
<div class="line" data-text="@JvmStaticfinal val BYTE_BUFFER: PrimitiveCodec<ByteBuffer>;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">final</span> <span class="kw">val</span> <span class="ident">BYTE_BUFFER</span>: <span class="type-link" data-type="com.mojang.serialization.codecs.PrimitiveCodec">PrimitiveCodec</span>&lt;<span class="type-link" data-type="java.nio.ByteBuffer">ByteBuffer</span>&gt;;</div></div>
<div class="line" data-text="@JvmStaticfinal val INT_STREAM: PrimitiveCodec<IntStream>;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">final</span> <span class="kw">val</span> <span class="ident">INT_STREAM</span>: <span class="type-link" data-type="com.mojang.serialization.codecs.PrimitiveCodec">PrimitiveCodec</span>&lt;<span class="type-link" data-type="java.util.stream.IntStream">IntStream</span>&gt;;</div></div>
<div class="line" data-text="@JvmStaticfinal val LONG_STREAM: PrimitiveCodec<LongStream>;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">final</span> <span class="kw">val</span> <span class="ident">LONG_STREAM</span>: <span class="type-link" data-type="com.mojang.serialization.codecs.PrimitiveCodec">PrimitiveCodec</span>&lt;<span class="type-link" data-type="java.util.stream.LongStream">LongStream</span>&gt;;</div></div>
<div class="line" data-text="@JvmStaticfinal val PASSTHROUGH: Codec<Dynamic<?>>;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">final</span> <span class="kw">val</span> <span class="ident">PASSTHROUGH</span>: <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="type-link" data-type="com.mojang.serialization.Dynamic">Dynamic</span>&lt;<span class="type-link" data-type="?">?</span>&gt;&gt;;</div></div>
<div class="line" data-text="@JvmStaticfinal val EMPTY: MapCodec<Unit>;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">final</span> <span class="kw">val</span> <span class="ident">EMPTY</span>: <span class="type-link" data-type="com.mojang.serialization.MapCodec">MapCodec</span>&lt;<span class="type-link" data-type="com.mojang.datafixers.util.Unit">Unit</span>&gt;;</div></div>
<div class="line" data-text="@JvmStaticfun of(arg0: Decoder<A>, arg1: Encoder<A>): Codec<A> {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">of</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="com.mojang.serialization.Decoder">Decoder</span>&lt;<span class="ident">A</span>&gt;, <span class="arg-name">arg1</span>: <span class="type-link" data-type="com.mojang.serialization.Encoder">Encoder</span>&lt;<span class="ident">A</span>&gt;): <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">A</span>&gt; {};</div></div>
<div class="line" data-text="@JvmStaticfun of(arg0: Decoder<A>, arg1: Encoder<A>, arg2: String): Codec<A> {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">of</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="com.mojang.serialization.Decoder">Decoder</span>&lt;<span class="ident">A</span>&gt;, <span class="arg-name">arg1</span>: <span class="type-link" data-type="com.mojang.serialization.Encoder">Encoder</span>&lt;<span class="ident">A</span>&gt;, <span class="arg-name">arg2</span>: <span class="type-link" data-type="java.lang.String">String</span>): <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">A</span>&gt; {};</div></div>
<div class="line" data-text="@JvmStaticfun of(arg0: MapDecoder<A>, arg1: MapEncoder<A>): MapCodec<A> {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">of</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="com.mojang.serialization.MapDecoder">MapDecoder</span>&lt;<span class="ident">A</span>&gt;, <span class="arg-name">arg1</span>: <span class="type-link" data-type="com.mojang.serialization.MapEncoder">MapEncoder</span>&lt;<span class="ident">A</span>&gt;): <span class="type-link" data-type="com.mojang.serialization.MapCodec">MapCodec</span>&lt;<span class="ident">A</span>&gt; {};</div></div>
<div class="line" data-text="@JvmStaticfun of(arg0: MapDecoder<A>, arg1: MapEncoder<A>, arg2: Supplier<String>): MapCodec<A> {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">of</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="com.mojang.serialization.MapDecoder">MapDecoder</span>&lt;<span class="ident">A</span>&gt;, <span class="arg-name">arg1</span>: <span class="type-link" data-type="com.mojang.serialization.MapEncoder">MapEncoder</span>&lt;<span class="ident">A</span>&gt;, <span class="arg-name">arg2</span>: <span class="type-link" data-type="java.util.function.Supplier">Supplier</span>&lt;<span class="type-link" data-type="java.lang.String">String</span>&gt;): <span class="type-link" data-type="com.mojang.serialization.MapCodec">MapCodec</span>&lt;<span class="ident">A</span>&gt; {};</div></div>
<div class="line" data-text="@JvmStaticfun pair(arg0: Codec<F>, arg1: Codec<S>): Codec<Pair<F, S>> {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">pair</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">F</span>&gt;, <span class="arg-name">arg1</span>: <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">S</span>&gt;): <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="type-link" data-type="com.mojang.datafixers.util.Pair">Pair</span>&lt;<span class="ident">F</span>, <span class="ident">S</span>&gt;&gt; {};</div></div>
<div class="line" data-text="@JvmStaticfun either(arg0: Codec<F>, arg1: Codec<S>): Codec<Either<F, S>> {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">either</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">F</span>&gt;, <span class="arg-name">arg1</span>: <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">S</span>&gt;): <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="type-link" data-type="com.mojang.datafixers.util.Either">Either</span>&lt;<span class="ident">F</span>, <span class="ident">S</span>&gt;&gt; {};</div></div>
<div class="line" data-text="@JvmStaticfun xor(arg0: Codec<F>, arg1: Codec<S>): Codec<Either<F, S>> {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">xor</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">F</span>&gt;, <span class="arg-name">arg1</span>: <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">S</span>&gt;): <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="type-link" data-type="com.mojang.datafixers.util.Either">Either</span>&lt;<span class="ident">F</span>, <span class="ident">S</span>&gt;&gt; {};</div></div>
<div class="line" data-text="@JvmStaticfun withAlternative(arg0: Codec<out T>, arg1: Codec<T>): Codec<T> {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">withAlternative</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="kw">out</span> <span class="ident">T</span>&gt;, <span class="arg-name">arg1</span>: <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">T</span>&gt;): <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">T</span>&gt; {};</div></div>
<div class="line" data-text="@JvmStaticfun withAlternative(arg0: Codec<T>, arg1: Codec<U>, arg2: Function<U, T>): Codec<T> {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">withAlternative</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">T</span>&gt;, <span class="arg-name">arg1</span>: <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">U</span>&gt;, <span class="arg-name">arg2</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="ident">U</span>, <span class="ident">T</span>&gt;): <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">T</span>&gt; {};</div></div>
<div class="line" data-text="@JvmStaticfun mapPair(arg0: MapCodec<F>, arg1: MapCodec<S>): MapCodec<Pair<F, S>> {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">mapPair</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="com.mojang.serialization.MapCodec">MapCodec</span>&lt;<span class="ident">F</span>&gt;, <span class="arg-name">arg1</span>: <span class="type-link" data-type="com.mojang.serialization.MapCodec">MapCodec</span>&lt;<span class="ident">S</span>&gt;): <span class="type-link" data-type="com.mojang.serialization.MapCodec">MapCodec</span>&lt;<span class="type-link" data-type="com.mojang.datafixers.util.Pair">Pair</span>&lt;<span class="ident">F</span>, <span class="ident">S</span>&gt;&gt; {};</div></div>
<div class="line" data-text="@JvmStaticfun mapEither(arg0: MapCodec<F>, arg1: MapCodec<S>): MapCodec<Either<F, S>> {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">mapEither</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="com.mojang.serialization.MapCodec">MapCodec</span>&lt;<span class="ident">F</span>&gt;, <span class="arg-name">arg1</span>: <span class="type-link" data-type="com.mojang.serialization.MapCodec">MapCodec</span>&lt;<span class="ident">S</span>&gt;): <span class="type-link" data-type="com.mojang.serialization.MapCodec">MapCodec</span>&lt;<span class="type-link" data-type="com.mojang.datafixers.util.Either">Either</span>&lt;<span class="ident">F</span>, <span class="ident">S</span>&gt;&gt; {};</div></div>
<div class="line" data-text="@JvmStaticfun list(arg0: Codec<E>): Codec<List<E>> {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">list</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">E</span>&gt;): <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="type-link" data-type="java.util.List">List</span>&lt;<span class="ident">E</span>&gt;&gt; {};</div></div>
<div class="line" data-text="@JvmStaticfun list(arg0: Codec<E>, arg1: Int, arg2: Int): Codec<List<E>> {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">list</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">E</span>&gt;, <span class="arg-name">arg1</span>: <span class="type-link" data-type="kotlin.Int">Int</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="type-link" data-type="java.util.List">List</span>&lt;<span class="ident">E</span>&gt;&gt; {};</div></div>
<div class="line" data-text="@JvmStaticfun compoundList(arg0: Codec<K>, arg1: Codec<V>): Codec<List<Pair<K, V>>> {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">compoundList</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">K</span>&gt;, <span class="arg-name">arg1</span>: <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">V</span>&gt;): <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="type-link" data-type="java.util.List">List</span>&lt;<span class="type-link" data-type="com.mojang.datafixers.util.Pair">Pair</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;&gt;&gt; {};</div></div>
<div class="line" data-text="@JvmStaticfun simpleMap(arg0: Codec<K>, arg1: Codec<V>, arg2: Keyable): SimpleMapCodec<K, V> {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">simpleMap</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">K</span>&gt;, <span class="arg-name">arg1</span>: <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">V</span>&gt;, <span class="arg-name">arg2</span>: <span class="type-link" data-type="com.mojang.serialization.Keyable">Keyable</span>): <span class="type-link" data-type="com.mojang.serialization.codecs.SimpleMapCodec">SimpleMapCodec</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt; {};</div></div>
<div class="line" data-text="@JvmStaticfun unboundedMap(arg0: Codec<K>, arg1: Codec<V>): UnboundedMapCodec<K, V> {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">unboundedMap</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">K</span>&gt;, <span class="arg-name">arg1</span>: <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">V</span>&gt;): <span class="type-link" data-type="com.mojang.serialization.codecs.UnboundedMapCodec">UnboundedMapCodec</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt; {};</div></div>
<div class="line" data-text="@JvmStaticfun dispatchedMap(arg0: Codec<K>, arg1: Function<K, Codec<? extends V>>): Codec<Map<K, V>> {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">dispatchedMap</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">K</span>&gt;, <span class="arg-name">arg1</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="ident">K</span>, <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="type-link" data-type="? extends V">? extends V</span>&gt;&gt;): <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="type-link" data-type="java.util.Map">Map</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;&gt; {};</div></div>
<div class="line" data-text="@JvmStaticfun stringResolver(arg0: Function<E, String>, arg1: Function<String, E>): Codec<E> {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">stringResolver</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="ident">E</span>, <span class="type-link" data-type="java.lang.String">String</span>&gt;, <span class="arg-name">arg1</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="type-link" data-type="java.lang.String">String</span>, <span class="ident">E</span>&gt;): <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">E</span>&gt; {};</div></div>
<div class="line" data-text="@JvmStaticfun optionalField(arg0: Boolean, arg1: Codec<F>, arg2: String): MapCodec<Optional<F>> {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">optionalField</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">F</span>&gt;, <span class="arg-name">arg2</span>: <span class="type-link" data-type="java.lang.String">String</span>): <span class="type-link" data-type="com.mojang.serialization.MapCodec">MapCodec</span>&lt;<span class="type-link" data-type="java.util.Optional">Optional</span>&lt;<span class="ident">F</span>&gt;&gt; {};</div></div>
<div class="line" data-text="@JvmStaticfun recursive(arg0: String, arg1: Function<Codec<A>, Codec<A>>): Codec<A> {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">recursive</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.String">String</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">A</span>&gt;, <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">A</span>&gt;&gt;): <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">A</span>&gt; {};</div></div>
<div class="line" data-text="@JvmStaticfun lazyInitialized(arg0: Supplier<Codec<A>>): Codec<A> {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">lazyInitialized</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.function.Supplier">Supplier</span>&lt;<span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">A</span>&gt;&gt;): <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="ident">A</span>&gt; {};</div></div>
<div class="line" data-text="@JvmStaticfun unit(arg0: A): MapDecoder<A> {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">unit</span>(<span class="arg-name">arg0</span>: <span class="ident">A</span>): <span class="type-link" data-type="com.mojang.serialization.MapDecoder">MapDecoder</span>&lt;<span class="ident">A</span>&gt; {};</div></div>
<div class="line" data-text="@JvmStaticfun unit(arg0: Supplier<A>): MapDecoder<A> {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">unit</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.function.Supplier">Supplier</span>&lt;<span class="ident">A</span>&gt;): <span class="type-link" data-type="com.mojang.serialization.MapDecoder">MapDecoder</span>&lt;<span class="ident">A</span>&gt; {};</div></div>
<div class="line" data-text="@JvmStaticfun checkRange(arg0: N, arg1: N): Function<N, DataResult<N>> {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">checkRange</span>(<span class="arg-name">arg0</span>: <span class="ident">N</span>, <span class="arg-name">arg1</span>: <span class="ident">N</span>): <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="ident">N</span>, <span class="type-link" data-type="com.mojang.serialization.DataResult">DataResult</span>&lt;<span class="ident">N</span>&gt;&gt; {};</div></div>
<div class="line" data-text="@JvmStaticfun intRange(arg0: Int, arg1: Int): Codec<Integer> {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">intRange</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="type-link" data-type="java.lang.Integer">Integer</span>&gt; {};</div></div>
<div class="line" data-text="@JvmStaticfun floatRange(arg0: Float, arg1: Float): Codec<Float> {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">floatRange</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Float">Float</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="kotlin.Float">Float</span>): <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="type-link" data-type="java.lang.Float">Float</span>&gt; {};</div></div>
<div class="line" data-text="@JvmStaticfun doubleRange(arg0: Double, arg1: Double): Codec<Double> {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">doubleRange</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Double">Double</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="kotlin.Double">Double</span>): <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="type-link" data-type="java.lang.Double">Double</span>&gt; {};</div></div>
<div class="line" data-text="@JvmStaticfun string(arg0: Int, arg1: Int): Codec<String> {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">string</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="type-link" data-type="java.lang.String">String</span>&gt; {};</div></div>
<div class="line" data-text="@JvmStaticfun sizeLimitedString(arg0: Int): Codec<String> {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">sizeLimitedString</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="com.mojang.serialization.Codec">Codec</span>&lt;<span class="type-link" data-type="java.lang.String">String</span>&gt; {};</div></div>
<div class="line" data-text="@JvmStaticfun empty(): MapEncoder<A> {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">empty</span>(): <span class="type-link" data-type="com.mojang.serialization.MapEncoder">MapEncoder</span>&lt;<span class="ident">A</span>&gt; {};</div></div>
<div class="line" data-text="@JvmStaticfun error(arg0: String): Decoder<A> {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">error</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.String">String</span>): <span class="type-link" data-type="com.mojang.serialization.Decoder">Decoder</span>&lt;<span class="ident">A</span>&gt; {};</div></div>
<div class="line" data-text="@JvmStaticfun ofTerminal(arg0: Decoder$Terminal<out A>): Decoder<A> {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">ofTerminal</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="com.mojang.serialization.Decoder$Terminal">Decoder$Terminal</span>&lt;<span class="kw">out</span> <span class="ident">A</span>&gt;): <span class="type-link" data-type="com.mojang.serialization.Decoder">Decoder</span>&lt;<span class="ident">A</span>&gt; {};</div></div>
<div class="line" data-text="@JvmStaticfun ofBoxed(arg0: Decoder$Boxed<out A>): Decoder<A> {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">ofBoxed</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="com.mojang.serialization.Decoder$Boxed">Decoder$Boxed</span>&lt;<span class="kw">out</span> <span class="ident">A</span>&gt;): <span class="type-link" data-type="com.mojang.serialization.Decoder">Decoder</span>&lt;<span class="ident">A</span>&gt; {};</div></div>
<div class="line" data-text="@JvmStaticfun ofSimple(arg0: Decoder$Simple<out A>): Decoder<A> {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">ofSimple</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="com.mojang.serialization.Decoder$Simple">Decoder$Simple</span>&lt;<span class="kw">out</span> <span class="ident">A</span>&gt;): <span class="type-link" data-type="com.mojang.serialization.Decoder">Decoder</span>&lt;<span class="ident">A</span>&gt; {};</div></div>
<div class="line" data-text="}" style="opacity: 0;"><div style="padding-left: 2em">}</div></div>
<div class="line" data-text="}" style="opacity: 0;"><div>}</div></div>
<div class="line" data-text="" style="opacity: 0;"></div></div></div>
			
	<div id="hover-preview" style="
	  position: fixed;
	  overflow: auto;
	  background: #2b2b2b;
	  color: #ddd;
	  border: 1px solid #444;
	  border-radius: 6px;
	  font-size: 13px;
	  padding: 8px;
	  display: none;
	  z-index: 50;
	  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.5);
	  pointer-events: auto;
	">
	  <div id="hover-content"></div>
	</div>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/constantsPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/consoleViewer.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/classPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/searchBarViewer.js"></script>
		  </body>
		  </html>
[Log] <!DOCTYPE html>
		  <html lang="en">
		  <head>
			<meta charset="UTF-8">
			<style>
			  
		#class-search-bar {
		display: flex;
		align-items: center;
		gap: 8px;
		padding: 8px 12px;
		background: #2b2b2b;
		border-bottom: 1px solid #444;
		z-index: 150;
		position: relative;
		}

		#class-search-results {
		position: absolute;
		top: 100%;
		left: 0;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: 100%;
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
		}

			  
	@keyframes pop {
	  0% { transform: scale(1); }
	  50% { transform: scale(1.04); }
	  100% { transform: scale(1.035); }
	}
			  
	body {
	  margin: 0;
	  font-family: Consolas, monospace;
	  background: #1e1e1e;
	  color: rgb(210, 222, 174);
	  padding: 16px;
	}
			  
	#main {
	  cursor: text;
	  flex-grow: 1;
	  height: 100vh;
	  overflow: visible;
	  padding: 16px;
	  box-sizing: border-box;
	}
  
	.kw {
	  color: rgba(76, 156, 222, 0.93);
	  font-weight: bold;
	}
  
	.annotation {
	  color: rgb(238, 223, 154);
	}
  
	.type-link {
	  color: rgba(108, 220, 175, 0.92);
	  cursor: default;
	  text-decoration: none;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link {
	  cursor: pointer;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link:hover {
	  color: rgba(158, 234, 203, 0.92);
	  text-decoration: underline;
	  display: inline-block;
	  animation: pop 0.17s ease-in-out forwards;
	}
  
	.ident {
	  color: #9cdcfe;
	}
  
	.method-name {
	  color: rgba(231, 229, 151, 0.92);
	}
  
	.arg-name {
	  color: rgba(104, 208, 237, 0.97);
	}
  
	.line {
	  opacity: 0;
	  transition: opacity 0.05s linear;
	}
			  
	.highlight-box {
	  position: absolute;
	  background-color: rgba(255, 160, 80, 0.35);
	  border-radius: 2px;
	}
  
	.highlight-box.current {
	  outline: 1px solid #3794ff;
	  background-color: rgba(55, 148, 255, 0.3);
	  box-shadow: 0 0 4px #3794ff99;
	  z-index: 60;
	}
  
	.debug-overlay-wrapper {
	  position: fixed;
	  pointer-events: none;
	  z-index: 10000;
	}
  
	.debug-overlay-wrapper > div {
	  position: absolute;
	  pointer-events: auto;
	  background: rgba(255, 0, 0, 0.2);
	}
  
	#search-bar button {
	  background-color: rgba(30, 30, 30, 0.27);
	  color: white;
	  border: 1px solid #555;
	  border-radius: 6px;
	  padding: 4px 8px;
	  cursor: pointer;
	  transition: all 0.2s ease-in-out;
	  font-size: 13px;
	  font-family: inherit;
	  user-select: none;
	}
  
	#search-bar button.active {
	  background-color: #094771;
	  border-color: #3794ff;
	  color: white;
	}
			</style>
		  </head>
		  <body>
		    
	<div id="class-search-bar" style="
	  display: flex;
	  align-items: center;
	  gap: 8px;
	  padding: 8px 12px;
	  background: #2b2b2b;
	  border-bottom: 1px solid #444;
	  z-index: 150;
	">
	  <input id="class-search-input" type="text" placeholder="Search classes..." style="
		flex-grow: 1;
		padding: 6px 10px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 6px;
		font-family: inherit;
	  ">
	  <div id="class-search-results" style="
		position: absolute;
		top: 42px;
		left: 12px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: calc(100% - 24px);
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
	  "></div>
	</div>
			
	<div id="search-bar" style="
	  display: none;
	  position: fixed;
	  top: 8px;
	  right: 8px;
	  z-index: 200;
	  background: #2c2c2c;
	  padding: 4px 8px;
	  border-radius: 4px;
	  display: flex;
	  gap: 4px;
	  align-items: center;
	">
	  <input type="text" id="search-input" placeholder="Search..." style="
		width: 180px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		padding: 4px;
	  " />
	  <button id="toggle-case" title="Match Case">Aa</button>
	  <button id="toggle-whole" title="Whole Word">â›¶</button>
	  <button id="toggle-regex" title="Regex">*</button>
	  <span id="search-count" style="
		color: white;
		min-width: 30px;
		text-align: center;
		font-size: 13px;
		font-family: Arial, sans-serif;
	  ">No Results</span>
	  <button id="search-prev" title="Previous Match">â†‘</button>
	  <button id="search-next" title="Next Match">â†“</button>
	  <button id="search-close" title="Close Search" style="margin-left: auto;">âœ–</button>
	</div>
			
  <div id="console-output" style="
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 160px;
    background: #111;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    overflow-y: auto;
    padding: 24px 10px 6px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
    <button id="console-minimize" style="
      position: absolute;
      top: 4px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 2px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">â€“</button>
    <div id="console-content"></div>
  </div>

  <div id="console-bar" style="
    display: none;
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 24px;
    background: #222;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
  	<span>Console</span>
    <button id="console-restore" style="
      position: absolute;
      top: 1px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 1px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">+</button>
  </div>
			<div id="main"><div class="line" data-text="package com.mojang.serialization" style="opacity: 0;"><div><span class="kw">package</span> <span class="type-link" data-package="com"><span class="ident">com</span></span><span>.</span><span class="type-link" data-package="com.mojang"><span class="ident">mojang</span></span><span>.</span><span class="type-link" data-package="com.mojang.serialization"><span class="ident">serialization</span></span></div><br></div>
<div class="line" data-text=" class Lifecycle {" style="opacity: 0;"><div id="current-class"> <span class="kw">class</span> <span class="ident">Lifecycle</span> {</div></div>
<div class="line" data-text="fun add(arg0: Lifecycle): Lifecycle {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">add</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="com.mojang.serialization.Lifecycle">Lifecycle</span>): <span class="type-link" data-type="com.mojang.serialization.Lifecycle">Lifecycle</span> {};</div></div>
<div class="line" data-text="companion object {" style="opacity: 0;"><br><div style="padding-left: 2em"><span class="kw">companion object</span> {</div></div>
<div class="line" data-text="@JvmStaticprivate final val STABLE: Lifecycle;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">STABLE</span>: <span class="type-link" data-type="com.mojang.serialization.Lifecycle">Lifecycle</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val EXPERIMENTAL: Lifecycle;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">EXPERIMENTAL</span>: <span class="type-link" data-type="com.mojang.serialization.Lifecycle">Lifecycle</span>;</div></div>
<div class="line" data-text="@JvmStaticfun experimental(): Lifecycle {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">experimental</span>(): <span class="type-link" data-type="com.mojang.serialization.Lifecycle">Lifecycle</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun stable(): Lifecycle {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">stable</span>(): <span class="type-link" data-type="com.mojang.serialization.Lifecycle">Lifecycle</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun deprecated(arg0: Int): Lifecycle {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">deprecated</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="com.mojang.serialization.Lifecycle">Lifecycle</span> {};</div></div>
<div class="line" data-text="}" style="opacity: 0;"><div style="padding-left: 2em">}</div></div>
<div class="line" data-text="}" style="opacity: 0;"><div>}</div></div>
<div class="line" data-text="" style="opacity: 0;"></div></div></div>
			
	<div id="hover-preview" style="
	  position: fixed;
	  overflow: auto;
	  background: #2b2b2b;
	  color: #ddd;
	  border: 1px solid #444;
	  border-radius: 6px;
	  font-size: 13px;
	  padding: 8px;
	  display: none;
	  z-index: 50;
	  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.5);
	  pointer-events: auto;
	">
	  <div id="hover-content"></div>
	</div>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/constantsPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/consoleViewer.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/classPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/searchBarViewer.js"></script>
		  </body>
		  </html>
[Log] document has not changed
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=15, character=37
[Log] [prepareContext] No navigation_expression iNode found.
[Log] [provideCompletionItems] Setup preparation failed, exiting.
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=15, character=36
[Log] [prepareContext] No navigation_expression iNode found.
[Log] [provideCompletionItems] Setup preparation failed, exiting.
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=20, character=16
[Log] [prepareContext] Successfully prepared context.
[Log] [prepareContext] Found iNode type: navigation_expression, [prepareContext] Found iNode text: bootstrap().g
[Log] [provideCompletionItems] iNode (navigation_expression) type: navigation_expression, [provideCompletionItems] iNode (navigation_expression) text: bootstrap().g
[Log] [provideCompletionItems] Scope exists for current position.
[Log] [resolveBaseType] Starting base type resolution...
[Log] [resolveBaseType] No lastChild found, using simple_identifier from current node
[Log] [resolveBaseType] Found scoped variable: bootstrap
[Log] [isMethodCall] navigation_expression contains call_expression: bootstrap()
[Log] [resolveBaseType] Final resolved baseType: net.liopyu.kotlinscript.FabricBootstrap
[Log] [resolveBaseType] isCallOffClass: true
[Log] [resolveBaseType] isStaticClassCall: false
[Log] [resolveTypingsFromSuffixes] BaseType at start: net.liopyu.kotlinscript.FabricBootstrap
[Log] [resolveTypingsFromSuffixes] isCallOffClass: true
[Log] [resolveTypingsFromSuffixes] Found suffix: g, isMethodCall: false
[Log] [resolveTypingsFromSuffixes] Found refined suffixes: [
  "g"
]
[Log] [resolveTypingsFromSuffixes] Static call context, checking baseType: net.liopyu.kotlinscript.FabricBootstrap
[Log] [resolveTypingsFromSuffixes] Found TypingsMember: net.liopyu.kotlinscript.FabricBootstrap
[Log] [resolveTypingsFromSuffixes] Final resolved currentType: net.liopyu.kotlinscript.FabricBootstrap
[Log] [provideCompletionItems] Variable is not Companion, forcing instance context.
[Log] [provideCompletionItems] Found TypingsMember: net.liopyu.kotlinscript.FabricBootstrap, preparing completions.
[Log] [buildCompletionItems] Building completions for: net.liopyu.kotlinscript.FabricBootstrap
[Log] [buildCompletionItems] isCallOffClass: false, isStaticClassCall: false
[Log] [buildCompletionItems] Built 28 completion items.
[Log] document has not changed
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=20, character=38
[Log] [prepareContext] No navigation_expression iNode found.
[Log] [provideCompletionItems] Setup preparation failed, exiting.
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=20, character=39
[Log] [prepareContext] Successfully prepared context.
[Log] [prepareContext] Found iNode type: navigation_expression, [prepareContext] Found iNode text: bootstrap().getCoreKotlinTypeMap().g
[Log] [provideCompletionItems] iNode (navigation_expression) type: navigation_expression, [provideCompletionItems] iNode (navigation_expression) text: bootstrap().getCoreKotlinTypeMap().g
[Log] [provideCompletionItems] Scope exists for current position.
[Log] [resolveBaseType] Starting base type resolution...
[Log] [resolveBaseType] Found firstChild navigation_expression
[Log] [resolveBaseType] Found scoped variable: bootstrap
[Log] [resolveBaseType] Final resolved baseType: net.liopyu.kotlinscript.FabricBootstrap
[Log] [resolveBaseType] isCallOffClass: false
[Log] [resolveBaseType] isStaticClassCall: false
[Log] [resolveTypingsFromSuffixes] BaseType at start: net.liopyu.kotlinscript.FabricBootstrap
[Log] [resolveTypingsFromSuffixes] isCallOffClass: false
[Log] [isMethodCall] navigation_suffix leads into call_expression: .getCoreKotlinTypeMap
[Log] [resolveTypingsFromSuffixes] Found suffix: getCoreKotlinTypeMap, isMethodCall: true
[Log] [resolveTypingsFromSuffixes] Found suffix: g, isMethodCall: false
[Log] [resolveTypingsFromSuffixes] Found refined suffixes: [
  "getCoreKotlinTypeMap()",
  "g"
]
[Log] [resolveTypingsFromSuffixes] Resolving instance chain from baseType: net.liopyu.kotlinscript.FabricBootstrap
[Log] [resolveTypingsFromSuffixes] Processing suffix: getCoreKotlinTypeMap()
[Log] [resolveTypingsFromSuffixes] Matched method 'getCoreKotlinTypeMap()' -> returns java.util.Map<java.lang.String, java.lang.String>
[Log] [resolveTypingsFromSuffixes] Stopped - no TypingsMember found for: java.util.Map<java.lang.String, java.lang.String>
[Log] [resolveTypingsFromSuffixes] Final resolved currentType: java.util.Map<java.lang.String, java.lang.String>
[Log] [provideCompletionItems] No TypingsMember found for classPath: java.util.Map<java.lang.String, java.lang.String>
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=20, character=39
[Log] [prepareContext] Successfully prepared context.
[Log] [prepareContext] Found iNode type: navigation_expression, [prepareContext] Found iNode text: bootstrap().getCoreKotlinTypeMap().a
[Log] [provideCompletionItems] iNode (navigation_expression) type: navigation_expression, [provideCompletionItems] iNode (navigation_expression) text: bootstrap().getCoreKotlinTypeMap().a
[Log] [provideCompletionItems] Scope exists for current position.
[Log] [resolveBaseType] Starting base type resolution...
[Log] [resolveBaseType] Found firstChild navigation_expression
[Log] [resolveBaseType] Found scoped variable: bootstrap
[Log] [resolveBaseType] Final resolved baseType: net.liopyu.kotlinscript.FabricBootstrap
[Log] [resolveBaseType] isCallOffClass: false
[Log] [resolveBaseType] isStaticClassCall: false
[Log] [resolveTypingsFromSuffixes] BaseType at start: net.liopyu.kotlinscript.FabricBootstrap
[Log] [resolveTypingsFromSuffixes] isCallOffClass: false
[Log] [isMethodCall] navigation_suffix leads into call_expression: .getCoreKotlinTypeMap
[Log] [resolveTypingsFromSuffixes] Found suffix: getCoreKotlinTypeMap, isMethodCall: true
[Log] [resolveTypingsFromSuffixes] Found suffix: a, isMethodCall: false
[Log] [resolveTypingsFromSuffixes] Found refined suffixes: [
  "getCoreKotlinTypeMap()",
  "a"
]
[Log] [resolveTypingsFromSuffixes] Resolving instance chain from baseType: net.liopyu.kotlinscript.FabricBootstrap
[Log] [resolveTypingsFromSuffixes] Processing suffix: getCoreKotlinTypeMap()
[Log] [resolveTypingsFromSuffixes] Matched method 'getCoreKotlinTypeMap()' -> returns java.util.Map<java.lang.String, java.lang.String>
[Log] [resolveTypingsFromSuffixes] Stopped - no TypingsMember found for: java.util.Map<java.lang.String, java.lang.String>
[Log] [resolveTypingsFromSuffixes] Final resolved currentType: java.util.Map<java.lang.String, java.lang.String>
[Log] [provideCompletionItems] No TypingsMember found for classPath: java.util.Map<java.lang.String, java.lang.String>
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=24, character=0
[Log] [prepareContext] No navigation_expression iNode found.
[Log] [provideCompletionItems] Setup preparation failed, exiting.
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=24, character=4
[Log] [prepareContext] No navigation_expression iNode found.
[Log] [provideCompletionItems] Setup preparation failed, exiting.
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=24, character=0
[Log] [prepareContext] No navigation_expression iNode found.
[Log] [provideCompletionItems] Setup preparation failed, exiting.
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=24, character=0
[Log] [prepareContext] No navigation_expression iNode found.
[Log] [provideCompletionItems] Setup preparation failed, exiting.
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=24, character=0
[Log] [prepareContext] No navigation_expression iNode found.
[Log] [provideCompletionItems] Setup preparation failed, exiting.
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=24, character=0
[Log] [prepareContext] No navigation_expression iNode found.
[Log] [provideCompletionItems] Setup preparation failed, exiting.
[Log] updating tokens
[Log] document has not changed
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=25, character=4
[Log] [prepareContext] Successfully prepared context.
[Log] [prepareContext] Found iNode type: navigation_expression, [prepareContext] Found iNode text: Lazy.
class
[Log] [provideCompletionItems] iNode (navigation_expression) type: navigation_expression, [provideCompletionItems] iNode (navigation_expression) text: Lazy.
class
[Log] [provideCompletionItems] No scope found for current position.
[Log] [resolveBaseType] Starting base type resolution...
[Log] [resolveBaseType] No lastChild found, using simple_identifier from current node
[Log] [resolveBaseType] No scoped variable found, falling back to resolveBaseTypeFromImports
[Log] [resolveBaseTypeFromImports] Starting import-based resolution...
[Log] [resolveBaseTypeFromImports] Checking 1 potential imports...
[Log] [resolveBaseTypeFromImports] Resolved from import: Lazy
[Log] [resolveBaseType] Call is directly off class, setting isStaticClassCall = true
[Log] [resolveBaseType] Final resolved baseType: org.apache.logging.log4j.util.Lazy
[Log] [resolveBaseType] isCallOffClass: true
[Log] [resolveBaseType] isStaticClassCall: true
[Log] [resolveTypingsFromSuffixes] BaseType at start: org.apache.logging.log4j.util.Lazy
[Log] [resolveTypingsFromSuffixes] isCallOffClass: true
[Log] [resolveTypingsFromSuffixes] Found refined suffixes: []
[Log] [resolveTypingsFromSuffixes] Static call context, checking baseType: org.apache.logging.log4j.util.Lazy
[Log] [resolveTypingsFromSuffixes] Found TypingsMember: org.apache.logging.log4j.util.Lazy
[Log] [resolveTypingsFromSuffixes] Final resolved currentType: org.apache.logging.log4j.util.Lazy
[Log] [provideCompletionItems] Variable is not Companion, forcing instance context.
[Log] [provideCompletionItems] Found TypingsMember: org.apache.logging.log4j.util.Lazy, preparing completions.
[Log] [buildCompletionItems] Building completions for: org.apache.logging.log4j.util.Lazy
[Log] [buildCompletionItems] isCallOffClass: false, isStaticClassCall: false
[Log] [buildCompletionItems] Built 5 completion items.
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=25, character=20
[Log] [prepareContext] Successfully prepared context.
[Log] [prepareContext] Found iNode type: navigation_expression, [prepareContext] Found iNode text: Lazy.isInitialized().
class
[Log] [provideCompletionItems] iNode (navigation_expression) type: navigation_expression, [provideCompletionItems] iNode (navigation_expression) text: Lazy.isInitialized().
class
[Log] [provideCompletionItems] No scope found for current position.
[Log] [resolveBaseType] Starting base type resolution...
[Log] [resolveBaseType] Found firstChild navigation_expression
[Log] [resolveBaseType] No scoped variable found, falling back to resolveBaseTypeFromImports
[Log] [resolveBaseTypeFromImports] Starting import-based resolution...
[Log] [resolveBaseTypeFromImports] Checking 2 potential imports...
[Log] [resolveBaseTypeFromImports] Resolved from import: Lazy
[Log] [resolveBaseType] Final resolved baseType: org.apache.logging.log4j.util.Lazy
[Log] [resolveBaseType] isCallOffClass: false
[Log] [resolveBaseType] isStaticClassCall: true
[Log] [resolveTypingsFromSuffixes] BaseType at start: org.apache.logging.log4j.util.Lazy
[Log] [resolveTypingsFromSuffixes] isCallOffClass: false
[Log] [isMethodCall] navigation_suffix leads into call_expression: .isInitialized
[Log] [resolveTypingsFromSuffixes] Found suffix: isInitialized, isMethodCall: true
[Log] [resolveTypingsFromSuffixes] Found refined suffixes: [
  "isInitialized()"
]
[Log] [resolveTypingsFromSuffixes] Resolving instance chain from baseType: org.apache.logging.log4j.util.Lazy
[Log] [resolveTypingsFromSuffixes] Processing suffix: isInitialized()
[Log] [resolveTypingsFromSuffixes] Matched method 'isInitialized()' -> returns kotlin.Boolean
[Log] [resolveTypingsFromSuffixes] Final resolved currentType: kotlin.Boolean
[Log] [provideCompletionItems] Variable is not Companion, forcing instance context.
[Log] [provideCompletionItems] Found TypingsMember: kotlin.Boolean, preparing completions.
[Log] [buildCompletionItems] Building completions for: kotlin.Boolean
[Log] [buildCompletionItems] isCallOffClass: false, isStaticClassCall: false
[Log] [buildCompletionItems] Built 8 completion items.
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=25, character=32
[Log] [prepareContext] Successfully prepared context.
[Log] [prepareContext] Found iNode type: navigation_expression, [prepareContext] Found iNode text: Lazy.isInitialized().compareTo().
class
[Log] [provideCompletionItems] iNode (navigation_expression) type: navigation_expression, [provideCompletionItems] iNode (navigation_expression) text: Lazy.isInitialized().compareTo().
class
[Log] [provideCompletionItems] No scope found for current position.
[Log] [resolveBaseType] Starting base type resolution...
[Log] [resolveBaseType] Found firstChild navigation_expression
[Log] [resolveBaseType] No scoped variable found, falling back to resolveBaseTypeFromImports
[Log] [resolveBaseTypeFromImports] Starting import-based resolution...
[Log] [resolveBaseTypeFromImports] Checking 3 potential imports...
[Log] [isMethodCall] navigation_expression contains call_expression: Lazy.isInitialized()
[Log] [resolveBaseTypeFromImports] Resolved from import: Lazy
[Log] [resolveBaseType] Final resolved baseType: org.apache.logging.log4j.util.Lazy
[Log] [resolveBaseType] isCallOffClass: false
[Log] [resolveBaseType] isStaticClassCall: false
[Log] [resolveTypingsFromSuffixes] BaseType at start: org.apache.logging.log4j.util.Lazy
[Log] [resolveTypingsFromSuffixes] isCallOffClass: false
[Log] [isMethodCall] navigation_suffix leads into call_expression: .isInitialized
[Log] [resolveTypingsFromSuffixes] Found suffix: isInitialized, isMethodCall: true
[Log] [isMethodCall] navigation_suffix leads into call_expression: .compareTo
[Log] [resolveTypingsFromSuffixes] Found suffix: compareTo, isMethodCall: true
[Log] [resolveTypingsFromSuffixes] Found refined suffixes: [
  "isInitialized()",
  "compareTo()"
]
[Log] [resolveTypingsFromSuffixes] Resolving instance chain from baseType: org.apache.logging.log4j.util.Lazy
[Log] [resolveTypingsFromSuffixes] Processing suffix: isInitialized()
[Log] [resolveTypingsFromSuffixes] Matched method 'isInitialized()' -> returns kotlin.Boolean
[Log] [resolveTypingsFromSuffixes] Processing suffix: compareTo()
[Log] [resolveTypingsFromSuffixes] Method not found: compareTo() in kotlin.Boolean
[Log] [resolveTypingsFromSuffixes] Final resolved currentType: kotlin.Boolean
[Log] [provideCompletionItems] Variable is not Companion, forcing instance context.
[Log] [provideCompletionItems] Found TypingsMember: kotlin.Boolean, preparing completions.
[Log] [buildCompletionItems] Building completions for: kotlin.Boolean
[Log] [buildCompletionItems] isCallOffClass: false, isStaticClassCall: false
[Log] [buildCompletionItems] Built 8 completion items.
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=25, character=43
[Log] [prepareContext] Successfully prepared context.
[Log] [prepareContext] Found iNode type: navigation_expression, [prepareContext] Found iNode text: Lazy.isInitialized().compareTo().toString().
class
[Log] [provideCompletionItems] iNode (navigation_expression) type: navigation_expression, [provideCompletionItems] iNode (navigation_expression) text: Lazy.isInitialized().compareTo().toString().
class
[Log] [provideCompletionItems] No scope found for current position.
[Log] [resolveBaseType] Starting base type resolution...
[Log] [resolveBaseType] Found firstChild navigation_expression
[Log] [resolveBaseType] No scoped variable found, falling back to resolveBaseTypeFromImports
[Log] [resolveBaseTypeFromImports] Starting import-based resolution...
[Log] [resolveBaseTypeFromImports] Checking 4 potential imports...
[Log] [isMethodCall] navigation_expression contains call_expression: Lazy.isInitialized().compareTo()
[Log] [resolveBaseTypeFromImports] Resolved from import: Lazy
[Log] [resolveBaseType] Final resolved baseType: org.apache.logging.log4j.util.Lazy
[Log] [resolveBaseType] isCallOffClass: false
[Log] [resolveBaseType] isStaticClassCall: false
[Log] [resolveTypingsFromSuffixes] BaseType at start: org.apache.logging.log4j.util.Lazy
[Log] [resolveTypingsFromSuffixes] isCallOffClass: false
[Log] [isMethodCall] navigation_suffix leads into call_expression: .isInitialized
[Log] [resolveTypingsFromSuffixes] Found suffix: isInitialized, isMethodCall: true
[Log] [isMethodCall] navigation_suffix leads into call_expression: .compareTo
[Log] [resolveTypingsFromSuffixes] Found suffix: compareTo, isMethodCall: true
[Log] [isMethodCall] navigation_suffix leads into call_expression: .toString
[Log] [resolveTypingsFromSuffixes] Found suffix: toString, isMethodCall: true
[Log] [resolveTypingsFromSuffixes] Found refined suffixes: [
  "isInitialized()",
  "compareTo()",
  "toString()"
]
[Log] [resolveTypingsFromSuffixes] Resolving instance chain from baseType: org.apache.logging.log4j.util.Lazy
[Log] [resolveTypingsFromSuffixes] Processing suffix: isInitialized()
[Log] [resolveTypingsFromSuffixes] Matched method 'isInitialized()' -> returns kotlin.Boolean
[Log] [resolveTypingsFromSuffixes] Processing suffix: compareTo()
[Log] [resolveTypingsFromSuffixes] Method not found: compareTo() in kotlin.Boolean
[Log] [resolveTypingsFromSuffixes] Final resolved currentType: kotlin.Boolean
[Log] [provideCompletionItems] Variable is not Companion, forcing instance context.
[Log] [provideCompletionItems] Found TypingsMember: kotlin.Boolean, preparing completions.
[Log] [buildCompletionItems] Building completions for: kotlin.Boolean
[Log] [buildCompletionItems] isCallOffClass: false, isStaticClassCall: false
[Log] [buildCompletionItems] Built 8 completion items.
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=25, character=40
[Log] [prepareContext] Successfully prepared context.
[Log] [prepareContext] Found iNode type: navigation_expression, [prepareContext] Found iNode text: Lazy.isInitialized().compareTo().toString
[Log] [provideCompletionItems] iNode (navigation_expression) type: navigation_expression, [provideCompletionItems] iNode (navigation_expression) text: Lazy.isInitialized().compareTo().toString
[Log] [provideCompletionItems] No scope found for current position.
[Log] [resolveBaseType] Starting base type resolution...
[Log] [resolveBaseType] Found firstChild navigation_expression
[Log] [resolveBaseType] No scoped variable found, falling back to resolveBaseTypeFromImports
[Log] [resolveBaseTypeFromImports] Starting import-based resolution...
[Log] [resolveBaseTypeFromImports] Checking 3 potential imports...
[Log] [isMethodCall] navigation_expression contains call_expression: Lazy.isInitialized()
[Log] [resolveBaseTypeFromImports] Resolved from import: Lazy
[Log] [resolveBaseType] Final resolved baseType: org.apache.logging.log4j.util.Lazy
[Log] [resolveBaseType] isCallOffClass: false
[Log] [resolveBaseType] isStaticClassCall: false
[Log] [resolveTypingsFromSuffixes] BaseType at start: org.apache.logging.log4j.util.Lazy
[Log] [resolveTypingsFromSuffixes] isCallOffClass: false
[Log] [isMethodCall] navigation_suffix leads into call_expression: .isInitialized
[Log] [resolveTypingsFromSuffixes] Found suffix: isInitialized, isMethodCall: true
[Log] [isMethodCall] navigation_suffix leads into call_expression: .compareTo
[Log] [resolveTypingsFromSuffixes] Found suffix: compareTo, isMethodCall: true
[Log] [resolveTypingsFromSuffixes] Found suffix: toString, isMethodCall: false
[Log] [resolveTypingsFromSuffixes] Found refined suffixes: [
  "isInitialized()",
  "compareTo()",
  "toString"
]
[Log] [resolveTypingsFromSuffixes] Resolving instance chain from baseType: org.apache.logging.log4j.util.Lazy
[Log] [resolveTypingsFromSuffixes] Processing suffix: isInitialized()
[Log] [resolveTypingsFromSuffixes] Matched method 'isInitialized()' -> returns kotlin.Boolean
[Log] [resolveTypingsFromSuffixes] Processing suffix: compareTo()
[Log] [resolveTypingsFromSuffixes] Method not found: compareTo() in kotlin.Boolean
[Log] [resolveTypingsFromSuffixes] Final resolved currentType: kotlin.Boolean
[Log] [provideCompletionItems] Variable is not Companion, forcing instance context.
[Log] [provideCompletionItems] Found TypingsMember: kotlin.Boolean, preparing completions.
[Log] [buildCompletionItems] Building completions for: kotlin.Boolean
[Log] [buildCompletionItems] isCallOffClass: false, isStaticClassCall: false
[Log] [buildCompletionItems] Built 8 completion items.
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=23, character=5
[Log] [prepareContext] No navigation_expression iNode found.
[Log] [provideCompletionItems] Setup preparation failed, exiting.
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=23, character=5
[Log] [prepareContext] No navigation_expression iNode found.
[Log] [provideCompletionItems] Setup preparation failed, exiting.
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=23, character=5
[Log] [prepareContext] No navigation_expression iNode found.
[Log] [provideCompletionItems] Setup preparation failed, exiting.
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=64, character=4
[Log] [prepareContext] No navigation_expression iNode found.
[Log] [provideCompletionItems] Setup preparation failed, exiting.
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=64, character=0
[Log] [prepareContext] No navigation_expression iNode found.
[Log] [provideCompletionItems] Setup preparation failed, exiting.
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=64, character=6
[Log] [prepareContext] No navigation_expression iNode found.
[Log] [provideCompletionItems] Setup preparation failed, exiting.
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=64, character=8
[Log] [prepareContext] No navigation_expression iNode found.
[Log] [provideCompletionItems] Setup preparation failed, exiting.
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=64, character=9
[Log] [prepareContext] No navigation_expression iNode found.
[Log] [provideCompletionItems] Setup preparation failed, exiting.
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=64, character=13
[Log] [prepareContext] No navigation_expression iNode found.
[Log] [provideCompletionItems] Setup preparation failed, exiting.
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=64, character=24
[Log] [prepareContext] No navigation_expression iNode found.
[Log] [provideCompletionItems] Setup preparation failed, exiting.
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=65, character=4
[Log] [prepareContext] No navigation_expression iNode found.
[Log] [provideCompletionItems] Setup preparation failed, exiting.
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=66, character=8
[Log] [prepareContext] No navigation_expression iNode found.
[Log] [provideCompletionItems] Setup preparation failed, exiting.
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=66, character=10
[Log] [prepareContext] No navigation_expression iNode found.
[Log] [provideCompletionItems] Setup preparation failed, exiting.
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=66, character=12
[Log] [prepareContext] No navigation_expression iNode found.
[Log] [provideCompletionItems] Setup preparation failed, exiting.
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=66, character=14
[Log] [prepareContext] No navigation_expression iNode found.
[Log] [provideCompletionItems] Setup preparation failed, exiting.
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=66, character=19
[Log] [prepareContext] No navigation_expression iNode found.
[Log] [provideCompletionItems] Setup preparation failed, exiting.
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=66, character=23
[Log] [prepareContext] No navigation_expression iNode found.
[Log] [provideCompletionItems] Setup preparation failed, exiting.
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=67, character=8
[Log] [prepareContext] No navigation_expression iNode found.
[Log] [provideCompletionItems] Setup preparation failed, exiting.
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=67, character=12
[Log] [prepareContext] No navigation_expression iNode found.
[Log] [provideCompletionItems] Setup preparation failed, exiting.
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=67, character=14
[Log] [prepareContext] No navigation_expression iNode found.
[Log] [provideCompletionItems] Setup preparation failed, exiting.
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=67, character=16
[Log] [prepareContext] No navigation_expression iNode found.
[Log] [provideCompletionItems] Setup preparation failed, exiting.
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=67, character=17
[Log] [prepareContext] No navigation_expression iNode found.
[Log] [provideCompletionItems] Setup preparation failed, exiting.
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=68, character=12
[Log] [prepareContext] No navigation_expression iNode found.
[Log] [provideCompletionItems] Setup preparation failed, exiting.
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=68, character=12
[Log] [prepareContext] No navigation_expression iNode found.
[Log] [provideCompletionItems] Setup preparation failed, exiting.
(x2) [Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=73, character=0
[Log] [prepareContext] No navigation_expression iNode found.
[Log] [provideCompletionItems] Setup preparation failed, exiting.
(x2) [Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=54, character=35
[Log] [prepareContext] No navigation_expression iNode found.
[Log] [provideCompletionItems] Setup preparation failed, exiting.
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=0, character=0
[Log] [prepareContext] No navigation_expression iNode found.
[Log] [provideCompletionItems] Setup preparation failed, exiting.
(x2) [Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=0, character=7
[Log] [prepareContext] No navigation_expression iNode found.
[Log] [provideCompletionItems] Setup preparation failed, exiting.
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=0, character=8
[Log] [prepareContext] No navigation_expression iNode found.
[Log] [provideCompletionItems] Setup preparation failed, exiting.
[Log] updating tokens
[Log] document has not changed
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=1, character=9
[Log] [prepareContext] No navigation_expression iNode found.
[Log] [provideCompletionItems] Setup preparation failed, exiting.
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=1, character=10
[Log] [prepareContext] Successfully prepared context.
[Log] [prepareContext] Found iNode type: navigation_expression, [prepareContext] Found iNode text: Minecraft.g
[Log] [provideCompletionItems] iNode (navigation_expression) type: navigation_expression, [provideCompletionItems] iNode (navigation_expression) text: Minecraft.g
[Log] [provideCompletionItems] No scope found for current position.
[Log] [resolveBaseType] Starting base type resolution...
[Log] [resolveBaseType] No lastChild found, using simple_identifier from current node
[Log] [resolveBaseType] No scoped variable found, falling back to resolveBaseTypeFromImports
[Log] [resolveBaseTypeFromImports] Starting import-based resolution...
[Log] [resolveBaseTypeFromImports] Checking 1 potential imports...
[Log] [resolveBaseTypeFromImports] Resolved from import: Minecraft
[Log] [resolveBaseType] Call is directly off class, setting isStaticClassCall = true
[Log] [resolveBaseType] Final resolved baseType: net.minecraft.client.Minecraft
[Log] [resolveBaseType] isCallOffClass: true
[Log] [resolveBaseType] isStaticClassCall: true
[Log] [resolveTypingsFromSuffixes] BaseType at start: net.minecraft.client.Minecraft
[Log] [resolveTypingsFromSuffixes] isCallOffClass: true
[Log] [resolveTypingsFromSuffixes] Found suffix: g, isMethodCall: false
[Log] [resolveTypingsFromSuffixes] Found refined suffixes: [
  "g"
]
[Log] [resolveTypingsFromSuffixes] Static call context, checking baseType: net.minecraft.client.Minecraft
[Log] [resolveTypingsFromSuffixes] Found TypingsMember: net.minecraft.client.Minecraft
[Log] [resolveTypingsFromSuffixes] Final resolved currentType: net.minecraft.client.Minecraft
[Log] [provideCompletionItems] Variable is not Companion, forcing instance context.
[Log] [provideCompletionItems] Found TypingsMember: net.minecraft.client.Minecraft, preparing completions.
[Log] [buildCompletionItems] Building completions for: net.minecraft.client.Minecraft
[Log] [buildCompletionItems] isCallOffClass: false, isStaticClassCall: false
[Log] [buildCompletionItems] Built 328 completion items.
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=1, character=19
[Log] [prepareContext] Successfully prepared context.
[Log] [prepareContext] Found iNode type: navigation_expression, [prepareContext] Found iNode text: Minecraft.getInstanc
[Log] [provideCompletionItems] iNode (navigation_expression) type: navigation_expression, [provideCompletionItems] iNode (navigation_expression) text: Minecraft.getInstanc
[Log] [provideCompletionItems] No scope found for current position.
[Log] [resolveBaseType] Starting base type resolution...
[Log] [resolveBaseType] No lastChild found, using simple_identifier from current node
[Log] [resolveBaseType] No scoped variable found, falling back to resolveBaseTypeFromImports
[Log] [resolveBaseTypeFromImports] Starting import-based resolution...
[Log] [resolveBaseTypeFromImports] Checking 1 potential imports...
[Log] [resolveBaseTypeFromImports] Resolved from import: Minecraft
[Log] [resolveBaseType] Call is directly off class, setting isStaticClassCall = true
[Log] [resolveBaseType] Final resolved baseType: net.minecraft.client.Minecraft
[Log] [resolveBaseType] isCallOffClass: true
[Log] [resolveBaseType] isStaticClassCall: true
[Log] [resolveTypingsFromSuffixes] BaseType at start: net.minecraft.client.Minecraft
[Log] [resolveTypingsFromSuffixes] isCallOffClass: true
[Log] [resolveTypingsFromSuffixes] Found suffix: getInstanc, isMethodCall: false
[Log] [resolveTypingsFromSuffixes] Found refined suffixes: [
  "getInstanc"
]
[Log] [resolveTypingsFromSuffixes] Static call context, checking baseType: net.minecraft.client.Minecraft
[Log] [resolveTypingsFromSuffixes] Found TypingsMember: net.minecraft.client.Minecraft
[Log] [resolveTypingsFromSuffixes] Final resolved currentType: net.minecraft.client.Minecraft
[Log] [provideCompletionItems] Variable is not Companion, forcing instance context.
[Log] [provideCompletionItems] Found TypingsMember: net.minecraft.client.Minecraft, preparing completions.
[Log] [buildCompletionItems] Building completions for: net.minecraft.client.Minecraft
[Log] [buildCompletionItems] isCallOffClass: false, isStaticClassCall: false
[Log] [buildCompletionItems] Built 328 completion items.
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=1, character=20
[Log] [prepareContext] Successfully prepared context.
[Log] [prepareContext] Found iNode type: navigation_expression, [prepareContext] Found iNode text: Minecraft.getInstance
[Log] [provideCompletionItems] iNode (navigation_expression) type: navigation_expression, [provideCompletionItems] iNode (navigation_expression) text: Minecraft.getInstance
[Log] [provideCompletionItems] No scope found for current position.
[Log] [resolveBaseType] Starting base type resolution...
[Log] [resolveBaseType] No lastChild found, using simple_identifier from current node
[Log] [resolveBaseType] No scoped variable found, falling back to resolveBaseTypeFromImports
[Log] [resolveBaseTypeFromImports] Starting import-based resolution...
[Log] [resolveBaseTypeFromImports] Checking 1 potential imports...
[Log] [resolveBaseTypeFromImports] Resolved from import: Minecraft
[Log] [resolveBaseType] Call is directly off class, setting isStaticClassCall = true
[Log] [resolveBaseType] Final resolved baseType: net.minecraft.client.Minecraft
[Log] [resolveBaseType] isCallOffClass: true
[Log] [resolveBaseType] isStaticClassCall: true
[Log] [resolveTypingsFromSuffixes] BaseType at start: net.minecraft.client.Minecraft
[Log] [resolveTypingsFromSuffixes] isCallOffClass: true
[Log] [resolveTypingsFromSuffixes] Found suffix: getInstance, isMethodCall: false
[Log] [resolveTypingsFromSuffixes] Found refined suffixes: [
  "getInstance"
]
[Log] [resolveTypingsFromSuffixes] Static call context, checking baseType: net.minecraft.client.Minecraft
[Log] [resolveTypingsFromSuffixes] Found TypingsMember: net.minecraft.client.Minecraft
[Log] [resolveTypingsFromSuffixes] Final resolved currentType: net.minecraft.client.Minecraft
[Log] [provideCompletionItems] Variable is not Companion, forcing instance context.
[Log] [provideCompletionItems] Found TypingsMember: net.minecraft.client.Minecraft, preparing completions.
[Log] [buildCompletionItems] Building completions for: net.minecraft.client.Minecraft
[Log] [buildCompletionItems] isCallOffClass: false, isStaticClassCall: false
[Log] [buildCompletionItems] Built 328 completion items.
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=1, character=23
[Log] [prepareContext] No navigation_expression iNode found.
[Log] [provideCompletionItems] Setup preparation failed, exiting.
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=1, character=24
[Log] [prepareContext] Successfully prepared context.
[Log] [prepareContext] Found iNode type: navigation_expression, [prepareContext] Found iNode text: Minecraft.getInstance().g
[Log] [provideCompletionItems] iNode (navigation_expression) type: navigation_expression, [provideCompletionItems] iNode (navigation_expression) text: Minecraft.getInstance().g
[Log] [provideCompletionItems] No scope found for current position.
[Log] [resolveBaseType] Starting base type resolution...
[Log] [resolveBaseType] Found firstChild navigation_expression
[Log] [resolveBaseType] No scoped variable found, falling back to resolveBaseTypeFromImports
[Log] [resolveBaseTypeFromImports] Starting import-based resolution...
[Log] [resolveBaseTypeFromImports] Checking 2 potential imports...
[Log] [resolveBaseTypeFromImports] Resolved from import: Minecraft
[Log] [resolveBaseType] Final resolved baseType: net.minecraft.client.Minecraft
[Log] [resolveBaseType] isCallOffClass: false
[Log] [resolveBaseType] isStaticClassCall: true
[Log] [resolveTypingsFromSuffixes] BaseType at start: net.minecraft.client.Minecraft
[Log] [resolveTypingsFromSuffixes] isCallOffClass: false
[Log] [isMethodCall] navigation_suffix leads into call_expression: .getInstance
[Log] [resolveTypingsFromSuffixes] Found suffix: getInstance, isMethodCall: true
[Log] [resolveTypingsFromSuffixes] Found suffix: g, isMethodCall: false
[Log] [resolveTypingsFromSuffixes] Found refined suffixes: [
  "getInstance()",
  "g"
]
[Log] [resolveTypingsFromSuffixes] Resolving instance chain from baseType: net.minecraft.client.Minecraft
[Log] [resolveTypingsFromSuffixes] Processing suffix: getInstance()
[Log] [resolveTypingsFromSuffixes] Matched method 'getInstance()' -> returns net.minecraft.client.Minecraft
[Log] [resolveTypingsFromSuffixes] Processing suffix: g
[Log] [resolveTypingsFromSuffixes] Field not found: g in net.minecraft.client.Minecraft
[Log] [resolveTypingsFromSuffixes] Final resolved currentType: net.minecraft.client.Minecraft
[Log] [provideCompletionItems] Variable is not Companion, forcing instance context.
[Log] [provideCompletionItems] Found TypingsMember: net.minecraft.client.Minecraft, preparing completions.
[Log] [buildCompletionItems] Building completions for: net.minecraft.client.Minecraft
[Log] [buildCompletionItems] isCallOffClass: false, isStaticClassCall: false
[Log] [buildCompletionItems] Built 328 completion items.
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=1, character=36
[Log] [prepareContext] No navigation_expression iNode found.
[Log] [provideCompletionItems] Setup preparation failed, exiting.
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=1, character=37
[Log] [prepareContext] Successfully prepared context.
[Log] [prepareContext] Found iNode type: navigation_expression, [prepareContext] Found iNode text: Minecraft.getInstance().gameRenderer.s
[Log] [provideCompletionItems] iNode (navigation_expression) type: navigation_expression, [provideCompletionItems] iNode (navigation_expression) text: Minecraft.getInstance().gameRenderer.s
[Log] [provideCompletionItems] No scope found for current position.
[Log] [resolveBaseType] Starting base type resolution...
[Log] [resolveBaseType] Found firstChild navigation_expression
[Log] [resolveBaseType] No scoped variable found, falling back to resolveBaseTypeFromImports
[Log] [resolveBaseTypeFromImports] Starting import-based resolution...
[Log] [resolveBaseTypeFromImports] Checking 3 potential imports...
[Log] [isMethodCall] navigation_expression contains call_expression: Minecraft.getInstance()
[Log] [resolveBaseTypeFromImports] Resolved from import: Minecraft
[Log] [resolveBaseType] Final resolved baseType: net.minecraft.client.Minecraft
[Log] [resolveBaseType] isCallOffClass: false
[Log] [resolveBaseType] isStaticClassCall: false
[Log] [resolveTypingsFromSuffixes] BaseType at start: net.minecraft.client.Minecraft
[Log] [resolveTypingsFromSuffixes] isCallOffClass: false
[Log] [isMethodCall] navigation_suffix leads into call_expression: .getInstance
[Log] [resolveTypingsFromSuffixes] Found suffix: getInstance, isMethodCall: true
[Log] [resolveTypingsFromSuffixes] Found suffix: gameRenderer, isMethodCall: false
[Log] [resolveTypingsFromSuffixes] Found suffix: s, isMethodCall: false
[Log] [resolveTypingsFromSuffixes] Found refined suffixes: [
  "getInstance()",
  "gameRenderer",
  "s"
]
[Log] [resolveTypingsFromSuffixes] Resolving instance chain from baseType: net.minecraft.client.Minecraft
[Log] [resolveTypingsFromSuffixes] Processing suffix: getInstance()
[Log] [resolveTypingsFromSuffixes] Matched method 'getInstance()' -> returns net.minecraft.client.Minecraft
[Log] [resolveTypingsFromSuffixes] Processing suffix: gameRenderer
[Log] [resolveTypingsFromSuffixes] Matched field 'gameRenderer' -> returns net.minecraft.client.renderer.GameRenderer
[Log] [resolveTypingsFromSuffixes] Processing suffix: s
[Log] [resolveTypingsFromSuffixes] Field not found: s in net.minecraft.client.renderer.GameRenderer
[Log] [resolveTypingsFromSuffixes] Final resolved currentType: net.minecraft.client.renderer.GameRenderer
[Log] [provideCompletionItems] Variable is not Companion, forcing instance context.
[Log] [provideCompletionItems] Found TypingsMember: net.minecraft.client.renderer.GameRenderer, preparing completions.
[Log] [buildCompletionItems] Building completions for: net.minecraft.client.renderer.GameRenderer
[Log] [buildCompletionItems] isCallOffClass: false, isStaticClassCall: false
[Log] [buildCompletionItems] Built 88 completion items.
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=1, character=58
[Log] [prepareContext] No navigation_expression iNode found.
[Log] [provideCompletionItems] Setup preparation failed, exiting.
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=1, character=59
[Log] [prepareContext] Successfully prepared context.
[Log] [prepareContext] Found iNode type: navigation_expression, [prepareContext] Found iNode text: Minecraft.getInstance().gameRenderer.lastScreenshotAttempt.g
[Log] [provideCompletionItems] iNode (navigation_expression) type: navigation_expression, [provideCompletionItems] iNode (navigation_expression) text: Minecraft.getInstance().gameRenderer.lastScreenshotAttempt.g
[Log] [provideCompletionItems] No scope found for current position.
[Log] [resolveBaseType] Starting base type resolution...
[Log] [resolveBaseType] Found firstChild navigation_expression
[Log] [resolveBaseType] No scoped variable found, falling back to resolveBaseTypeFromImports
[Log] [resolveBaseTypeFromImports] Starting import-based resolution...
[Log] [resolveBaseTypeFromImports] Checking 4 potential imports...
[Log] [resolveBaseTypeFromImports] Resolved from import: Minecraft
[Log] [resolveBaseType] Final resolved baseType: net.minecraft.client.Minecraft
[Log] [resolveBaseType] isCallOffClass: false
[Log] [resolveBaseType] isStaticClassCall: true
[Log] [resolveTypingsFromSuffixes] BaseType at start: net.minecraft.client.Minecraft
[Log] [resolveTypingsFromSuffixes] isCallOffClass: false
[Log] [isMethodCall] navigation_suffix leads into call_expression: .getInstance
[Log] [resolveTypingsFromSuffixes] Found suffix: getInstance, isMethodCall: true
[Log] [resolveTypingsFromSuffixes] Found suffix: gameRenderer, isMethodCall: false
[Log] [resolveTypingsFromSuffixes] Found suffix: lastScreenshotAttempt, isMethodCall: false
[Log] [resolveTypingsFromSuffixes] Found suffix: g, isMethodCall: false
[Log] [resolveTypingsFromSuffixes] Found refined suffixes: [
  "getInstance()",
  "gameRenderer",
  "lastScreenshotAttempt",
  "g"
]
[Log] [resolveTypingsFromSuffixes] Resolving instance chain from baseType: net.minecraft.client.Minecraft
[Log] [resolveTypingsFromSuffixes] Processing suffix: getInstance()
[Log] [resolveTypingsFromSuffixes] Matched method 'getInstance()' -> returns net.minecraft.client.Minecraft
[Log] [resolveTypingsFromSuffixes] Processing suffix: gameRenderer
[Log] [resolveTypingsFromSuffixes] Matched field 'gameRenderer' -> returns net.minecraft.client.renderer.GameRenderer
[Log] [resolveTypingsFromSuffixes] Processing suffix: lastScreenshotAttempt
[Log] [resolveTypingsFromSuffixes] Matched field 'lastScreenshotAttempt' -> returns kotlin.Long
[Log] [resolveTypingsFromSuffixes] Processing suffix: g
[Log] [resolveTypingsFromSuffixes] Field not found: g in kotlin.Long
[Log] [resolveTypingsFromSuffixes] Final resolved currentType: kotlin.Long
[Log] [provideCompletionItems] Variable is not Companion, forcing instance context.
[Log] [provideCompletionItems] Found TypingsMember: kotlin.Long, preparing completions.
[Log] [buildCompletionItems] Building completions for: kotlin.Long
[Log] [buildCompletionItems] isCallOffClass: false, isStaticClassCall: false
[Log] [buildCompletionItems] Built 64 completion items.
[Log] updating tokens
[Log] [provideCompletionItems] Starting provideCompletionItems...
[Log] [prepareContext] Preparing editor context...
[Log] [prepareContext] Position line=1, character=59
[Log] [prepareContext] Successfully prepared context.
[Log] [prepareContext] Found iNode type: navigation_expression, [prepareContext] Found iNode text: Minecraft.getInstance().gameRenderer.lastScreenshotAttempt.s
[Log] [provideCompletionItems] iNode (navigation_expression) type: navigation_expression, [provideCompletionItems] iNode (navigation_expression) text: Minecraft.getInstance().gameRenderer.lastScreenshotAttempt.s
[Log] [provideCompletionItems] No scope found for current position.
[Log] [resolveBaseType] Starting base type resolution...
[Log] [resolveBaseType] Found firstChild navigation_expression
[Log] [resolveBaseType] No scoped variable found, falling back to resolveBaseTypeFromImports
[Log] [resolveBaseTypeFromImports] Starting import-based resolution...
[Log] [resolveBaseTypeFromImports] Checking 4 potential imports...
[Log] [resolveBaseTypeFromImports] Resolved from import: Minecraft
[Log] [resolveBaseType] Final resolved baseType: net.minecraft.client.Minecraft
[Log] [resolveBaseType] isCallOffClass: false
[Log] [resolveBaseType] isStaticClassCall: true
[Log] [resolveTypingsFromSuffixes] BaseType at start: net.minecraft.client.Minecraft
[Log] [resolveTypingsFromSuffixes] isCallOffClass: false
[Log] [isMethodCall] navigation_suffix leads into call_expression: .getInstance
[Log] [resolveTypingsFromSuffixes] Found suffix: getInstance, isMethodCall: true
[Log] [resolveTypingsFromSuffixes] Found suffix: gameRenderer, isMethodCall: false
[Log] [resolveTypingsFromSuffixes] Found suffix: lastScreenshotAttempt, isMethodCall: false
[Log] [resolveTypingsFromSuffixes] Found suffix: s, isMethodCall: false
[Log] [resolveTypingsFromSuffixes] Found refined suffixes: [
  "getInstance()",
  "gameRenderer",
  "lastScreenshotAttempt",
  "s"
]
[Log] [resolveTypingsFromSuffixes] Resolving instance chain from baseType: net.minecraft.client.Minecraft
[Log] [resolveTypingsFromSuffixes] Processing suffix: getInstance()
[Log] [resolveTypingsFromSuffixes] Matched method 'getInstance()' -> returns net.minecraft.client.Minecraft
[Log] [resolveTypingsFromSuffixes] Processing suffix: gameRenderer
[Log] [resolveTypingsFromSuffixes] Matched field 'gameRenderer' -> returns net.minecraft.client.renderer.GameRenderer
[Log] [resolveTypingsFromSuffixes] Processing suffix: lastScreenshotAttempt
[Log] [resolveTypingsFromSuffixes] Matched field 'lastScreenshotAttempt' -> returns kotlin.Long
[Log] [resolveTypingsFromSuffixes] Processing suffix: s
[Log] [resolveTypingsFromSuffixes] Field not found: s in kotlin.Long
[Log] [resolveTypingsFromSuffixes] Final resolved currentType: kotlin.Long
[Log] [provideCompletionItems] Variable is not Companion, forcing instance context.
[Log] [provideCompletionItems] Found TypingsMember: kotlin.Long, preparing completions.
[Log] [buildCompletionItems] Building completions for: kotlin.Long
[Log] [buildCompletionItems] isCallOffClass: false, isStaticClassCall: false
[Log] [buildCompletionItems] Built 64 completion items.
[Log] updating tokens
[Log] <!DOCTYPE html>
		  <html lang="en">
		  <head>
			<meta charset="UTF-8">
			<style>
			  
		#class-search-bar {
		display: flex;
		align-items: center;
		gap: 8px;
		padding: 8px 12px;
		background: #2b2b2b;
		border-bottom: 1px solid #444;
		z-index: 150;
		position: relative;
		}

		#class-search-results {
		position: absolute;
		top: 100%;
		left: 0;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: 100%;
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
		}

			  
	@keyframes pop {
	  0% { transform: scale(1); }
	  50% { transform: scale(1.04); }
	  100% { transform: scale(1.035); }
	}
			  
	body {
	  margin: 0;
	  font-family: Consolas, monospace;
	  background: #1e1e1e;
	  color: rgb(210, 222, 174);
	  padding: 16px;
	}
			  
	#main {
	  cursor: text;
	  flex-grow: 1;
	  height: 100vh;
	  overflow: visible;
	  padding: 16px;
	  box-sizing: border-box;
	}
  
	.kw {
	  color: rgba(76, 156, 222, 0.93);
	  font-weight: bold;
	}
  
	.annotation {
	  color: rgb(238, 223, 154);
	}
  
	.type-link {
	  color: rgba(108, 220, 175, 0.92);
	  cursor: default;
	  text-decoration: none;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link {
	  cursor: pointer;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link:hover {
	  color: rgba(158, 234, 203, 0.92);
	  text-decoration: underline;
	  display: inline-block;
	  animation: pop 0.17s ease-in-out forwards;
	}
  
	.ident {
	  color: #9cdcfe;
	}
  
	.method-name {
	  color: rgba(231, 229, 151, 0.92);
	}
  
	.arg-name {
	  color: rgba(104, 208, 237, 0.97);
	}
  
	.line {
	  opacity: 0;
	  transition: opacity 0.05s linear;
	}
			  
	.highlight-box {
	  position: absolute;
	  background-color: rgba(255, 160, 80, 0.35);
	  border-radius: 2px;
	}
  
	.highlight-box.current {
	  outline: 1px solid #3794ff;
	  background-color: rgba(55, 148, 255, 0.3);
	  box-shadow: 0 0 4px #3794ff99;
	  z-index: 60;
	}
  
	.debug-overlay-wrapper {
	  position: fixed;
	  pointer-events: none;
	  z-index: 10000;
	}
  
	.debug-overlay-wrapper > div {
	  position: absolute;
	  pointer-events: auto;
	  background: rgba(255, 0, 0, 0.2);
	}
  
	#search-bar button {
	  background-color: rgba(30, 30, 30, 0.27);
	  color: white;
	  border: 1px solid #555;
	  border-radius: 6px;
	  padding: 4px 8px;
	  cursor: pointer;
	  transition: all 0.2s ease-in-out;
	  font-size: 13px;
	  font-family: inherit;
	  user-select: none;
	}
  
	#search-bar button.active {
	  background-color: #094771;
	  border-color: #3794ff;
	  color: white;
	}
			</style>
		  </head>
		  <body>
		    
	<div id="class-search-bar" style="
	  display: flex;
	  align-items: center;
	  gap: 8px;
	  padding: 8px 12px;
	  background: #2b2b2b;
	  border-bottom: 1px solid #444;
	  z-index: 150;
	">
	  <input id="class-search-input" type="text" placeholder="Search classes..." style="
		flex-grow: 1;
		padding: 6px 10px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 6px;
		font-family: inherit;
	  ">
	  <div id="class-search-results" style="
		position: absolute;
		top: 42px;
		left: 12px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: calc(100% - 24px);
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
	  "></div>
	</div>
			
	<div id="search-bar" style="
	  display: none;
	  position: fixed;
	  top: 8px;
	  right: 8px;
	  z-index: 200;
	  background: #2c2c2c;
	  padding: 4px 8px;
	  border-radius: 4px;
	  display: flex;
	  gap: 4px;
	  align-items: center;
	">
	  <input type="text" id="search-input" placeholder="Search..." style="
		width: 180px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		padding: 4px;
	  " />
	  <button id="toggle-case" title="Match Case">Aa</button>
	  <button id="toggle-whole" title="Whole Word">â›¶</button>
	  <button id="toggle-regex" title="Regex">*</button>
	  <span id="search-count" style="
		color: white;
		min-width: 30px;
		text-align: center;
		font-size: 13px;
		font-family: Arial, sans-serif;
	  ">No Results</span>
	  <button id="search-prev" title="Previous Match">â†‘</button>
	  <button id="search-next" title="Next Match">â†“</button>
	  <button id="search-close" title="Close Search" style="margin-left: auto;">âœ–</button>
	</div>
			
  <div id="console-output" style="
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 160px;
    background: #111;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    overflow-y: auto;
    padding: 24px 10px 6px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
    <button id="console-minimize" style="
      position: absolute;
      top: 4px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 2px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">â€“</button>
    <div id="console-content"></div>
  </div>

  <div id="console-bar" style="
    display: none;
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 24px;
    background: #222;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
  	<span>Console</span>
    <button id="console-restore" style="
      position: absolute;
      top: 1px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 1px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">+</button>
  </div>
			<div id="main"><div class="line" data-text="package kotlin.ranges" style="opacity: 0;"><div><span class="kw">package</span> <span class="type-link" data-package="kotlin"><span class="ident">kotlin</span></span><span>.</span><span class="type-link" data-package="kotlin.ranges"><span class="ident">ranges</span></span></div><br></div>
<div class="line" data-text="final class LongRange : LongProgression, ClosedRange, OpenEndRange, Iterable, KMappedMarker {" style="opacity: 0;"><div id="current-class"><span class="kw">final</span> <span class="kw">class</span> <span class="ident">LongRange</span> : <span class="type-link" data-type="kotlin.ranges.LongProgression">LongProgression</span>, <span class="type-link" data-type="kotlin.ranges.ClosedRange">ClosedRange</span>, <span class="type-link" data-type="kotlin.ranges.OpenEndRange">OpenEndRange</span>, <span class="type-link" data-type="java.lang.Iterable">Iterable</span>, <span class="type-link" data-type="kotlin.jvm.internal.markers.KMappedMarker">KMappedMarker</span> {</div></div>
<div class="line" data-text="fun getStart(): Comparable {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getStart</span>(): <span class="type-link" data-type="java.lang.Comparable">Comparable</span> {};</div></div>
<div class="line" data-text="fun getEndInclusive(): Comparable {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getEndInclusive</span>(): <span class="type-link" data-type="java.lang.Comparable">Comparable</span> {};</div></div>
<div class="line" data-text="fun getEndExclusive(): Comparable {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getEndExclusive</span>(): <span class="type-link" data-type="java.lang.Comparable">Comparable</span> {};</div></div>
<div class="line" data-text="fun contains(arg0: Long): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">contains</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Long">Long</span>): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun isEmpty(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">isEmpty</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun contains(arg0: Comparable): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">contains</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.Comparable">Comparable</span>): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun iterator(): LongIterator {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">iterator</span>(): <span class="type-link" data-type="kotlin.collections.LongIterator">LongIterator</span> {};</div></div>
<div class="line" data-text="fun forEach(arg0: Consumer<in T>): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">forEach</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.function.Consumer">Consumer</span>&lt;<span class="kw">in</span> <span class="ident">T</span>&gt;): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun spliterator(): Spliterator<T> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">spliterator</span>(): <span class="type-link" data-type="java.util.Spliterator">Spliterator</span>&lt;<span class="ident">T</span>&gt; {};</div></div>
<div class="line" data-text="final fun getFirst(): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">final</span> <span class="kw">fun</span> <span class="method-name">getFirst</span>(): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="final fun getLast(): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">final</span> <span class="kw">fun</span> <span class="method-name">getLast</span>(): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="final fun getStep(): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">final</span> <span class="kw">fun</span> <span class="method-name">getStep</span>(): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="companion object {" style="opacity: 0;"><br><div style="padding-left: 2em"><span class="kw">companion object</span> {</div></div>
<div class="line" data-text="@JvmStaticfinal val Companion: LongRange$Companion;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">final</span> <span class="kw">val</span> <span class="ident">Companion</span>: <span class="type-link" data-type="kotlin.ranges.LongRange$Companion">LongRange$Companion</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val EMPTY: LongRange;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">EMPTY</span>: <span class="type-link" data-type="kotlin.ranges.LongRange">LongRange</span>;</div></div>
<div class="line" data-text="}" style="opacity: 0;"><div style="padding-left: 2em">}</div></div>
<div class="line" data-text="}" style="opacity: 0;"><div>}</div></div>
<div class="line" data-text="" style="opacity: 0;"></div></div></div>
			
	<div id="hover-preview" style="
	  position: fixed;
	  overflow: auto;
	  background: #2b2b2b;
	  color: #ddd;
	  border: 1px solid #444;
	  border-radius: 6px;
	  font-size: 13px;
	  padding: 8px;
	  display: none;
	  z-index: 50;
	  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.5);
	  pointer-events: auto;
	">
	  <div id="hover-content"></div>
	</div>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/constantsPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/consoleViewer.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/classPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/searchBarViewer.js"></script>
		  </body>
		  </html>
[Log] <!DOCTYPE html>
		  <html lang="en">
		  <head>
			<meta charset="UTF-8">
			<style>
			  
		#class-search-bar {
		display: flex;
		align-items: center;
		gap: 8px;
		padding: 8px 12px;
		background: #2b2b2b;
		border-bottom: 1px solid #444;
		z-index: 150;
		position: relative;
		}

		#class-search-results {
		position: absolute;
		top: 100%;
		left: 0;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: 100%;
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
		}

			  
	@keyframes pop {
	  0% { transform: scale(1); }
	  50% { transform: scale(1.04); }
	  100% { transform: scale(1.035); }
	}
			  
	body {
	  margin: 0;
	  font-family: Consolas, monospace;
	  background: #1e1e1e;
	  color: rgb(210, 222, 174);
	  padding: 16px;
	}
			  
	#main {
	  cursor: text;
	  flex-grow: 1;
	  height: 100vh;
	  overflow: visible;
	  padding: 16px;
	  box-sizing: border-box;
	}
  
	.kw {
	  color: rgba(76, 156, 222, 0.93);
	  font-weight: bold;
	}
  
	.annotation {
	  color: rgb(238, 223, 154);
	}
  
	.type-link {
	  color: rgba(108, 220, 175, 0.92);
	  cursor: default;
	  text-decoration: none;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link {
	  cursor: pointer;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link:hover {
	  color: rgba(158, 234, 203, 0.92);
	  text-decoration: underline;
	  display: inline-block;
	  animation: pop 0.17s ease-in-out forwards;
	}
  
	.ident {
	  color: #9cdcfe;
	}
  
	.method-name {
	  color: rgba(231, 229, 151, 0.92);
	}
  
	.arg-name {
	  color: rgba(104, 208, 237, 0.97);
	}
  
	.line {
	  opacity: 0;
	  transition: opacity 0.05s linear;
	}
			  
	.highlight-box {
	  position: absolute;
	  background-color: rgba(255, 160, 80, 0.35);
	  border-radius: 2px;
	}
  
	.highlight-box.current {
	  outline: 1px solid #3794ff;
	  background-color: rgba(55, 148, 255, 0.3);
	  box-shadow: 0 0 4px #3794ff99;
	  z-index: 60;
	}
  
	.debug-overlay-wrapper {
	  position: fixed;
	  pointer-events: none;
	  z-index: 10000;
	}
  
	.debug-overlay-wrapper > div {
	  position: absolute;
	  pointer-events: auto;
	  background: rgba(255, 0, 0, 0.2);
	}
  
	#search-bar button {
	  background-color: rgba(30, 30, 30, 0.27);
	  color: white;
	  border: 1px solid #555;
	  border-radius: 6px;
	  padding: 4px 8px;
	  cursor: pointer;
	  transition: all 0.2s ease-in-out;
	  font-size: 13px;
	  font-family: inherit;
	  user-select: none;
	}
  
	#search-bar button.active {
	  background-color: #094771;
	  border-color: #3794ff;
	  color: white;
	}
			</style>
		  </head>
		  <body>
		    
	<div id="class-search-bar" style="
	  display: flex;
	  align-items: center;
	  gap: 8px;
	  padding: 8px 12px;
	  background: #2b2b2b;
	  border-bottom: 1px solid #444;
	  z-index: 150;
	">
	  <input id="class-search-input" type="text" placeholder="Search classes..." style="
		flex-grow: 1;
		padding: 6px 10px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 6px;
		font-family: inherit;
	  ">
	  <div id="class-search-results" style="
		position: absolute;
		top: 42px;
		left: 12px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: calc(100% - 24px);
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
	  "></div>
	</div>
			
	<div id="search-bar" style="
	  display: none;
	  position: fixed;
	  top: 8px;
	  right: 8px;
	  z-index: 200;
	  background: #2c2c2c;
	  padding: 4px 8px;
	  border-radius: 4px;
	  display: flex;
	  gap: 4px;
	  align-items: center;
	">
	  <input type="text" id="search-input" placeholder="Search..." style="
		width: 180px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		padding: 4px;
	  " />
	  <button id="toggle-case" title="Match Case">Aa</button>
	  <button id="toggle-whole" title="Whole Word">â›¶</button>
	  <button id="toggle-regex" title="Regex">*</button>
	  <span id="search-count" style="
		color: white;
		min-width: 30px;
		text-align: center;
		font-size: 13px;
		font-family: Arial, sans-serif;
	  ">No Results</span>
	  <button id="search-prev" title="Previous Match">â†‘</button>
	  <button id="search-next" title="Next Match">â†“</button>
	  <button id="search-close" title="Close Search" style="margin-left: auto;">âœ–</button>
	</div>
			
  <div id="console-output" style="
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 160px;
    background: #111;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    overflow-y: auto;
    padding: 24px 10px 6px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
    <button id="console-minimize" style="
      position: absolute;
      top: 4px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 2px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">â€“</button>
    <div id="console-content"></div>
  </div>

  <div id="console-bar" style="
    display: none;
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 24px;
    background: #222;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
  	<span>Console</span>
    <button id="console-restore" style="
      position: absolute;
      top: 1px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 1px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">+</button>
  </div>
			<div id="main"><div class="line" data-text="package java.util" style="opacity: 0;"><div><span class="kw">package</span> <span class="type-link" data-package="java"><span class="ident">java</span></span><span>.</span><span class="type-link" data-package="java.util"><span class="ident">util</span></span></div><br></div>
<div class="line" data-text=" interface Spliterator<T> {" style="opacity: 0;"><div id="current-class"> <span class="kw">interface</span> <span class="ident">Spliterator</span>&lt;<span class="ident">T</span>&gt; {</div></div>
<div class="line" data-text="fun tryAdvance(arg0: Consumer<in T>): Boolean;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">tryAdvance</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.function.Consumer">Consumer</span>&lt;<span class="kw">in</span> <span class="ident">T</span>&gt;): <span class="type-link" data-type="kotlin.Boolean">Boolean</span>;</div></div>
<div class="line" data-text="fun forEachRemaining(arg0: Consumer<in T>): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">forEachRemaining</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.function.Consumer">Consumer</span>&lt;<span class="kw">in</span> <span class="ident">T</span>&gt;): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun trySplit(): Spliterator<T>;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">trySplit</span>(): <span class="type-link" data-type="java.util.Spliterator">Spliterator</span>&lt;<span class="ident">T</span>&gt;;</div></div>
<div class="line" data-text="fun estimateSize(): Long;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">estimateSize</span>(): <span class="type-link" data-type="kotlin.Long">Long</span>;</div></div>
<div class="line" data-text="fun getExactSizeIfKnown(): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getExactSizeIfKnown</span>(): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="fun characteristics(): Int;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">characteristics</span>(): <span class="type-link" data-type="kotlin.Int">Int</span>;</div></div>
<div class="line" data-text="fun hasCharacteristics(arg0: Int): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">hasCharacteristics</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun getComparator(): Comparator<in T> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getComparator</span>(): <span class="type-link" data-type="java.util.Comparator">Comparator</span>&lt;<span class="kw">in</span> <span class="ident">T</span>&gt; {};</div></div>
<div class="line" data-text="companion object {" style="opacity: 0;"><br><div style="padding-left: 2em"><span class="kw">companion object</span> {</div></div>
<div class="line" data-text="@JvmStaticfinal val ORDERED: Int;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">final</span> <span class="kw">val</span> <span class="ident">ORDERED</span>: <span class="type-link" data-type="kotlin.Int">Int</span>;</div></div>
<div class="line" data-text="@JvmStaticfinal val DISTINCT: Int;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">final</span> <span class="kw">val</span> <span class="ident">DISTINCT</span>: <span class="type-link" data-type="kotlin.Int">Int</span>;</div></div>
<div class="line" data-text="@JvmStaticfinal val SORTED: Int;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">final</span> <span class="kw">val</span> <span class="ident">SORTED</span>: <span class="type-link" data-type="kotlin.Int">Int</span>;</div></div>
<div class="line" data-text="@JvmStaticfinal val SIZED: Int;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">final</span> <span class="kw">val</span> <span class="ident">SIZED</span>: <span class="type-link" data-type="kotlin.Int">Int</span>;</div></div>
<div class="line" data-text="@JvmStaticfinal val NONNULL: Int;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">final</span> <span class="kw">val</span> <span class="ident">NONNULL</span>: <span class="type-link" data-type="kotlin.Int">Int</span>;</div></div>
<div class="line" data-text="@JvmStaticfinal val IMMUTABLE: Int;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">final</span> <span class="kw">val</span> <span class="ident">IMMUTABLE</span>: <span class="type-link" data-type="kotlin.Int">Int</span>;</div></div>
<div class="line" data-text="@JvmStaticfinal val CONCURRENT: Int;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">final</span> <span class="kw">val</span> <span class="ident">CONCURRENT</span>: <span class="type-link" data-type="kotlin.Int">Int</span>;</div></div>
<div class="line" data-text="@JvmStaticfinal val SUBSIZED: Int;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">final</span> <span class="kw">val</span> <span class="ident">SUBSIZED</span>: <span class="type-link" data-type="kotlin.Int">Int</span>;</div></div>
<div class="line" data-text="}" style="opacity: 0;"><div style="padding-left: 2em">}</div></div>
<div class="line" data-text="}" style="opacity: 0;"><div>}</div></div>
<div class="line" data-text="" style="opacity: 0;"></div></div></div>
			
	<div id="hover-preview" style="
	  position: fixed;
	  overflow: auto;
	  background: #2b2b2b;
	  color: #ddd;
	  border: 1px solid #444;
	  border-radius: 6px;
	  font-size: 13px;
	  padding: 8px;
	  display: none;
	  z-index: 50;
	  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.5);
	  pointer-events: auto;
	">
	  <div id="hover-content"></div>
	</div>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/constantsPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/consoleViewer.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/classPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/searchBarViewer.js"></script>
		  </body>
		  </html>
[Log] <!DOCTYPE html>
		  <html lang="en">
		  <head>
			<meta charset="UTF-8">
			<style>
			  
		#class-search-bar {
		display: flex;
		align-items: center;
		gap: 8px;
		padding: 8px 12px;
		background: #2b2b2b;
		border-bottom: 1px solid #444;
		z-index: 150;
		position: relative;
		}

		#class-search-results {
		position: absolute;
		top: 100%;
		left: 0;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: 100%;
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
		}

			  
	@keyframes pop {
	  0% { transform: scale(1); }
	  50% { transform: scale(1.04); }
	  100% { transform: scale(1.035); }
	}
			  
	body {
	  margin: 0;
	  font-family: Consolas, monospace;
	  background: #1e1e1e;
	  color: rgb(210, 222, 174);
	  padding: 16px;
	}
			  
	#main {
	  cursor: text;
	  flex-grow: 1;
	  height: 100vh;
	  overflow: visible;
	  padding: 16px;
	  box-sizing: border-box;
	}
  
	.kw {
	  color: rgba(76, 156, 222, 0.93);
	  font-weight: bold;
	}
  
	.annotation {
	  color: rgb(238, 223, 154);
	}
  
	.type-link {
	  color: rgba(108, 220, 175, 0.92);
	  cursor: default;
	  text-decoration: none;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link {
	  cursor: pointer;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link:hover {
	  color: rgba(158, 234, 203, 0.92);
	  text-decoration: underline;
	  display: inline-block;
	  animation: pop 0.17s ease-in-out forwards;
	}
  
	.ident {
	  color: #9cdcfe;
	}
  
	.method-name {
	  color: rgba(231, 229, 151, 0.92);
	}
  
	.arg-name {
	  color: rgba(104, 208, 237, 0.97);
	}
  
	.line {
	  opacity: 0;
	  transition: opacity 0.05s linear;
	}
			  
	.highlight-box {
	  position: absolute;
	  background-color: rgba(255, 160, 80, 0.35);
	  border-radius: 2px;
	}
  
	.highlight-box.current {
	  outline: 1px solid #3794ff;
	  background-color: rgba(55, 148, 255, 0.3);
	  box-shadow: 0 0 4px #3794ff99;
	  z-index: 60;
	}
  
	.debug-overlay-wrapper {
	  position: fixed;
	  pointer-events: none;
	  z-index: 10000;
	}
  
	.debug-overlay-wrapper > div {
	  position: absolute;
	  pointer-events: auto;
	  background: rgba(255, 0, 0, 0.2);
	}
  
	#search-bar button {
	  background-color: rgba(30, 30, 30, 0.27);
	  color: white;
	  border: 1px solid #555;
	  border-radius: 6px;
	  padding: 4px 8px;
	  cursor: pointer;
	  transition: all 0.2s ease-in-out;
	  font-size: 13px;
	  font-family: inherit;
	  user-select: none;
	}
  
	#search-bar button.active {
	  background-color: #094771;
	  border-color: #3794ff;
	  color: white;
	}
			</style>
		  </head>
		  <body>
		    
	<div id="class-search-bar" style="
	  display: flex;
	  align-items: center;
	  gap: 8px;
	  padding: 8px 12px;
	  background: #2b2b2b;
	  border-bottom: 1px solid #444;
	  z-index: 150;
	">
	  <input id="class-search-input" type="text" placeholder="Search classes..." style="
		flex-grow: 1;
		padding: 6px 10px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 6px;
		font-family: inherit;
	  ">
	  <div id="class-search-results" style="
		position: absolute;
		top: 42px;
		left: 12px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: calc(100% - 24px);
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
	  "></div>
	</div>
			
	<div id="search-bar" style="
	  display: none;
	  position: fixed;
	  top: 8px;
	  right: 8px;
	  z-index: 200;
	  background: #2c2c2c;
	  padding: 4px 8px;
	  border-radius: 4px;
	  display: flex;
	  gap: 4px;
	  align-items: center;
	">
	  <input type="text" id="search-input" placeholder="Search..." style="
		width: 180px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		padding: 4px;
	  " />
	  <button id="toggle-case" title="Match Case">Aa</button>
	  <button id="toggle-whole" title="Whole Word">â›¶</button>
	  <button id="toggle-regex" title="Regex">*</button>
	  <span id="search-count" style="
		color: white;
		min-width: 30px;
		text-align: center;
		font-size: 13px;
		font-family: Arial, sans-serif;
	  ">No Results</span>
	  <button id="search-prev" title="Previous Match">â†‘</button>
	  <button id="search-next" title="Next Match">â†“</button>
	  <button id="search-close" title="Close Search" style="margin-left: auto;">âœ–</button>
	</div>
			
  <div id="console-output" style="
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 160px;
    background: #111;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    overflow-y: auto;
    padding: 24px 10px 6px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
    <button id="console-minimize" style="
      position: absolute;
      top: 4px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 2px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">â€“</button>
    <div id="console-content"></div>
  </div>

  <div id="console-bar" style="
    display: none;
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 24px;
    background: #222;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
  	<span>Console</span>
    <button id="console-restore" style="
      position: absolute;
      top: 1px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 1px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">+</button>
  </div>
			<div id="main"><div class="line" data-text="package kotlin" style="opacity: 0;"><div><span class="kw">package</span> <span class="type-link" data-package="kotlin"><span class="ident">kotlin</span></span></div><br></div>
<div class="line" data-text=" class Any {" style="opacity: 0;"><div id="current-class"> <span class="kw">class</span> <span class="ident">Any</span> {</div></div>
<div class="line" data-text="fun equals(arg0: Any): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">equals</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Any">Any</span>): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun hashCode(): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">hashCode</span>(): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun toString(): String {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">toString</span>(): <span class="type-link" data-type="kotlin.String">String</span> {};</div></div>
<div class="line" data-text="}" style="opacity: 0;"><div>}</div></div>
<div class="line" data-text="" style="opacity: 0;"></div></div></div>
			
	<div id="hover-preview" style="
	  position: fixed;
	  overflow: auto;
	  background: #2b2b2b;
	  color: #ddd;
	  border: 1px solid #444;
	  border-radius: 6px;
	  font-size: 13px;
	  padding: 8px;
	  display: none;
	  z-index: 50;
	  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.5);
	  pointer-events: auto;
	">
	  <div id="hover-content"></div>
	</div>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/constantsPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/consoleViewer.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/classPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/searchBarViewer.js"></script>
		  </body>
		  </html>
[Log] <!DOCTYPE html>
		  <html lang="en">
		  <head>
			<meta charset="UTF-8">
			<style>
			  
		#class-search-bar {
		display: flex;
		align-items: center;
		gap: 8px;
		padding: 8px 12px;
		background: #2b2b2b;
		border-bottom: 1px solid #444;
		z-index: 150;
		position: relative;
		}

		#class-search-results {
		position: absolute;
		top: 100%;
		left: 0;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: 100%;
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
		}

			  
	@keyframes pop {
	  0% { transform: scale(1); }
	  50% { transform: scale(1.04); }
	  100% { transform: scale(1.035); }
	}
			  
	body {
	  margin: 0;
	  font-family: Consolas, monospace;
	  background: #1e1e1e;
	  color: rgb(210, 222, 174);
	  padding: 16px;
	}
			  
	#main {
	  cursor: text;
	  flex-grow: 1;
	  height: 100vh;
	  overflow: visible;
	  padding: 16px;
	  box-sizing: border-box;
	}
  
	.kw {
	  color: rgba(76, 156, 222, 0.93);
	  font-weight: bold;
	}
  
	.annotation {
	  color: rgb(238, 223, 154);
	}
  
	.type-link {
	  color: rgba(108, 220, 175, 0.92);
	  cursor: default;
	  text-decoration: none;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link {
	  cursor: pointer;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link:hover {
	  color: rgba(158, 234, 203, 0.92);
	  text-decoration: underline;
	  display: inline-block;
	  animation: pop 0.17s ease-in-out forwards;
	}
  
	.ident {
	  color: #9cdcfe;
	}
  
	.method-name {
	  color: rgba(231, 229, 151, 0.92);
	}
  
	.arg-name {
	  color: rgba(104, 208, 237, 0.97);
	}
  
	.line {
	  opacity: 0;
	  transition: opacity 0.05s linear;
	}
			  
	.highlight-box {
	  position: absolute;
	  background-color: rgba(255, 160, 80, 0.35);
	  border-radius: 2px;
	}
  
	.highlight-box.current {
	  outline: 1px solid #3794ff;
	  background-color: rgba(55, 148, 255, 0.3);
	  box-shadow: 0 0 4px #3794ff99;
	  z-index: 60;
	}
  
	.debug-overlay-wrapper {
	  position: fixed;
	  pointer-events: none;
	  z-index: 10000;
	}
  
	.debug-overlay-wrapper > div {
	  position: absolute;
	  pointer-events: auto;
	  background: rgba(255, 0, 0, 0.2);
	}
  
	#search-bar button {
	  background-color: rgba(30, 30, 30, 0.27);
	  color: white;
	  border: 1px solid #555;
	  border-radius: 6px;
	  padding: 4px 8px;
	  cursor: pointer;
	  transition: all 0.2s ease-in-out;
	  font-size: 13px;
	  font-family: inherit;
	  user-select: none;
	}
  
	#search-bar button.active {
	  background-color: #094771;
	  border-color: #3794ff;
	  color: white;
	}
			</style>
		  </head>
		  <body>
		    
	<div id="class-search-bar" style="
	  display: flex;
	  align-items: center;
	  gap: 8px;
	  padding: 8px 12px;
	  background: #2b2b2b;
	  border-bottom: 1px solid #444;
	  z-index: 150;
	">
	  <input id="class-search-input" type="text" placeholder="Search classes..." style="
		flex-grow: 1;
		padding: 6px 10px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 6px;
		font-family: inherit;
	  ">
	  <div id="class-search-results" style="
		position: absolute;
		top: 42px;
		left: 12px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: calc(100% - 24px);
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
	  "></div>
	</div>
			
	<div id="search-bar" style="
	  display: none;
	  position: fixed;
	  top: 8px;
	  right: 8px;
	  z-index: 200;
	  background: #2c2c2c;
	  padding: 4px 8px;
	  border-radius: 4px;
	  display: flex;
	  gap: 4px;
	  align-items: center;
	">
	  <input type="text" id="search-input" placeholder="Search..." style="
		width: 180px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		padding: 4px;
	  " />
	  <button id="toggle-case" title="Match Case">Aa</button>
	  <button id="toggle-whole" title="Whole Word">â›¶</button>
	  <button id="toggle-regex" title="Regex">*</button>
	  <span id="search-count" style="
		color: white;
		min-width: 30px;
		text-align: center;
		font-size: 13px;
		font-family: Arial, sans-serif;
	  ">No Results</span>
	  <button id="search-prev" title="Previous Match">â†‘</button>
	  <button id="search-next" title="Next Match">â†“</button>
	  <button id="search-close" title="Close Search" style="margin-left: auto;">âœ–</button>
	</div>
			
  <div id="console-output" style="
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 160px;
    background: #111;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    overflow-y: auto;
    padding: 24px 10px 6px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
    <button id="console-minimize" style="
      position: absolute;
      top: 4px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 2px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">â€“</button>
    <div id="console-content"></div>
  </div>

  <div id="console-bar" style="
    display: none;
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 24px;
    background: #222;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
  	<span>Console</span>
    <button id="console-restore" style="
      position: absolute;
      top: 1px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 1px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">+</button>
  </div>
			<div id="main"><div class="line" data-text="package net.minecraft.server" style="opacity: 0;"><div><span class="kw">package</span> <span class="type-link" data-package="net"><span class="ident">net</span></span><span>.</span><span class="type-link" data-package="net.minecraft"><span class="ident">minecraft</span></span><span>.</span><span class="type-link" data-package="net.minecraft.server"><span class="ident">server</span></span></div><br></div>
<div class="line" data-text="abstract class MinecraftServer : ReentrantBlockableEventLoop, ServerInfo, ChunkIOErrorReporter, CommandSource, AutoCloseable, ProfilerMeasured, ProcessorHandle, Executor {" style="opacity: 0;"><div id="current-class"><span class="kw">abstract</span> <span class="kw">class</span> <span class="ident">MinecraftServer</span> : <span class="type-link" data-type="net.minecraft.util.thread.ReentrantBlockableEventLoop">ReentrantBlockableEventLoop</span>, <span class="type-link" data-type="net.minecraft.server.ServerInfo">ServerInfo</span>, <span class="type-link" data-type="net.minecraft.world.level.chunk.storage.ChunkIOErrorReporter">ChunkIOErrorReporter</span>, <span class="type-link" data-type="net.minecraft.commands.CommandSource">CommandSource</span>, <span class="type-link" data-type="java.lang.AutoCloseable">AutoCloseable</span>, <span class="type-link" data-type="net.minecraft.util.profiling.metrics.ProfilerMeasured">ProfilerMeasured</span>, <span class="type-link" data-type="net.minecraft.util.thread.ProcessorHandle">ProcessorHandle</span>, <span class="type-link" data-type="java.util.concurrent.Executor">Executor</span> {</div></div>
<div class="line" data-text="protected final val storageSource: LevelStorageSource$LevelStorageAccess;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">protected</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">storageSource</span>: <span class="type-link" data-type="net.minecraft.world.level.storage.LevelStorageSource$LevelStorageAccess">LevelStorageSource$LevelStorageAccess</span>;</div></div>
<div class="line" data-text="protected final val playerDataStorage: PlayerDataStorage;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">protected</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">playerDataStorage</span>: <span class="type-link" data-type="net.minecraft.world.level.storage.PlayerDataStorage">PlayerDataStorage</span>;</div></div>
<div class="line" data-text="private final val tickables: List<Runnable>;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">tickables</span>: <span class="type-link" data-type="java.util.List">List</span>&lt;<span class="type-link" data-type="java.lang.Runnable">Runnable</span>&gt;;</div></div>
<div class="line" data-text="private val metricsRecorder: MetricsRecorder;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">metricsRecorder</span>: <span class="type-link" data-type="net.minecraft.util.profiling.metrics.profiling.MetricsRecorder">MetricsRecorder</span>;</div></div>
<div class="line" data-text="private val profiler: ProfilerFiller;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">profiler</span>: <span class="type-link" data-type="net.minecraft.util.profiling.ProfilerFiller">ProfilerFiller</span>;</div></div>
<div class="line" data-text="private val onMetricsRecordingStopped: Consumer<ProfileResults>;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">onMetricsRecordingStopped</span>: <span class="type-link" data-type="java.util.function.Consumer">Consumer</span>&lt;<span class="type-link" data-type="net.minecraft.util.profiling.ProfileResults">ProfileResults</span>&gt;;</div></div>
<div class="line" data-text="private val onMetricsRecordingFinished: Consumer<Path>;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">onMetricsRecordingFinished</span>: <span class="type-link" data-type="java.util.function.Consumer">Consumer</span>&lt;<span class="type-link" data-type="java.nio.file.Path">Path</span>&gt;;</div></div>
<div class="line" data-text="private val willStartRecordingMetrics: Boolean;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">willStartRecordingMetrics</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>;</div></div>
<div class="line" data-text="private val debugCommandProfiler: MinecraftServer$TimeProfiler;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">debugCommandProfiler</span>: <span class="type-link" data-type="net.minecraft.server.MinecraftServer$TimeProfiler">MinecraftServer$TimeProfiler</span>;</div></div>
<div class="line" data-text="private val debugCommandProfilerDelayStart: Boolean;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">debugCommandProfilerDelayStart</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>;</div></div>
<div class="line" data-text="private final val connection: ServerConnectionListener;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">connection</span>: <span class="type-link" data-type="net.minecraft.server.network.ServerConnectionListener">ServerConnectionListener</span>;</div></div>
<div class="line" data-text="private final val progressListenerFactory: ChunkProgressListenerFactory;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">progressListenerFactory</span>: <span class="type-link" data-type="net.minecraft.server.level.progress.ChunkProgressListenerFactory">ChunkProgressListenerFactory</span>;</div></div>
<div class="line" data-text="private val status: ServerStatus;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">status</span>: <span class="type-link" data-type="net.minecraft.network.protocol.status.ServerStatus">ServerStatus</span>;</div></div>
<div class="line" data-text="private val statusIcon: ServerStatus$Favicon;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">statusIcon</span>: <span class="type-link" data-type="net.minecraft.network.protocol.status.ServerStatus$Favicon">ServerStatus$Favicon</span>;</div></div>
<div class="line" data-text="private final val random: RandomSource;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">random</span>: <span class="type-link" data-type="net.minecraft.util.RandomSource">RandomSource</span>;</div></div>
<div class="line" data-text="private final val fixerUpper: DataFixer;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">fixerUpper</span>: <span class="type-link" data-type="com.mojang.datafixers.DataFixer">DataFixer</span>;</div></div>
<div class="line" data-text="private val localIp: String;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">localIp</span>: <span class="type-link" data-type="java.lang.String">String</span>;</div></div>
<div class="line" data-text="private val port: Int;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">port</span>: <span class="type-link" data-type="kotlin.Int">Int</span>;</div></div>
<div class="line" data-text="private final val registries: LayeredRegistryAccess<RegistryLayer>;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">registries</span>: <span class="type-link" data-type="net.minecraft.core.LayeredRegistryAccess">LayeredRegistryAccess</span>&lt;<span class="type-link" data-type="net.minecraft.server.RegistryLayer">RegistryLayer</span>&gt;;</div></div>
<div class="line" data-text="private final val levels: Map<ResourceKey<Level>, ServerLevel>;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">levels</span>: <span class="type-link" data-type="java.util.Map">Map</span>&lt;<span class="type-link" data-type="net.minecraft.resources.ResourceKey">ResourceKey</span>&lt;<span class="type-link" data-type="net.minecraft.world.level.Level">Level</span>&gt;, <span class="type-link" data-type="net.minecraft.server.level.ServerLevel">ServerLevel</span>&gt;;</div></div>
<div class="line" data-text="private val playerList: PlayerList;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">playerList</span>: <span class="type-link" data-type="net.minecraft.server.players.PlayerList">PlayerList</span>;</div></div>
<div class="line" data-text="@Volatileprivate val running: Boolean;" style="opacity: 0;"><div style="padding-left: 2em"><span class="annotation">@Volatile</span></div><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">running</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>;</div></div>
<div class="line" data-text="private val stopped: Boolean;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">stopped</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>;</div></div>
<div class="line" data-text="private val tickCount: Int;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">tickCount</span>: <span class="type-link" data-type="kotlin.Int">Int</span>;</div></div>
<div class="line" data-text="private val ticksUntilAutosave: Int;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">ticksUntilAutosave</span>: <span class="type-link" data-type="kotlin.Int">Int</span>;</div></div>
<div class="line" data-text="protected final val proxy: Proxy;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">protected</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">proxy</span>: <span class="type-link" data-type="java.net.Proxy">Proxy</span>;</div></div>
<div class="line" data-text="private val onlineMode: Boolean;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">onlineMode</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>;</div></div>
<div class="line" data-text="private val preventProxyConnections: Boolean;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">preventProxyConnections</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>;</div></div>
<div class="line" data-text="private val pvp: Boolean;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">pvp</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>;</div></div>
<div class="line" data-text="private val allowFlight: Boolean;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">allowFlight</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>;</div></div>
<div class="line" data-text="private val motd: String;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">motd</span>: <span class="type-link" data-type="java.lang.String">String</span>;</div></div>
<div class="line" data-text="private val playerIdleTimeout: Int;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">playerIdleTimeout</span>: <span class="type-link" data-type="kotlin.Int">Int</span>;</div></div>
<div class="line" data-text="private final val tickTimesNanos: long[];" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">tickTimesNanos</span>: <span class="type-link" data-type="long">long</span>[];</div></div>
<div class="line" data-text="private val aggregatedTickTimesNanos: Long;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">aggregatedTickTimesNanos</span>: <span class="type-link" data-type="kotlin.Long">Long</span>;</div></div>
<div class="line" data-text="private val keyPair: KeyPair;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">keyPair</span>: <span class="type-link" data-type="java.security.KeyPair">KeyPair</span>;</div></div>
<div class="line" data-text="private val singleplayerProfile: GameProfile;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">singleplayerProfile</span>: <span class="type-link" data-type="com.mojang.authlib.GameProfile">GameProfile</span>;</div></div>
<div class="line" data-text="private val isDemo: Boolean;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">isDemo</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>;</div></div>
<div class="line" data-text="@Volatileprivate val isReady: Boolean;" style="opacity: 0;"><div style="padding-left: 2em"><span class="annotation">@Volatile</span></div><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">isReady</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>;</div></div>
<div class="line" data-text="private val lastOverloadWarningNanos: Long;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">lastOverloadWarningNanos</span>: <span class="type-link" data-type="kotlin.Long">Long</span>;</div></div>
<div class="line" data-text="protected final val services: Services;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">protected</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">services</span>: <span class="type-link" data-type="net.minecraft.server.Services">Services</span>;</div></div>
<div class="line" data-text="private val lastServerStatus: Long;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">lastServerStatus</span>: <span class="type-link" data-type="kotlin.Long">Long</span>;</div></div>
<div class="line" data-text="private final val serverThread: Thread;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">serverThread</span>: <span class="type-link" data-type="java.lang.Thread">Thread</span>;</div></div>
<div class="line" data-text="private val lastTickNanos: Long;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">lastTickNanos</span>: <span class="type-link" data-type="kotlin.Long">Long</span>;</div></div>
<div class="line" data-text="private val taskExecutionStartNanos: Long;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">taskExecutionStartNanos</span>: <span class="type-link" data-type="kotlin.Long">Long</span>;</div></div>
<div class="line" data-text="private val idleTimeNanos: Long;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">idleTimeNanos</span>: <span class="type-link" data-type="kotlin.Long">Long</span>;</div></div>
<div class="line" data-text="private val nextTickTimeNanos: Long;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">nextTickTimeNanos</span>: <span class="type-link" data-type="kotlin.Long">Long</span>;</div></div>
<div class="line" data-text="private val delayedTasksMaxNextTickTimeNanos: Long;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">delayedTasksMaxNextTickTimeNanos</span>: <span class="type-link" data-type="kotlin.Long">Long</span>;</div></div>
<div class="line" data-text="private val mayHaveDelayedTasks: Boolean;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">mayHaveDelayedTasks</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>;</div></div>
<div class="line" data-text="private final val packRepository: PackRepository;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">packRepository</span>: <span class="type-link" data-type="net.minecraft.server.packs.repository.PackRepository">PackRepository</span>;</div></div>
<div class="line" data-text="private final val scoreboard: ServerScoreboard;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">scoreboard</span>: <span class="type-link" data-type="net.minecraft.server.ServerScoreboard">ServerScoreboard</span>;</div></div>
<div class="line" data-text="private val commandStorage: CommandStorage;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">commandStorage</span>: <span class="type-link" data-type="net.minecraft.world.level.storage.CommandStorage">CommandStorage</span>;</div></div>
<div class="line" data-text="private final val customBossEvents: CustomBossEvents;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">customBossEvents</span>: <span class="type-link" data-type="net.minecraft.server.bossevents.CustomBossEvents">CustomBossEvents</span>;</div></div>
<div class="line" data-text="private final val functionManager: ServerFunctionManager;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">functionManager</span>: <span class="type-link" data-type="net.minecraft.server.ServerFunctionManager">ServerFunctionManager</span>;</div></div>
<div class="line" data-text="private val enforceWhitelist: Boolean;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">enforceWhitelist</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>;</div></div>
<div class="line" data-text="private val smoothedTickTimeMillis: Float;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">smoothedTickTimeMillis</span>: <span class="type-link" data-type="kotlin.Float">Float</span>;</div></div>
<div class="line" data-text="private final val executor: Executor;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">executor</span>: <span class="type-link" data-type="java.util.concurrent.Executor">Executor</span>;</div></div>
<div class="line" data-text="private val serverId: String;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">serverId</span>: <span class="type-link" data-type="java.lang.String">String</span>;</div></div>
<div class="line" data-text="private val resources: MinecraftServer$ReloadableResources;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">resources</span>: <span class="type-link" data-type="net.minecraft.server.MinecraftServer$ReloadableResources">MinecraftServer$ReloadableResources</span>;</div></div>
<div class="line" data-text="private final val structureTemplateManager: StructureTemplateManager;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">structureTemplateManager</span>: <span class="type-link" data-type="net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplateManager">StructureTemplateManager</span>;</div></div>
<div class="line" data-text="private final val tickRateManager: ServerTickRateManager;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">tickRateManager</span>: <span class="type-link" data-type="net.minecraft.server.ServerTickRateManager">ServerTickRateManager</span>;</div></div>
<div class="line" data-text="protected final val worldData: WorldData;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">protected</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">worldData</span>: <span class="type-link" data-type="net.minecraft.world.level.storage.WorldData">WorldData</span>;</div></div>
<div class="line" data-text="private final val potionBrewing: PotionBrewing;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">potionBrewing</span>: <span class="type-link" data-type="net.minecraft.world.item.alchemy.PotionBrewing">PotionBrewing</span>;</div></div>
<div class="line" data-text="@Volatileprivate val isSaving: Boolean;" style="opacity: 0;"><div style="padding-left: 2em"><span class="annotation">@Volatile</span></div><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">isSaving</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>;</div></div>
<div class="line" data-text="private fun readScoreboard(arg0: DimensionDataStorage): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">readScoreboard</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.world.level.storage.DimensionDataStorage">DimensionDataStorage</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="protected abstract fun initServer(): Boolean;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">protected</span> <span class="kw">abstract</span> <span class="kw">fun</span> <span class="method-name">initServer</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span>;</div></div>
<div class="line" data-text="protected fun loadLevel(): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">protected</span> <span class="kw">fun</span> <span class="method-name">loadLevel</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="protected fun forceDifficulty(): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">protected</span> <span class="kw">fun</span> <span class="method-name">forceDifficulty</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="protected fun createLevels(arg0: ChunkProgressListener): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">protected</span> <span class="kw">fun</span> <span class="method-name">createLevels</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.server.level.progress.ChunkProgressListener">ChunkProgressListener</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="private fun setupDebugLevel(arg0: WorldData): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">setupDebugLevel</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.world.level.storage.WorldData">WorldData</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="private fun prepareLevels(arg0: ChunkProgressListener): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">prepareLevels</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.server.level.progress.ChunkProgressListener">ChunkProgressListener</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun getDefaultGameType(): GameType {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getDefaultGameType</span>(): <span class="type-link" data-type="net.minecraft.world.level.GameType">GameType</span> {};</div></div>
<div class="line" data-text="fun isHardcore(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">isHardcore</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="abstract fun getOperatorUserPermissionLevel(): Int;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">abstract</span> <span class="kw">fun</span> <span class="method-name">getOperatorUserPermissionLevel</span>(): <span class="type-link" data-type="kotlin.Int">Int</span>;</div></div>
<div class="line" data-text="abstract fun getFunctionCompilationLevel(): Int;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">abstract</span> <span class="kw">fun</span> <span class="method-name">getFunctionCompilationLevel</span>(): <span class="type-link" data-type="kotlin.Int">Int</span>;</div></div>
<div class="line" data-text="abstract fun shouldRconBroadcast(): Boolean;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">abstract</span> <span class="kw">fun</span> <span class="method-name">shouldRconBroadcast</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span>;</div></div>
<div class="line" data-text="fun saveAllChunks(arg0: Boolean, arg1: Boolean, arg2: Boolean): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">saveAllChunks</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun saveEverything(arg0: Boolean, arg1: Boolean, arg2: Boolean): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">saveEverything</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun close(): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">close</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun stopServer(): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">stopServer</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun getLocalIp(): String {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getLocalIp</span>(): <span class="type-link" data-type="java.lang.String">String</span> {};</div></div>
<div class="line" data-text="fun setLocalIp(arg0: String): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">setLocalIp</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.String">String</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun isRunning(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">isRunning</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun halt(arg0: Boolean): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">halt</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="protected fun runServer(): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">protected</span> <span class="kw">fun</span> <span class="method-name">runServer</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="private fun logFullTickTime(): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">logFullTickTime</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="private fun startMeasuringTaskExecutionTime(): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">startMeasuringTaskExecutionTime</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="private fun finishMeasuringTaskExecutionTime(): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">finishMeasuringTaskExecutionTime</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="private fun haveTime(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">haveTime</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun managedBlock(arg0: BooleanSupplier): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">managedBlock</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.function.BooleanSupplier">BooleanSupplier</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="protected fun waitUntilNextTick(): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">protected</span> <span class="kw">fun</span> <span class="method-name">waitUntilNextTick</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun waitForTasks(): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">waitForTasks</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun wrapRunnable(arg0: Runnable): Runnable {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">wrapRunnable</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.Runnable">Runnable</span>): <span class="type-link" data-type="java.lang.Runnable">Runnable</span> {};</div></div>
<div class="line" data-text="protected fun shouldRun(arg0: TickTask): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">protected</span> <span class="kw">fun</span> <span class="method-name">shouldRun</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.server.TickTask">TickTask</span>): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun pollTask(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">pollTask</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="private fun pollTaskInternal(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">pollTaskInternal</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="protected fun doRunTask(arg0: TickTask): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">protected</span> <span class="kw">fun</span> <span class="method-name">doRunTask</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.server.TickTask">TickTask</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="private fun loadStatusIcon(): Optional<ServerStatus$Favicon> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">loadStatusIcon</span>(): <span class="type-link" data-type="java.util.Optional">Optional</span>&lt;<span class="type-link" data-type="net.minecraft.network.protocol.status.ServerStatus$Favicon">ServerStatus$Favicon</span>&gt; {};</div></div>
<div class="line" data-text="fun getWorldScreenshotFile(): Optional<Path> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getWorldScreenshotFile</span>(): <span class="type-link" data-type="java.util.Optional">Optional</span>&lt;<span class="type-link" data-type="java.nio.file.Path">Path</span>&gt; {};</div></div>
<div class="line" data-text="fun getServerDirectory(): Path {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getServerDirectory</span>(): <span class="type-link" data-type="java.nio.file.Path">Path</span> {};</div></div>
<div class="line" data-text="fun onServerCrash(arg0: CrashReport): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">onServerCrash</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.CrashReport">CrashReport</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun onServerExit(): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">onServerExit</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun isPaused(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">isPaused</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun tickServer(arg0: BooleanSupplier): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">tickServer</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.function.BooleanSupplier">BooleanSupplier</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="private fun logTickMethodTime(arg0: Long): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">logTickMethodTime</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Long">Long</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="private fun computeNextAutosaveInterval(): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">computeNextAutosaveInterval</span>(): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun onTickRateChanged(): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">onTickRateChanged</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="protected abstract fun getTickTimeLogger(): SampleLogger;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">protected</span> <span class="kw">abstract</span> <span class="kw">fun</span> <span class="method-name">getTickTimeLogger</span>(): <span class="type-link" data-type="net.minecraft.util.debugchart.SampleLogger">SampleLogger</span>;</div></div>
<div class="line" data-text="abstract fun isTickTimeLoggingEnabled(): Boolean;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">abstract</span> <span class="kw">fun</span> <span class="method-name">isTickTimeLoggingEnabled</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span>;</div></div>
<div class="line" data-text="private fun buildServerStatus(): ServerStatus {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">buildServerStatus</span>(): <span class="type-link" data-type="net.minecraft.network.protocol.status.ServerStatus">ServerStatus</span> {};</div></div>
<div class="line" data-text="private fun buildPlayerStatus(): ServerStatus$Players {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">buildPlayerStatus</span>(): <span class="type-link" data-type="net.minecraft.network.protocol.status.ServerStatus$Players">ServerStatus$Players</span> {};</div></div>
<div class="line" data-text="fun tickChildren(arg0: BooleanSupplier): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">tickChildren</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.function.BooleanSupplier">BooleanSupplier</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="private fun synchronizeTime(arg0: ServerLevel): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">synchronizeTime</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.server.level.ServerLevel">ServerLevel</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun forceTimeSynchronization(): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">forceTimeSynchronization</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun isLevelEnabled(arg0: Level): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">isLevelEnabled</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.world.level.Level">Level</span>): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun addTickable(arg0: Runnable): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">addTickable</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.Runnable">Runnable</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="protected fun setId(arg0: String): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">protected</span> <span class="kw">fun</span> <span class="method-name">setId</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.String">String</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun isShutdown(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">isShutdown</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun getFile(arg0: String): Path {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getFile</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.String">String</span>): <span class="type-link" data-type="java.nio.file.Path">Path</span> {};</div></div>
<div class="line" data-text="final fun overworld(): ServerLevel {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">final</span> <span class="kw">fun</span> <span class="method-name">overworld</span>(): <span class="type-link" data-type="net.minecraft.server.level.ServerLevel">ServerLevel</span> {};</div></div>
<div class="line" data-text="fun getLevel(arg0: ResourceKey<Level>): ServerLevel {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getLevel</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.resources.ResourceKey">ResourceKey</span>&lt;<span class="type-link" data-type="net.minecraft.world.level.Level">Level</span>&gt;): <span class="type-link" data-type="net.minecraft.server.level.ServerLevel">ServerLevel</span> {};</div></div>
<div class="line" data-text="fun levelKeys(): Set<ResourceKey<Level>> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">levelKeys</span>(): <span class="type-link" data-type="java.util.Set">Set</span>&lt;<span class="type-link" data-type="net.minecraft.resources.ResourceKey">ResourceKey</span>&lt;<span class="type-link" data-type="net.minecraft.world.level.Level">Level</span>&gt;&gt; {};</div></div>
<div class="line" data-text="fun getAllLevels(): Iterable<ServerLevel> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getAllLevels</span>(): <span class="type-link" data-type="java.lang.Iterable">Iterable</span>&lt;<span class="type-link" data-type="net.minecraft.server.level.ServerLevel">ServerLevel</span>&gt; {};</div></div>
<div class="line" data-text="fun getServerVersion(): String {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getServerVersion</span>(): <span class="type-link" data-type="java.lang.String">String</span> {};</div></div>
<div class="line" data-text="fun getPlayerCount(): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getPlayerCount</span>(): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun getMaxPlayers(): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getMaxPlayers</span>(): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun getPlayerNames(): String[] {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getPlayerNames</span>(): <span class="type-link" data-type="java.lang.String">String</span>[] {};</div></div>
<div class="line" data-text="fun getServerModName(): String {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getServerModName</span>(): <span class="type-link" data-type="java.lang.String">String</span> {};</div></div>
<div class="line" data-text="fun fillSystemReport(arg0: SystemReport): SystemReport {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">fillSystemReport</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.SystemReport">SystemReport</span>): <span class="type-link" data-type="net.minecraft.SystemReport">SystemReport</span> {};</div></div>
<div class="line" data-text="abstract fun fillServerSystemReport(arg0: SystemReport): SystemReport;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">abstract</span> <span class="kw">fun</span> <span class="method-name">fillServerSystemReport</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.SystemReport">SystemReport</span>): <span class="type-link" data-type="net.minecraft.SystemReport">SystemReport</span>;</div></div>
<div class="line" data-text="fun getModdedStatus(): ModCheck {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getModdedStatus</span>(): <span class="type-link" data-type="net.minecraft.util.ModCheck">ModCheck</span> {};</div></div>
<div class="line" data-text="fun sendSystemMessage(arg0: Component): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">sendSystemMessage</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.network.chat.Component">Component</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun getKeyPair(): KeyPair {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getKeyPair</span>(): <span class="type-link" data-type="java.security.KeyPair">KeyPair</span> {};</div></div>
<div class="line" data-text="fun getPort(): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getPort</span>(): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun setPort(arg0: Int): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">setPort</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun getSingleplayerProfile(): GameProfile {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getSingleplayerProfile</span>(): <span class="type-link" data-type="com.mojang.authlib.GameProfile">GameProfile</span> {};</div></div>
<div class="line" data-text="fun setSingleplayerProfile(arg0: GameProfile): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">setSingleplayerProfile</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="com.mojang.authlib.GameProfile">GameProfile</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun isSingleplayer(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">isSingleplayer</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="protected fun initializeKeyPair(): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">protected</span> <span class="kw">fun</span> <span class="method-name">initializeKeyPair</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun setDifficulty(arg0: Boolean, arg1: Difficulty): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">setDifficulty</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.world.Difficulty">Difficulty</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun getScaledTrackingDistance(arg0: Int): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getScaledTrackingDistance</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="private fun updateMobSpawningFlags(): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">updateMobSpawningFlags</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun setDifficultyLocked(arg0: Boolean): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">setDifficultyLocked</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="private fun sendDifficultyUpdate(arg0: ServerPlayer): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">sendDifficultyUpdate</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.server.level.ServerPlayer">ServerPlayer</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun isSpawningMonsters(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">isSpawningMonsters</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun isDemo(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">isDemo</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun setDemo(arg0: Boolean): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">setDemo</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun getServerResourcePack(): Optional<MinecraftServer$ServerResourcePackInfo> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getServerResourcePack</span>(): <span class="type-link" data-type="java.util.Optional">Optional</span>&lt;<span class="type-link" data-type="net.minecraft.server.MinecraftServer$ServerResourcePackInfo">MinecraftServer$ServerResourcePackInfo</span>&gt; {};</div></div>
<div class="line" data-text="fun isResourcePackRequired(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">isResourcePackRequired</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="abstract fun isDedicatedServer(): Boolean;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">abstract</span> <span class="kw">fun</span> <span class="method-name">isDedicatedServer</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span>;</div></div>
<div class="line" data-text="abstract fun getRateLimitPacketsPerSecond(): Int;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">abstract</span> <span class="kw">fun</span> <span class="method-name">getRateLimitPacketsPerSecond</span>(): <span class="type-link" data-type="kotlin.Int">Int</span>;</div></div>
<div class="line" data-text="fun usesAuthentication(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">usesAuthentication</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun setUsesAuthentication(arg0: Boolean): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">setUsesAuthentication</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun getPreventProxyConnections(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getPreventProxyConnections</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun setPreventProxyConnections(arg0: Boolean): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">setPreventProxyConnections</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun isSpawningAnimals(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">isSpawningAnimals</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun areNpcsEnabled(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">areNpcsEnabled</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="abstract fun isEpollEnabled(): Boolean;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">abstract</span> <span class="kw">fun</span> <span class="method-name">isEpollEnabled</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span>;</div></div>
<div class="line" data-text="fun isPvpAllowed(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">isPvpAllowed</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun setPvpAllowed(arg0: Boolean): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">setPvpAllowed</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun isFlightAllowed(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">isFlightAllowed</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun setFlightAllowed(arg0: Boolean): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">setFlightAllowed</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="abstract fun isCommandBlockEnabled(): Boolean;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">abstract</span> <span class="kw">fun</span> <span class="method-name">isCommandBlockEnabled</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span>;</div></div>
<div class="line" data-text="fun getMotd(): String {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getMotd</span>(): <span class="type-link" data-type="java.lang.String">String</span> {};</div></div>
<div class="line" data-text="fun setMotd(arg0: String): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">setMotd</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.String">String</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun isStopped(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">isStopped</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun getPlayerList(): PlayerList {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getPlayerList</span>(): <span class="type-link" data-type="net.minecraft.server.players.PlayerList">PlayerList</span> {};</div></div>
<div class="line" data-text="fun setPlayerList(arg0: PlayerList): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">setPlayerList</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.server.players.PlayerList">PlayerList</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="abstract fun isPublished(): Boolean;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">abstract</span> <span class="kw">fun</span> <span class="method-name">isPublished</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span>;</div></div>
<div class="line" data-text="fun setDefaultGameType(arg0: GameType): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">setDefaultGameType</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.world.level.GameType">GameType</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun getConnection(): ServerConnectionListener {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getConnection</span>(): <span class="type-link" data-type="net.minecraft.server.network.ServerConnectionListener">ServerConnectionListener</span> {};</div></div>
<div class="line" data-text="fun isReady(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">isReady</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun hasGui(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">hasGui</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun publishServer(arg0: Boolean, arg1: Int, arg2: GameType): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">publishServer</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="kotlin.Int">Int</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.world.level.GameType">GameType</span>): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun getTickCount(): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getTickCount</span>(): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun getSpawnProtectionRadius(): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getSpawnProtectionRadius</span>(): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun isUnderSpawnProtection(arg0: BlockPos, arg1: ServerLevel, arg2: Player): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">isUnderSpawnProtection</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.core.BlockPos">BlockPos</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.server.level.ServerLevel">ServerLevel</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.world.entity.player.Player">Player</span>): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun repliesToStatus(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">repliesToStatus</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun hidesOnlinePlayers(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">hidesOnlinePlayers</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun getProxy(): Proxy {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getProxy</span>(): <span class="type-link" data-type="java.net.Proxy">Proxy</span> {};</div></div>
<div class="line" data-text="fun getPlayerIdleTimeout(): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getPlayerIdleTimeout</span>(): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun setPlayerIdleTimeout(arg0: Int): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">setPlayerIdleTimeout</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun getSessionService(): MinecraftSessionService {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getSessionService</span>(): <span class="type-link" data-type="com.mojang.authlib.minecraft.MinecraftSessionService">MinecraftSessionService</span> {};</div></div>
<div class="line" data-text="fun getProfileKeySignatureValidator(): SignatureValidator {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getProfileKeySignatureValidator</span>(): <span class="type-link" data-type="net.minecraft.util.SignatureValidator">SignatureValidator</span> {};</div></div>
<div class="line" data-text="fun getProfileRepository(): GameProfileRepository {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getProfileRepository</span>(): <span class="type-link" data-type="com.mojang.authlib.GameProfileRepository">GameProfileRepository</span> {};</div></div>
<div class="line" data-text="fun getProfileCache(): GameProfileCache {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getProfileCache</span>(): <span class="type-link" data-type="net.minecraft.server.players.GameProfileCache">GameProfileCache</span> {};</div></div>
<div class="line" data-text="fun getStatus(): ServerStatus {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getStatus</span>(): <span class="type-link" data-type="net.minecraft.network.protocol.status.ServerStatus">ServerStatus</span> {};</div></div>
<div class="line" data-text="fun invalidateStatus(): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">invalidateStatus</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun getAbsoluteMaxWorldSize(): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getAbsoluteMaxWorldSize</span>(): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun scheduleExecutables(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">scheduleExecutables</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun executeIfPossible(arg0: Runnable): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">executeIfPossible</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.Runnable">Runnable</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun getRunningThread(): Thread {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getRunningThread</span>(): <span class="type-link" data-type="java.lang.Thread">Thread</span> {};</div></div>
<div class="line" data-text="fun getCompressionThreshold(): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getCompressionThreshold</span>(): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun enforceSecureProfile(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">enforceSecureProfile</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun getNextTickTime(): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getNextTickTime</span>(): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="fun getFixerUpper(): DataFixer {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getFixerUpper</span>(): <span class="type-link" data-type="com.mojang.datafixers.DataFixer">DataFixer</span> {};</div></div>
<div class="line" data-text="fun getSpawnRadius(arg0: ServerLevel): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getSpawnRadius</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.server.level.ServerLevel">ServerLevel</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun getAdvancements(): ServerAdvancementManager {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getAdvancements</span>(): <span class="type-link" data-type="net.minecraft.server.ServerAdvancementManager">ServerAdvancementManager</span> {};</div></div>
<div class="line" data-text="fun getFunctions(): ServerFunctionManager {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getFunctions</span>(): <span class="type-link" data-type="net.minecraft.server.ServerFunctionManager">ServerFunctionManager</span> {};</div></div>
<div class="line" data-text="fun reloadResources(arg0: Collection<String>): CompletableFuture<Void> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">reloadResources</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.Collection">Collection</span>&lt;<span class="type-link" data-type="java.lang.String">String</span>&gt;): <span class="type-link" data-type="java.util.concurrent.CompletableFuture">CompletableFuture</span>&lt;<span class="type-link" data-type="java.lang.Void">Void</span>&gt; {};</div></div>
<div class="line" data-text="fun kickUnlistedPlayers(arg0: CommandSourceStack): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">kickUnlistedPlayers</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.commands.CommandSourceStack">CommandSourceStack</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun getPackRepository(): PackRepository {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getPackRepository</span>(): <span class="type-link" data-type="net.minecraft.server.packs.repository.PackRepository">PackRepository</span> {};</div></div>
<div class="line" data-text="fun getCommands(): Commands {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getCommands</span>(): <span class="type-link" data-type="net.minecraft.commands.Commands">Commands</span> {};</div></div>
<div class="line" data-text="fun createCommandSourceStack(): CommandSourceStack {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">createCommandSourceStack</span>(): <span class="type-link" data-type="net.minecraft.commands.CommandSourceStack">CommandSourceStack</span> {};</div></div>
<div class="line" data-text="fun acceptsSuccess(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">acceptsSuccess</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun acceptsFailure(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">acceptsFailure</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="abstract fun shouldInformAdmins(): Boolean;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">abstract</span> <span class="kw">fun</span> <span class="method-name">shouldInformAdmins</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span>;</div></div>
<div class="line" data-text="fun getRecipeManager(): RecipeManager {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getRecipeManager</span>(): <span class="type-link" data-type="net.minecraft.world.item.crafting.RecipeManager">RecipeManager</span> {};</div></div>
<div class="line" data-text="fun getScoreboard(): ServerScoreboard {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getScoreboard</span>(): <span class="type-link" data-type="net.minecraft.server.ServerScoreboard">ServerScoreboard</span> {};</div></div>
<div class="line" data-text="fun getCommandStorage(): CommandStorage {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getCommandStorage</span>(): <span class="type-link" data-type="net.minecraft.world.level.storage.CommandStorage">CommandStorage</span> {};</div></div>
<div class="line" data-text="fun getGameRules(): GameRules {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getGameRules</span>(): <span class="type-link" data-type="net.minecraft.world.level.GameRules">GameRules</span> {};</div></div>
<div class="line" data-text="fun getCustomBossEvents(): CustomBossEvents {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getCustomBossEvents</span>(): <span class="type-link" data-type="net.minecraft.server.bossevents.CustomBossEvents">CustomBossEvents</span> {};</div></div>
<div class="line" data-text="fun isEnforceWhitelist(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">isEnforceWhitelist</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun setEnforceWhitelist(arg0: Boolean): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">setEnforceWhitelist</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun getCurrentSmoothedTickTime(): Float {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getCurrentSmoothedTickTime</span>(): <span class="type-link" data-type="kotlin.Float">Float</span> {};</div></div>
<div class="line" data-text="fun tickRateManager(): ServerTickRateManager {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">tickRateManager</span>(): <span class="type-link" data-type="net.minecraft.server.ServerTickRateManager">ServerTickRateManager</span> {};</div></div>
<div class="line" data-text="fun getAverageTickTimeNanos(): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getAverageTickTimeNanos</span>(): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="fun getTickTimesNanos(): long[] {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getTickTimesNanos</span>(): <span class="type-link" data-type="long">long</span>[] {};</div></div>
<div class="line" data-text="fun getProfilePermissions(arg0: GameProfile): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getProfilePermissions</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="com.mojang.authlib.GameProfile">GameProfile</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun getProfiler(): ProfilerFiller {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getProfiler</span>(): <span class="type-link" data-type="net.minecraft.util.profiling.ProfilerFiller">ProfilerFiller</span> {};</div></div>
<div class="line" data-text="abstract fun isSingleplayerOwner(arg0: GameProfile): Boolean;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">abstract</span> <span class="kw">fun</span> <span class="method-name">isSingleplayerOwner</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="com.mojang.authlib.GameProfile">GameProfile</span>): <span class="type-link" data-type="kotlin.Boolean">Boolean</span>;</div></div>
<div class="line" data-text="fun dumpServerProperties(arg0: Path): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">dumpServerProperties</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.nio.file.Path">Path</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="private fun saveDebugReport(arg0: Path): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">saveDebugReport</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.nio.file.Path">Path</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="private fun dumpMiscStats(arg0: Path): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">dumpMiscStats</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.nio.file.Path">Path</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="private fun dumpGameRules(arg0: Path): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">dumpGameRules</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.nio.file.Path">Path</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="private fun dumpClasspath(arg0: Path): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">dumpClasspath</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.nio.file.Path">Path</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="private fun dumpThreads(arg0: Path): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">dumpThreads</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.nio.file.Path">Path</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="private fun dumpNativeModules(arg0: Path): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">dumpNativeModules</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.nio.file.Path">Path</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="private fun startMetricsRecordingTick(): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">startMetricsRecordingTick</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun endMetricsRecordingTick(): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">endMetricsRecordingTick</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun isRecordingMetrics(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">isRecordingMetrics</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun startRecordingMetrics(arg0: Consumer<Path>, arg1: Consumer<ProfileResults>): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">startRecordingMetrics</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.function.Consumer">Consumer</span>&lt;<span class="type-link" data-type="java.nio.file.Path">Path</span>&gt;, <span class="arg-name">arg1</span>: <span class="type-link" data-type="java.util.function.Consumer">Consumer</span>&lt;<span class="type-link" data-type="net.minecraft.util.profiling.ProfileResults">ProfileResults</span>&gt;): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun stopRecordingMetrics(): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">stopRecordingMetrics</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun finishRecordingMetrics(): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">finishRecordingMetrics</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun cancelRecordingMetrics(): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">cancelRecordingMetrics</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun getWorldPath(arg0: LevelResource): Path {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getWorldPath</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.world.level.storage.LevelResource">LevelResource</span>): <span class="type-link" data-type="java.nio.file.Path">Path</span> {};</div></div>
<div class="line" data-text="fun forceSynchronousWrites(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">forceSynchronousWrites</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun getStructureManager(): StructureTemplateManager {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getStructureManager</span>(): <span class="type-link" data-type="net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplateManager">StructureTemplateManager</span> {};</div></div>
<div class="line" data-text="fun getWorldData(): WorldData {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getWorldData</span>(): <span class="type-link" data-type="net.minecraft.world.level.storage.WorldData">WorldData</span> {};</div></div>
<div class="line" data-text="fun registryAccess(): RegistryAccess$Frozen {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">registryAccess</span>(): <span class="type-link" data-type="net.minecraft.core.RegistryAccess$Frozen">RegistryAccess$Frozen</span> {};</div></div>
<div class="line" data-text="fun registries(): LayeredRegistryAccess<RegistryLayer> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">registries</span>(): <span class="type-link" data-type="net.minecraft.core.LayeredRegistryAccess">LayeredRegistryAccess</span>&lt;<span class="type-link" data-type="net.minecraft.server.RegistryLayer">RegistryLayer</span>&gt; {};</div></div>
<div class="line" data-text="fun reloadableRegistries(): ReloadableServerRegistries$Holder {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">reloadableRegistries</span>(): <span class="type-link" data-type="net.minecraft.server.ReloadableServerRegistries$Holder">ReloadableServerRegistries$Holder</span> {};</div></div>
<div class="line" data-text="fun createTextFilterForPlayer(arg0: ServerPlayer): TextFilter {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">createTextFilterForPlayer</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.server.level.ServerPlayer">ServerPlayer</span>): <span class="type-link" data-type="net.minecraft.server.network.TextFilter">TextFilter</span> {};</div></div>
<div class="line" data-text="fun createGameModeForPlayer(arg0: ServerPlayer): ServerPlayerGameMode {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">createGameModeForPlayer</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.server.level.ServerPlayer">ServerPlayer</span>): <span class="type-link" data-type="net.minecraft.server.level.ServerPlayerGameMode">ServerPlayerGameMode</span> {};</div></div>
<div class="line" data-text="fun getForcedGameType(): GameType {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getForcedGameType</span>(): <span class="type-link" data-type="net.minecraft.world.level.GameType">GameType</span> {};</div></div>
<div class="line" data-text="fun getResourceManager(): ResourceManager {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getResourceManager</span>(): <span class="type-link" data-type="net.minecraft.server.packs.resources.ResourceManager">ResourceManager</span> {};</div></div>
<div class="line" data-text="fun isCurrentlySaving(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">isCurrentlySaving</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun isTimeProfilerRunning(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">isTimeProfilerRunning</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun startTimeProfiler(): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">startTimeProfiler</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun stopTimeProfiler(): ProfileResults {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">stopTimeProfiler</span>(): <span class="type-link" data-type="net.minecraft.util.profiling.ProfileResults">ProfileResults</span> {};</div></div>
<div class="line" data-text="fun getMaxChainedNeighborUpdates(): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getMaxChainedNeighborUpdates</span>(): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun logChatMessage(arg0: String, arg1: ChatType$Bound, arg2: Component): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">logChatMessage</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.String">String</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.network.chat.ChatType$Bound">ChatType$Bound</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.network.chat.Component">Component</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun getChatDecorator(): ChatDecorator {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getChatDecorator</span>(): <span class="type-link" data-type="net.minecraft.network.chat.ChatDecorator">ChatDecorator</span> {};</div></div>
<div class="line" data-text="fun logIPs(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">logIPs</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun subscribeToDebugSample(arg0: ServerPlayer, arg1: RemoteDebugSampleType): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">subscribeToDebugSample</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.server.level.ServerPlayer">ServerPlayer</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.util.debugchart.RemoteDebugSampleType">RemoteDebugSampleType</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun acceptsTransfers(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">acceptsTransfers</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="private fun storeChunkIoError(arg0: CrashReport, arg1: ChunkPos, arg2: RegionStorageInfo): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">storeChunkIoError</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.CrashReport">CrashReport</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.world.level.ChunkPos">ChunkPos</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.world.level.chunk.storage.RegionStorageInfo">RegionStorageInfo</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun reportChunkLoadFailure(arg0: Throwable, arg1: ChunkPos, arg2: RegionStorageInfo): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">reportChunkLoadFailure</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.Throwable">Throwable</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.world.level.ChunkPos">ChunkPos</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.world.level.chunk.storage.RegionStorageInfo">RegionStorageInfo</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun reportChunkSaveFailure(arg0: Throwable, arg1: ChunkPos, arg2: RegionStorageInfo): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">reportChunkSaveFailure</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.Throwable">Throwable</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.world.level.ChunkPos">ChunkPos</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.world.level.chunk.storage.RegionStorageInfo">RegionStorageInfo</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun potionBrewing(): PotionBrewing {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">potionBrewing</span>(): <span class="type-link" data-type="net.minecraft.world.item.alchemy.PotionBrewing">PotionBrewing</span> {};</div></div>
<div class="line" data-text="fun serverLinks(): ServerLinks {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">serverLinks</span>(): <span class="type-link" data-type="net.minecraft.server.ServerLinks">ServerLinks</span> {};</div></div>
<div class="line" data-text="fun doRunTask(arg0: Runnable): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">doRunTask</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.Runnable">Runnable</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun shouldRun(arg0: Runnable): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">shouldRun</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.Runnable">Runnable</span>): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="private fun method_61088(arg0: CrashReport, arg1: ChunkPos, arg2: RegionStorageInfo): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_61088</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.CrashReport">CrashReport</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.world.level.ChunkPos">ChunkPos</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.world.level.chunk.storage.RegionStorageInfo">RegionStorageInfo</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="private fun method_37319(arg0: Consumer, arg1: ProfileResults): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_37319</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.function.Consumer">Consumer</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.util.profiling.ProfileResults">ProfileResults</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="private fun method_37370(arg0: Path): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_37370</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.nio.file.Path">Path</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="private fun method_37328(arg0: Path): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_37328</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.nio.file.Path">Path</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="private fun method_29440(arg0: Collection, arg1: MinecraftServer$ReloadableResources): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_29440</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.Collection">Collection</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.server.MinecraftServer$ReloadableResources">MinecraftServer$ReloadableResources</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="private fun method_29437(arg0: ImmutableList): CompletionStage {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_29437</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="com.google.common.collect.ImmutableList">ImmutableList</span>): <span class="type-link" data-type="java.util.concurrent.CompletionStage">CompletionStage</span> {};</div></div>
<div class="line" data-text="private fun method_29442(arg0: Collection): ImmutableList {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_29442</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.Collection">Collection</span>): <span class="type-link" data-type="com.google.common.collect.ImmutableList">ImmutableList</span> {};</div></div>
<div class="line" data-text="private fun method_37325(): String {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_37325</span>(): <span class="type-link" data-type="java.lang.String">String</span> {};</div></div>
<div class="line" data-text="private fun method_57961(): String {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_57961</span>(): <span class="type-link" data-type="java.lang.String">String</span> {};</div></div>
<div class="line" data-text="private fun method_41237(): String {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_41237</span>(): <span class="type-link" data-type="java.lang.String">String</span> {};</div></div>
<div class="line" data-text="private fun method_46222(): String {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_46222</span>(): <span class="type-link" data-type="java.lang.String">String</span> {};</div></div>
<div class="line" data-text="private fun method_59849(): String {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_59849</span>(): <span class="type-link" data-type="java.lang.String">String</span> {};</div></div>
<div class="line" data-text="private fun method_46223(): String {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_46223</span>(): <span class="type-link" data-type="java.lang.String">String</span> {};</div></div>
<div class="line" data-text="private fun method_37327(): String {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_37327</span>(): <span class="type-link" data-type="java.lang.String">String</span> {};</div></div>
<div class="line" data-text="private fun method_39965(): String {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_39965</span>(): <span class="type-link" data-type="java.lang.String">String</span> {};</div></div>
<div class="line" data-text="private fun method_49383(): Optional {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_49383</span>(): <span class="type-link" data-type="java.util.Optional">Optional</span> {};</div></div>
<div class="line" data-text="private fun method_5387(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_5387</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="private fun method_37318(arg0: ProfileResults): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_37318</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.util.profiling.ProfileResults">ProfileResults</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun reportMisplacedChunk(arg0: ChunkPos, arg1: ChunkPos, arg2: RegionStorageInfo): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">reportMisplacedChunk</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.world.level.ChunkPos">ChunkPos</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.world.level.ChunkPos">ChunkPos</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.world.level.chunk.storage.RegionStorageInfo">RegionStorageInfo</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun alwaysAccepts(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">alwaysAccepts</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="abstract fun profiledMetrics(): List<MetricSampler>;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">abstract</span> <span class="kw">fun</span> <span class="method-name">profiledMetrics</span>(): <span class="type-link" data-type="java.util.List">List</span>&lt;<span class="type-link" data-type="net.minecraft.util.profiling.metrics.MetricSampler">MetricSampler</span>&gt;;</div></div>
<div class="line" data-text="abstract fun name(): String;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">abstract</span> <span class="kw">fun</span> <span class="method-name">name</span>(): <span class="type-link" data-type="java.lang.String">String</span>;</div></div>
<div class="line" data-text="abstract fun tell(arg0: Msg): Unit;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">abstract</span> <span class="kw">fun</span> <span class="method-name">tell</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="Msg">Msg</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span>;</div></div>
<div class="line" data-text="fun ask(arg0: Function<ProcessorHandle<Source>, out Msg>): CompletableFuture<Source> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">ask</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="type-link" data-type="in net.minecraft.util.thread.ProcessorHandle">ProcessorHandle</span>&lt;<span class="type-link" data-type="Source">Source</span>&gt;, <span class="kw">out</span> <span class="type-link" data-type="Msg">Msg</span>&gt;): <span class="type-link" data-type="java.util.concurrent.CompletableFuture">CompletableFuture</span>&lt;<span class="type-link" data-type="Source">Source</span>&gt; {};</div></div>
<div class="line" data-text="fun askEither(arg0: Function<ProcessorHandle<Either<Source, Exception>>, out Msg>): CompletableFuture<Source> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">askEither</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="type-link" data-type="in net.minecraft.util.thread.ProcessorHandle">ProcessorHandle</span>&lt;<span class="type-link" data-type="com.mojang.datafixers.util.Either">Either</span>&lt;<span class="type-link" data-type="Source">Source</span>, <span class="type-link" data-type="java.lang.Exception">Exception</span>&gt;&gt;, <span class="kw">out</span> <span class="type-link" data-type="Msg">Msg</span>&gt;): <span class="type-link" data-type="java.util.concurrent.CompletableFuture">CompletableFuture</span>&lt;<span class="type-link" data-type="Source">Source</span>&gt; {};</div></div>
<div class="line" data-text="abstract fun execute(arg0: Runnable): Unit;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">abstract</span> <span class="kw">fun</span> <span class="method-name">execute</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.Runnable">Runnable</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span>;</div></div>
<div class="line" data-text="protected fun runningTask(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">protected</span> <span class="kw">fun</span> <span class="method-name">runningTask</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun isSameThread(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">isSameThread</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun getPendingTasksCount(): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getPendingTasksCount</span>(): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun submit(arg0: Supplier<V>): CompletableFuture<V> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">submit</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.function.Supplier">Supplier</span>&lt;<span class="ident">V</span>&gt;): <span class="type-link" data-type="java.util.concurrent.CompletableFuture">CompletableFuture</span>&lt;<span class="ident">V</span>&gt; {};</div></div>
<div class="line" data-text="private fun submitAsync(arg0: Runnable): CompletableFuture<Void> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">submitAsync</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.Runnable">Runnable</span>): <span class="type-link" data-type="java.util.concurrent.CompletableFuture">CompletableFuture</span>&lt;<span class="type-link" data-type="java.lang.Void">Void</span>&gt; {};</div></div>
<div class="line" data-text="fun submit(arg0: Runnable): CompletableFuture<Void> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">submit</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.Runnable">Runnable</span>): <span class="type-link" data-type="java.util.concurrent.CompletableFuture">CompletableFuture</span>&lt;<span class="type-link" data-type="java.lang.Void">Void</span>&gt; {};</div></div>
<div class="line" data-text="fun executeBlocking(arg0: Runnable): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">executeBlocking</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.Runnable">Runnable</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun tell(arg0: R): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">tell</span>(<span class="arg-name">arg0</span>: <span class="ident">R</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="protected fun dropAllTasks(): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">protected</span> <span class="kw">fun</span> <span class="method-name">dropAllTasks</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="protected fun runAllTasks(): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">protected</span> <span class="kw">fun</span> <span class="method-name">runAllTasks</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="companion object {" style="opacity: 0;"><br><div style="padding-left: 2em"><span class="kw">companion object</span> {</div></div>
<div class="line" data-text="@JvmStaticprivate final val LOGGER: Logger;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">LOGGER</span>: <span class="type-link" data-type="org.slf4j.Logger">Logger</span>;</div></div>
<div class="line" data-text="@JvmStaticfinal val VANILLA_BRAND: String;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">final</span> <span class="kw">val</span> <span class="ident">VANILLA_BRAND</span>: <span class="type-link" data-type="java.lang.String">String</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val AVERAGE_TICK_TIME_SMOOTHING: Float;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">AVERAGE_TICK_TIME_SMOOTHING</span>: <span class="type-link" data-type="kotlin.Float">Float</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val TICK_STATS_SPAN: Int;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">TICK_STATS_SPAN</span>: <span class="type-link" data-type="kotlin.Int">Int</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val OVERLOADED_THRESHOLD_NANOS: Long;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">OVERLOADED_THRESHOLD_NANOS</span>: <span class="type-link" data-type="kotlin.Long">Long</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val OVERLOADED_TICKS_THRESHOLD: Int;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">OVERLOADED_TICKS_THRESHOLD</span>: <span class="type-link" data-type="kotlin.Int">Int</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val OVERLOADED_WARNING_INTERVAL_NANOS: Long;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">OVERLOADED_WARNING_INTERVAL_NANOS</span>: <span class="type-link" data-type="kotlin.Long">Long</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val OVERLOADED_TICKS_WARNING_INTERVAL: Int;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">OVERLOADED_TICKS_WARNING_INTERVAL</span>: <span class="type-link" data-type="kotlin.Int">Int</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val STATUS_EXPIRE_TIME_NANOS: Long;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">STATUS_EXPIRE_TIME_NANOS</span>: <span class="type-link" data-type="kotlin.Long">Long</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val PREPARE_LEVELS_DEFAULT_DELAY_NANOS: Long;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">PREPARE_LEVELS_DEFAULT_DELAY_NANOS</span>: <span class="type-link" data-type="kotlin.Long">Long</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val MAX_STATUS_PLAYER_SAMPLE: Int;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">MAX_STATUS_PLAYER_SAMPLE</span>: <span class="type-link" data-type="kotlin.Int">Int</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val SPAWN_POSITION_SEARCH_RADIUS: Int;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">SPAWN_POSITION_SEARCH_RADIUS</span>: <span class="type-link" data-type="kotlin.Int">Int</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val AUTOSAVE_INTERVAL: Int;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">AUTOSAVE_INTERVAL</span>: <span class="type-link" data-type="kotlin.Int">Int</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val MIMINUM_AUTOSAVE_TICKS: Int;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">MIMINUM_AUTOSAVE_TICKS</span>: <span class="type-link" data-type="kotlin.Int">Int</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val MAX_TICK_LATENCY: Int;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">MAX_TICK_LATENCY</span>: <span class="type-link" data-type="kotlin.Int">Int</span>;</div></div>
<div class="line" data-text="@JvmStaticfinal val ABSOLUTE_MAX_WORLD_SIZE: Int;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">final</span> <span class="kw">val</span> <span class="ident">ABSOLUTE_MAX_WORLD_SIZE</span>: <span class="type-link" data-type="kotlin.Int">Int</span>;</div></div>
<div class="line" data-text="@JvmStaticfinal val DEMO_SETTINGS: LevelSettings;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">final</span> <span class="kw">val</span> <span class="ident">DEMO_SETTINGS</span>: <span class="type-link" data-type="net.minecraft.world.level.LevelSettings">LevelSettings</span>;</div></div>
<div class="line" data-text="@JvmStaticfinal val ANONYMOUS_PLAYER_PROFILE: GameProfile;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">final</span> <span class="kw">val</span> <span class="ident">ANONYMOUS_PLAYER_PROFILE</span>: <span class="type-link" data-type="com.mojang.authlib.GameProfile">GameProfile</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate final val fatalException: AtomicReference<RuntimeException>;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">fatalException</span>: <span class="type-link" data-type="java.util.concurrent.atomic.AtomicReference">AtomicReference</span>&lt;<span class="type-link" data-type="java.lang.RuntimeException">RuntimeException</span>&gt;;</div></div>
<div class="line" data-text="@JvmStaticfun spin(arg0: Function<Thread, S>): S {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">spin</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="type-link" data-type="java.lang.Thread">Thread</span>, <span class="ident">S</span>&gt;): <span class="ident">S</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun setInitialSpawn(arg0: Boolean, arg1: Boolean, arg2: ServerLevel, arg3: ServerLevelData): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">setInitialSpawn</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.server.level.ServerLevel">ServerLevel</span>, <span class="arg-name">arg3</span>: <span class="type-link" data-type="net.minecraft.world.level.storage.ServerLevelData">ServerLevelData</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun constructOrExtractCrashReport(arg0: Throwable): CrashReport {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">constructOrExtractCrashReport</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.Throwable">Throwable</span>): <span class="type-link" data-type="net.minecraft.CrashReport">CrashReport</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun throwIfFatalException(): Boolean {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">throwIfFatalException</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun setFatalException(arg0: RuntimeException): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">setFatalException</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.RuntimeException">RuntimeException</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun configurePackRepository(arg0: Boolean, arg1: Boolean, arg2: PackRepository, arg3: WorldDataConfiguration): WorldDataConfiguration {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">configurePackRepository</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.server.packs.repository.PackRepository">PackRepository</span>, <span class="arg-name">arg3</span>: <span class="type-link" data-type="net.minecraft.world.level.WorldDataConfiguration">WorldDataConfiguration</span>): <span class="type-link" data-type="net.minecraft.world.level.WorldDataConfiguration">WorldDataConfiguration</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun configureRepositoryWithSelection(arg0: Boolean, arg1: Collection<String>, arg2: PackRepository, arg3: FeatureFlagSet): WorldDataConfiguration {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">configureRepositoryWithSelection</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="java.util.Collection">Collection</span>&lt;<span class="type-link" data-type="java.lang.String">String</span>&gt;, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.server.packs.repository.PackRepository">PackRepository</span>, <span class="arg-name">arg3</span>: <span class="type-link" data-type="net.minecraft.world.flag.FeatureFlagSet">FeatureFlagSet</span>): <span class="type-link" data-type="net.minecraft.world.level.WorldDataConfiguration">WorldDataConfiguration</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun enableForcedFeaturePacks(arg0: PackRepository, arg1: FeatureFlagSet): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">enableForcedFeaturePacks</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.server.packs.repository.PackRepository">PackRepository</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.world.flag.FeatureFlagSet">FeatureFlagSet</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun getSelectedPacks(arg0: Boolean, arg1: PackRepository): DataPackConfig {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">getSelectedPacks</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.server.packs.repository.PackRepository">PackRepository</span>): <span class="type-link" data-type="net.minecraft.world.level.DataPackConfig">DataPackConfig</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_61087(arg0: RegionStorageInfo): String {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_61087</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.world.level.chunk.storage.RegionStorageInfo">RegionStorageInfo</span>): <span class="type-link" data-type="java.lang.String">String</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_38580(arg0: NativeModuleLister$NativeModuleInfo): String {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_38580</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.util.NativeModuleLister$NativeModuleInfo">NativeModuleLister$NativeModuleInfo</span>): <span class="type-link" data-type="java.lang.String">String</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_29738(arg0: String, arg1: Collection): Boolean {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_29738</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.String">String</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="java.util.Collection">Collection</span>): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_40374(arg0: ReloadableServerResources, arg1: CloseableResourceManager): MinecraftServer$ReloadableResources {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_40374</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.server.ReloadableServerResources">ReloadableServerResources</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.server.packs.resources.CloseableResourceManager">CloseableResourceManager</span>): <span class="type-link" data-type="net.minecraft.server.MinecraftServer$ReloadableResources">MinecraftServer$ReloadableResources</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_40375(arg0: Throwable, arg1: ReloadableServerResources, arg2: CloseableResourceManager): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_40375</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.Throwable">Throwable</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.server.ReloadableServerResources">ReloadableServerResources</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.server.packs.resources.CloseableResourceManager">CloseableResourceManager</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_3733(arg0: ServerLevel): String {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_3733</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.server.level.ServerLevel">ServerLevel</span>): <span class="type-link" data-type="java.lang.String">String</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_53501(arg0: ServerPlayer): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_53501</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.server.level.ServerPlayer">ServerPlayer</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_49387(arg0: Path): Optional {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_49387</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.nio.file.Path">Path</span>): <span class="type-link" data-type="java.util.Optional">Optional</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_49388(arg0: Path): Boolean {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_49388</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.nio.file.Path">Path</span>): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_49389(arg0: Path): Boolean {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_49389</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.nio.file.Path">Path</span>): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_60583(arg0: BooleanSupplier): Boolean {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_60583</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.function.BooleanSupplier">BooleanSupplier</span>): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_54836(): Boolean {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_54836</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_40055(): Boolean {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_40055</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_40056(arg0: ServerLevel): Boolean {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_40056</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.server.level.ServerLevel">ServerLevel</span>): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_46841(arg0: Holder$Reference, arg1: ServerChunkCache, arg2: ServerLevel, arg3: ServerLevelData): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_46841</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.core.Holder$Reference">Holder$Reference</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.server.level.ServerChunkCache">ServerChunkCache</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="net.minecraft.server.level.ServerLevel">ServerLevel</span>, <span class="arg-name">arg3</span>: <span class="type-link" data-type="net.minecraft.world.level.storage.ServerLevelData">ServerLevelData</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_46842(arg0: Registry): Optional {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_46842</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.core.Registry">Registry</span>): <span class="type-link" data-type="java.util.Optional">Optional</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_3854(arg0: Thread, arg1: Throwable): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_3854</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.Thread">Thread</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="java.lang.Throwable">Throwable</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_29739(arg0: AtomicReference): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_29739</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.concurrent.atomic.AtomicReference">AtomicReference</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_37329(arg0: Path): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_37329</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.nio.file.Path">Path</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun createMisplacedChunkReport(arg0: ChunkPos, arg1: ChunkPos): ReportedException {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">createMisplacedChunkReport</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="net.minecraft.world.level.ChunkPos">ChunkPos</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="net.minecraft.world.level.ChunkPos">ChunkPos</span>): <span class="type-link" data-type="net.minecraft.ReportedException">ReportedException</span> {};</div></div>
<div class="line" data-text="@JvmStaticfun of(arg0: String, arg1: Consumer<Msg>): ProcessorHandle<Msg> {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">of</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.String">String</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="java.util.function.Consumer">Consumer</span>&lt;<span class="type-link" data-type="Msg">Msg</span>&gt;): <span class="type-link" data-type="net.minecraft.util.thread.ProcessorHandle">ProcessorHandle</span>&lt;<span class="type-link" data-type="Msg">Msg</span>&gt; {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_27917(arg0: Either, arg1: CompletableFuture): Unit {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_27917</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="com.mojang.datafixers.util.Either">Either</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="java.util.concurrent.CompletableFuture">CompletableFuture</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@JvmStaticprivate fun method_5386(arg0: Runnable): Void {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">method_5386</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.Runnable">Runnable</span>): <span class="type-link" data-type="java.lang.Void">Void</span> {};</div></div>
<div class="line" data-text="}" style="opacity: 0;"><div style="padding-left: 2em">}</div></div>
<div class="line" data-text="}" style="opacity: 0;"><div>}</div></div>
<div class="line" data-text="" style="opacity: 0;"></div></div></div>
			
	<div id="hover-preview" style="
	  position: fixed;
	  overflow: auto;
	  background: #2b2b2b;
	  color: #ddd;
	  border: 1px solid #444;
	  border-radius: 6px;
	  font-size: 13px;
	  padding: 8px;
	  display: none;
	  z-index: 50;
	  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.5);
	  pointer-events: auto;
	">
	  <div id="hover-content"></div>
	</div>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/constantsPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/consoleViewer.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/classPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/searchBarViewer.js"></script>
		  </body>
		  </html>
[Log] <!DOCTYPE html>
		  <html lang="en">
		  <head>
			<meta charset="UTF-8">
			<style>
			  
		#class-search-bar {
		display: flex;
		align-items: center;
		gap: 8px;
		padding: 8px 12px;
		background: #2b2b2b;
		border-bottom: 1px solid #444;
		z-index: 150;
		position: relative;
		}

		#class-search-results {
		position: absolute;
		top: 100%;
		left: 0;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: 100%;
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
		}

			  
	@keyframes pop {
	  0% { transform: scale(1); }
	  50% { transform: scale(1.04); }
	  100% { transform: scale(1.035); }
	}
			  
	body {
	  margin: 0;
	  font-family: Consolas, monospace;
	  background: #1e1e1e;
	  color: rgb(210, 222, 174);
	  padding: 16px;
	}
			  
	#main {
	  cursor: text;
	  flex-grow: 1;
	  height: 100vh;
	  overflow: visible;
	  padding: 16px;
	  box-sizing: border-box;
	}
  
	.kw {
	  color: rgba(76, 156, 222, 0.93);
	  font-weight: bold;
	}
  
	.annotation {
	  color: rgb(238, 223, 154);
	}
  
	.type-link {
	  color: rgba(108, 220, 175, 0.92);
	  cursor: default;
	  text-decoration: none;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link {
	  cursor: pointer;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link:hover {
	  color: rgba(158, 234, 203, 0.92);
	  text-decoration: underline;
	  display: inline-block;
	  animation: pop 0.17s ease-in-out forwards;
	}
  
	.ident {
	  color: #9cdcfe;
	}
  
	.method-name {
	  color: rgba(231, 229, 151, 0.92);
	}
  
	.arg-name {
	  color: rgba(104, 208, 237, 0.97);
	}
  
	.line {
	  opacity: 0;
	  transition: opacity 0.05s linear;
	}
			  
	.highlight-box {
	  position: absolute;
	  background-color: rgba(255, 160, 80, 0.35);
	  border-radius: 2px;
	}
  
	.highlight-box.current {
	  outline: 1px solid #3794ff;
	  background-color: rgba(55, 148, 255, 0.3);
	  box-shadow: 0 0 4px #3794ff99;
	  z-index: 60;
	}
  
	.debug-overlay-wrapper {
	  position: fixed;
	  pointer-events: none;
	  z-index: 10000;
	}
  
	.debug-overlay-wrapper > div {
	  position: absolute;
	  pointer-events: auto;
	  background: rgba(255, 0, 0, 0.2);
	}
  
	#search-bar button {
	  background-color: rgba(30, 30, 30, 0.27);
	  color: white;
	  border: 1px solid #555;
	  border-radius: 6px;
	  padding: 4px 8px;
	  cursor: pointer;
	  transition: all 0.2s ease-in-out;
	  font-size: 13px;
	  font-family: inherit;
	  user-select: none;
	}
  
	#search-bar button.active {
	  background-color: #094771;
	  border-color: #3794ff;
	  color: white;
	}
			</style>
		  </head>
		  <body>
		    
	<div id="class-search-bar" style="
	  display: flex;
	  align-items: center;
	  gap: 8px;
	  padding: 8px 12px;
	  background: #2b2b2b;
	  border-bottom: 1px solid #444;
	  z-index: 150;
	">
	  <input id="class-search-input" type="text" placeholder="Search classes..." style="
		flex-grow: 1;
		padding: 6px 10px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 6px;
		font-family: inherit;
	  ">
	  <div id="class-search-results" style="
		position: absolute;
		top: 42px;
		left: 12px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: calc(100% - 24px);
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
	  "></div>
	</div>
			
	<div id="search-bar" style="
	  display: none;
	  position: fixed;
	  top: 8px;
	  right: 8px;
	  z-index: 200;
	  background: #2c2c2c;
	  padding: 4px 8px;
	  border-radius: 4px;
	  display: flex;
	  gap: 4px;
	  align-items: center;
	">
	  <input type="text" id="search-input" placeholder="Search..." style="
		width: 180px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		padding: 4px;
	  " />
	  <button id="toggle-case" title="Match Case">Aa</button>
	  <button id="toggle-whole" title="Whole Word">â›¶</button>
	  <button id="toggle-regex" title="Regex">*</button>
	  <span id="search-count" style="
		color: white;
		min-width: 30px;
		text-align: center;
		font-size: 13px;
		font-family: Arial, sans-serif;
	  ">No Results</span>
	  <button id="search-prev" title="Previous Match">â†‘</button>
	  <button id="search-next" title="Next Match">â†“</button>
	  <button id="search-close" title="Close Search" style="margin-left: auto;">âœ–</button>
	</div>
			
  <div id="console-output" style="
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 160px;
    background: #111;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    overflow-y: auto;
    padding: 24px 10px 6px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
    <button id="console-minimize" style="
      position: absolute;
      top: 4px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 2px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">â€“</button>
    <div id="console-content"></div>
  </div>

  <div id="console-bar" style="
    display: none;
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 24px;
    background: #222;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
  	<span>Console</span>
    <button id="console-restore" style="
      position: absolute;
      top: 1px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 1px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">+</button>
  </div>
			<div id="main"><div class="line" data-text="package java.util" style="opacity: 0;"><div><span class="kw">package</span> <span class="type-link" data-package="java"><span class="ident">java</span></span><span>.</span><span class="type-link" data-package="java.util"><span class="ident">util</span></span></div><br></div>
<div class="line" data-text="final class Optional<T> {" style="opacity: 0;"><div id="current-class"><span class="kw">final</span> <span class="kw">class</span> <span class="ident">Optional</span>&lt;<span class="ident">T</span>&gt; {</div></div>
<div class="line" data-text="private final val value: T;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">value</span>: <span class="ident">T</span>;</div></div>
<div class="line" data-text="fun get(): T {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">get</span>(): <span class="ident">T</span> {};</div></div>
<div class="line" data-text="fun isPresent(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">isPresent</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun isEmpty(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">isEmpty</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="fun ifPresent(arg0: Consumer<in T>): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">ifPresent</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.function.Consumer">Consumer</span>&lt;<span class="kw">in</span> <span class="ident">T</span>&gt;): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun ifPresentOrElse(arg0: Runnable, arg1: Consumer<in T>): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">ifPresentOrElse</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.Runnable">Runnable</span>, <span class="arg-name">arg1</span>: <span class="type-link" data-type="java.util.function.Consumer">Consumer</span>&lt;<span class="kw">in</span> <span class="ident">T</span>&gt;): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun filter(arg0: Predicate<in T>): Optional<T> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">filter</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.function.Predicate">Predicate</span>&lt;<span class="kw">in</span> <span class="ident">T</span>&gt;): <span class="type-link" data-type="java.util.Optional">Optional</span>&lt;<span class="ident">T</span>&gt; {};</div></div>
<div class="line" data-text="fun map(arg0: Function<in T, out U>): Optional<U> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">map</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="kw">in</span> <span class="ident">T</span>, <span class="kw">out</span> <span class="ident">U</span>&gt;): <span class="type-link" data-type="java.util.Optional">Optional</span>&lt;<span class="ident">U</span>&gt; {};</div></div>
<div class="line" data-text="fun flatMap(arg0: Function<in T, Optional<? extends U>>): Optional<U> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">flatMap</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.function.Function">Function</span>&lt;<span class="kw">in</span> <span class="ident">T</span>, <span class="type-link" data-type="out java.util.Optional">Optional</span>&lt;<span class="type-link" data-type="? extends U">? extends U</span>&gt;&gt;): <span class="type-link" data-type="java.util.Optional">Optional</span>&lt;<span class="ident">U</span>&gt; {};</div></div>
<div class="line" data-text="fun or(arg0: Supplier<Optional<? extends T>>): Optional<T> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">or</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.function.Supplier">Supplier</span>&lt;<span class="type-link" data-type="out java.util.Optional">Optional</span>&lt;<span class="type-link" data-type="? extends T">? extends T</span>&gt;&gt;): <span class="type-link" data-type="java.util.Optional">Optional</span>&lt;<span class="ident">T</span>&gt; {};</div></div>
<div class="line" data-text="fun stream(): Stream<T> {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">stream</span>(): <span class="type-link" data-type="java.util.stream.Stream">Stream</span>&lt;<span class="ident">T</span>&gt; {};</div></div>
<div class="line" data-text="fun orElse(arg0: T): T {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">orElse</span>(<span class="arg-name">arg0</span>: <span class="ident">T</span>): <span class="ident">T</span> {};</div></div>
<div class="line" data-text="fun orElseGet(arg0: Supplier<out T>): T {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">orElseGet</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.function.Supplier">Supplier</span>&lt;<span class="kw">out</span> <span class="ident">T</span>&gt;): <span class="ident">T</span> {};</div></div>
<div class="line" data-text="fun orElseThrow(): T {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">orElseThrow</span>(): <span class="ident">T</span> {};</div></div>
<div class="line" data-text="fun orElseThrow(arg0: Supplier<out X>): T {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">orElseThrow</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.function.Supplier">Supplier</span>&lt;<span class="kw">out</span> <span class="ident">X</span>&gt;): <span class="ident">T</span> {};</div></div>
<div class="line" data-text="companion object {" style="opacity: 0;"><br><div style="padding-left: 2em"><span class="kw">companion object</span> {</div></div>
<div class="line" data-text="@JvmStaticprivate final val EMPTY: Optional<*>;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">EMPTY</span>: <span class="type-link" data-type="java.util.Optional">Optional</span>&lt;<span class="kw">*</span>&gt;;</div></div>
<div class="line" data-text="@JvmStaticfun empty(): Optional<T> {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">empty</span>(): <span class="type-link" data-type="java.util.Optional">Optional</span>&lt;<span class="ident">T</span>&gt; {};</div></div>
<div class="line" data-text="@JvmStaticfun of(arg0: T): Optional<T> {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">of</span>(<span class="arg-name">arg0</span>: <span class="ident">T</span>): <span class="type-link" data-type="java.util.Optional">Optional</span>&lt;<span class="ident">T</span>&gt; {};</div></div>
<div class="line" data-text="@JvmStaticfun ofNullable(arg0: T): Optional<T> {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">ofNullable</span>(<span class="arg-name">arg0</span>: <span class="ident">T</span>): <span class="type-link" data-type="java.util.Optional">Optional</span>&lt;<span class="ident">T</span>&gt; {};</div></div>
<div class="line" data-text="}" style="opacity: 0;"><div style="padding-left: 2em">}</div></div>
<div class="line" data-text="}" style="opacity: 0;"><div>}</div></div>
<div class="line" data-text="" style="opacity: 0;"></div></div></div>
			
	<div id="hover-preview" style="
	  position: fixed;
	  overflow: auto;
	  background: #2b2b2b;
	  color: #ddd;
	  border: 1px solid #444;
	  border-radius: 6px;
	  font-size: 13px;
	  padding: 8px;
	  display: none;
	  z-index: 50;
	  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.5);
	  pointer-events: auto;
	">
	  <div id="hover-content"></div>
	</div>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/constantsPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/consoleViewer.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/classPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/searchBarViewer.js"></script>
		  </body>
		  </html>
[Log] <!DOCTYPE html>
		  <html lang="en">
		  <head>
			<meta charset="UTF-8">
			<style>
			  
		#class-search-bar {
		display: flex;
		align-items: center;
		gap: 8px;
		padding: 8px 12px;
		background: #2b2b2b;
		border-bottom: 1px solid #444;
		z-index: 150;
		position: relative;
		}

		#class-search-results {
		position: absolute;
		top: 100%;
		left: 0;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: 100%;
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
		}

			  
	@keyframes pop {
	  0% { transform: scale(1); }
	  50% { transform: scale(1.04); }
	  100% { transform: scale(1.035); }
	}
			  
	body {
	  margin: 0;
	  font-family: Consolas, monospace;
	  background: #1e1e1e;
	  color: rgb(210, 222, 174);
	  padding: 16px;
	}
			  
	#main {
	  cursor: text;
	  flex-grow: 1;
	  height: 100vh;
	  overflow: visible;
	  padding: 16px;
	  box-sizing: border-box;
	}
  
	.kw {
	  color: rgba(76, 156, 222, 0.93);
	  font-weight: bold;
	}
  
	.annotation {
	  color: rgb(238, 223, 154);
	}
  
	.type-link {
	  color: rgba(108, 220, 175, 0.92);
	  cursor: default;
	  text-decoration: none;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link {
	  cursor: pointer;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link:hover {
	  color: rgba(158, 234, 203, 0.92);
	  text-decoration: underline;
	  display: inline-block;
	  animation: pop 0.17s ease-in-out forwards;
	}
  
	.ident {
	  color: #9cdcfe;
	}
  
	.method-name {
	  color: rgba(231, 229, 151, 0.92);
	}
  
	.arg-name {
	  color: rgba(104, 208, 237, 0.97);
	}
  
	.line {
	  opacity: 0;
	  transition: opacity 0.05s linear;
	}
			  
	.highlight-box {
	  position: absolute;
	  background-color: rgba(255, 160, 80, 0.35);
	  border-radius: 2px;
	}
  
	.highlight-box.current {
	  outline: 1px solid #3794ff;
	  background-color: rgba(55, 148, 255, 0.3);
	  box-shadow: 0 0 4px #3794ff99;
	  z-index: 60;
	}
  
	.debug-overlay-wrapper {
	  position: fixed;
	  pointer-events: none;
	  z-index: 10000;
	}
  
	.debug-overlay-wrapper > div {
	  position: absolute;
	  pointer-events: auto;
	  background: rgba(255, 0, 0, 0.2);
	}
  
	#search-bar button {
	  background-color: rgba(30, 30, 30, 0.27);
	  color: white;
	  border: 1px solid #555;
	  border-radius: 6px;
	  padding: 4px 8px;
	  cursor: pointer;
	  transition: all 0.2s ease-in-out;
	  font-size: 13px;
	  font-family: inherit;
	  user-select: none;
	}
  
	#search-bar button.active {
	  background-color: #094771;
	  border-color: #3794ff;
	  color: white;
	}
			</style>
		  </head>
		  <body>
		    
	<div id="class-search-bar" style="
	  display: flex;
	  align-items: center;
	  gap: 8px;
	  padding: 8px 12px;
	  background: #2b2b2b;
	  border-bottom: 1px solid #444;
	  z-index: 150;
	">
	  <input id="class-search-input" type="text" placeholder="Search classes..." style="
		flex-grow: 1;
		padding: 6px 10px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 6px;
		font-family: inherit;
	  ">
	  <div id="class-search-results" style="
		position: absolute;
		top: 42px;
		left: 12px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: calc(100% - 24px);
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
	  "></div>
	</div>
			
	<div id="search-bar" style="
	  display: none;
	  position: fixed;
	  top: 8px;
	  right: 8px;
	  z-index: 200;
	  background: #2c2c2c;
	  padding: 4px 8px;
	  border-radius: 4px;
	  display: flex;
	  gap: 4px;
	  align-items: center;
	">
	  <input type="text" id="search-input" placeholder="Search..." style="
		width: 180px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		padding: 4px;
	  " />
	  <button id="toggle-case" title="Match Case">Aa</button>
	  <button id="toggle-whole" title="Whole Word">â›¶</button>
	  <button id="toggle-regex" title="Regex">*</button>
	  <span id="search-count" style="
		color: white;
		min-width: 30px;
		text-align: center;
		font-size: 13px;
		font-family: Arial, sans-serif;
	  ">No Results</span>
	  <button id="search-prev" title="Previous Match">â†‘</button>
	  <button id="search-next" title="Next Match">â†“</button>
	  <button id="search-close" title="Close Search" style="margin-left: auto;">âœ–</button>
	</div>
			
  <div id="console-output" style="
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 160px;
    background: #111;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    overflow-y: auto;
    padding: 24px 10px 6px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
    <button id="console-minimize" style="
      position: absolute;
      top: 4px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 2px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">â€“</button>
    <div id="console-content"></div>
  </div>

  <div id="console-bar" style="
    display: none;
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 24px;
    background: #222;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
  	<span>Console</span>
    <button id="console-restore" style="
      position: absolute;
      top: 1px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 1px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">+</button>
  </div>
			<div id="main"><div class="line" data-text="package java.lang" style="opacity: 0;"><div><span class="kw">package</span> <span class="type-link" data-package="java"><span class="ident">java</span></span><span>.</span><span class="type-link" data-package="java.lang"><span class="ident">lang</span></span></div><br></div>
<div class="line" data-text=" interface Runnable {" style="opacity: 0;"><div id="current-class"> <span class="kw">interface</span> <span class="ident">Runnable</span> {</div></div>
<div class="line" data-text="fun run(): Unit;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">run</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span>;</div></div>
<div class="line" data-text="}" style="opacity: 0;"><div>}</div></div>
<div class="line" data-text="" style="opacity: 0;"></div></div></div>
			
	<div id="hover-preview" style="
	  position: fixed;
	  overflow: auto;
	  background: #2b2b2b;
	  color: #ddd;
	  border: 1px solid #444;
	  border-radius: 6px;
	  font-size: 13px;
	  padding: 8px;
	  display: none;
	  z-index: 50;
	  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.5);
	  pointer-events: auto;
	">
	  <div id="hover-content"></div>
	</div>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/constantsPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/consoleViewer.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/classPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/searchBarViewer.js"></script>
		  </body>
		  </html>
[Log] <!DOCTYPE html>
		  <html lang="en">
		  <head>
			<meta charset="UTF-8">
			<style>
			  
		#class-search-bar {
		display: flex;
		align-items: center;
		gap: 8px;
		padding: 8px 12px;
		background: #2b2b2b;
		border-bottom: 1px solid #444;
		z-index: 150;
		position: relative;
		}

		#class-search-results {
		position: absolute;
		top: 100%;
		left: 0;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: 100%;
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
		}

			  
	@keyframes pop {
	  0% { transform: scale(1); }
	  50% { transform: scale(1.04); }
	  100% { transform: scale(1.035); }
	}
			  
	body {
	  margin: 0;
	  font-family: Consolas, monospace;
	  background: #1e1e1e;
	  color: rgb(210, 222, 174);
	  padding: 16px;
	}
			  
	#main {
	  cursor: text;
	  flex-grow: 1;
	  height: 100vh;
	  overflow: visible;
	  padding: 16px;
	  box-sizing: border-box;
	}
  
	.kw {
	  color: rgba(76, 156, 222, 0.93);
	  font-weight: bold;
	}
  
	.annotation {
	  color: rgb(238, 223, 154);
	}
  
	.type-link {
	  color: rgba(108, 220, 175, 0.92);
	  cursor: default;
	  text-decoration: none;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link {
	  cursor: pointer;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link:hover {
	  color: rgba(158, 234, 203, 0.92);
	  text-decoration: underline;
	  display: inline-block;
	  animation: pop 0.17s ease-in-out forwards;
	}
  
	.ident {
	  color: #9cdcfe;
	}
  
	.method-name {
	  color: rgba(231, 229, 151, 0.92);
	}
  
	.arg-name {
	  color: rgba(104, 208, 237, 0.97);
	}
  
	.line {
	  opacity: 0;
	  transition: opacity 0.05s linear;
	}
			  
	.highlight-box {
	  position: absolute;
	  background-color: rgba(255, 160, 80, 0.35);
	  border-radius: 2px;
	}
  
	.highlight-box.current {
	  outline: 1px solid #3794ff;
	  background-color: rgba(55, 148, 255, 0.3);
	  box-shadow: 0 0 4px #3794ff99;
	  z-index: 60;
	}
  
	.debug-overlay-wrapper {
	  position: fixed;
	  pointer-events: none;
	  z-index: 10000;
	}
  
	.debug-overlay-wrapper > div {
	  position: absolute;
	  pointer-events: auto;
	  background: rgba(255, 0, 0, 0.2);
	}
  
	#search-bar button {
	  background-color: rgba(30, 30, 30, 0.27);
	  color: white;
	  border: 1px solid #555;
	  border-radius: 6px;
	  padding: 4px 8px;
	  cursor: pointer;
	  transition: all 0.2s ease-in-out;
	  font-size: 13px;
	  font-family: inherit;
	  user-select: none;
	}
  
	#search-bar button.active {
	  background-color: #094771;
	  border-color: #3794ff;
	  color: white;
	}
			</style>
		  </head>
		  <body>
		    
	<div id="class-search-bar" style="
	  display: flex;
	  align-items: center;
	  gap: 8px;
	  padding: 8px 12px;
	  background: #2b2b2b;
	  border-bottom: 1px solid #444;
	  z-index: 150;
	">
	  <input id="class-search-input" type="text" placeholder="Search classes..." style="
		flex-grow: 1;
		padding: 6px 10px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 6px;
		font-family: inherit;
	  ">
	  <div id="class-search-results" style="
		position: absolute;
		top: 42px;
		left: 12px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: calc(100% - 24px);
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
	  "></div>
	</div>
			
	<div id="search-bar" style="
	  display: none;
	  position: fixed;
	  top: 8px;
	  right: 8px;
	  z-index: 200;
	  background: #2c2c2c;
	  padding: 4px 8px;
	  border-radius: 4px;
	  display: flex;
	  gap: 4px;
	  align-items: center;
	">
	  <input type="text" id="search-input" placeholder="Search..." style="
		width: 180px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		padding: 4px;
	  " />
	  <button id="toggle-case" title="Match Case">Aa</button>
	  <button id="toggle-whole" title="Whole Word">â›¶</button>
	  <button id="toggle-regex" title="Regex">*</button>
	  <span id="search-count" style="
		color: white;
		min-width: 30px;
		text-align: center;
		font-size: 13px;
		font-family: Arial, sans-serif;
	  ">No Results</span>
	  <button id="search-prev" title="Previous Match">â†‘</button>
	  <button id="search-next" title="Next Match">â†“</button>
	  <button id="search-close" title="Close Search" style="margin-left: auto;">âœ–</button>
	</div>
			
  <div id="console-output" style="
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 160px;
    background: #111;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    overflow-y: auto;
    padding: 24px 10px 6px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
    <button id="console-minimize" style="
      position: absolute;
      top: 4px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 2px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">â€“</button>
    <div id="console-content"></div>
  </div>

  <div id="console-bar" style="
    display: none;
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 24px;
    background: #222;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
  	<span>Console</span>
    <button id="console-restore" style="
      position: absolute;
      top: 1px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 1px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">+</button>
  </div>
			<div id="main"><div class="line" data-text="package java.lang" style="opacity: 0;"><div><span class="kw">package</span> <span class="type-link" data-package="java"><span class="ident">java</span></span><span>.</span><span class="type-link" data-package="java.lang"><span class="ident">lang</span></span></div><br></div>
<div class="line" data-text=" class AbstractMethodError : IncompatibleClassChangeError, Serializable {" style="opacity: 0;"><div id="current-class"> <span class="kw">class</span> <span class="ident">AbstractMethodError</span> : <span class="type-link" data-type="java.lang.IncompatibleClassChangeError">IncompatibleClassChangeError</span>, <span class="type-link" data-type="java.io.Serializable">Serializable</span> {</div></div>
<div class="line" data-text="fun getMessage(): String {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getMessage</span>(): <span class="type-link" data-type="java.lang.String">String</span> {};</div></div>
<div class="line" data-text="fun getLocalizedMessage(): String {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getLocalizedMessage</span>(): <span class="type-link" data-type="java.lang.String">String</span> {};</div></div>
<div class="line" data-text="@Synchronizedfun getCause(): Throwable {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="annotation">@Synchronized</span></div><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getCause</span>(): <span class="type-link" data-type="java.lang.Throwable">Throwable</span> {};</div></div>
<div class="line" data-text="@Synchronizedfun initCause(arg0: Throwable): Throwable {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="annotation">@Synchronized</span></div><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">initCause</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.Throwable">Throwable</span>): <span class="type-link" data-type="java.lang.Throwable">Throwable</span> {};</div></div>
<div class="line" data-text="final fun setCause(arg0: Throwable): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">final</span> <span class="kw">fun</span> <span class="method-name">setCause</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.Throwable">Throwable</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun printStackTrace(): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">printStackTrace</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun printStackTrace(arg0: PrintStream): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">printStackTrace</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.io.PrintStream">PrintStream</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="private fun printStackTrace(arg0: Throwable$PrintStreamOrWriter): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">printStackTrace</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.Throwable$PrintStreamOrWriter">Throwable$PrintStreamOrWriter</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="private fun lockedPrintStackTrace(arg0: Throwable$PrintStreamOrWriter): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">lockedPrintStackTrace</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.Throwable$PrintStreamOrWriter">Throwable$PrintStreamOrWriter</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="private fun printEnclosedStackTrace(arg0: StackTraceElement[], arg1: String, arg2: String, arg3: Throwable$PrintStreamOrWriter, arg4: Set<Throwable>): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">printEnclosedStackTrace</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.StackTraceElement">StackTraceElement</span>[], <span class="arg-name">arg1</span>: <span class="type-link" data-type="java.lang.String">String</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="java.lang.String">String</span>, <span class="arg-name">arg3</span>: <span class="type-link" data-type="java.lang.Throwable$PrintStreamOrWriter">Throwable$PrintStreamOrWriter</span>, <span class="arg-name">arg4</span>: <span class="type-link" data-type="java.util.Set">Set</span>&lt;<span class="type-link" data-type="java.lang.Throwable">Throwable</span>&gt;): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun printStackTrace(arg0: PrintWriter): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">printStackTrace</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.io.PrintWriter">PrintWriter</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@Synchronizedfun fillInStackTrace(): Throwable {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="annotation">@Synchronized</span></div><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">fillInStackTrace</span>(): <span class="type-link" data-type="java.lang.Throwable">Throwable</span> {};</div></div>
<div class="line" data-text="private external fun fillInStackTrace(arg0: Int): Throwable;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">external</span> <span class="kw">fun</span> <span class="method-name">fillInStackTrace</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="java.lang.Throwable">Throwable</span>;</div></div>
<div class="line" data-text="fun getStackTrace(): StackTraceElement[] {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getStackTrace</span>(): <span class="type-link" data-type="java.lang.StackTraceElement">StackTraceElement</span>[] {};</div></div>
<div class="line" data-text="@Synchronizedprivate fun getOurStackTrace(): StackTraceElement[] {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="annotation">@Synchronized</span></div><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">getOurStackTrace</span>(): <span class="type-link" data-type="java.lang.StackTraceElement">StackTraceElement</span>[] {};</div></div>
<div class="line" data-text="fun setStackTrace(arg0: StackTraceElement[]): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">setStackTrace</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.StackTraceElement">StackTraceElement</span>[]): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="private fun readObject(arg0: ObjectInputStream): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">readObject</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.io.ObjectInputStream">ObjectInputStream</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="private fun validateSuppressedExceptionsList(arg0: List<Throwable>): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">validateSuppressedExceptionsList</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.List">List</span>&lt;<span class="type-link" data-type="java.lang.Throwable">Throwable</span>&gt;): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="@Synchronizedprivate fun writeObject(arg0: ObjectOutputStream): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="annotation">@Synchronized</span></div><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">writeObject</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.io.ObjectOutputStream">ObjectOutputStream</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@Synchronizedfinal fun addSuppressed(arg0: Throwable): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="annotation">@Synchronized</span></div><div style="padding-left: 2em"><span class="kw">final</span> <span class="kw">fun</span> <span class="method-name">addSuppressed</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.Throwable">Throwable</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@Synchronizedfinal fun getSuppressed(): Throwable[] {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="annotation">@Synchronized</span></div><div style="padding-left: 2em"><span class="kw">final</span> <span class="kw">fun</span> <span class="method-name">getSuppressed</span>(): <span class="type-link" data-type="java.lang.Throwable">Throwable</span>[] {};</div></div>
<div class="line" data-text="companion object {" style="opacity: 0;"><br><div style="padding-left: 2em"><span class="kw">companion object</span> {</div></div>
<div class="line" data-text="@JvmStaticprivate final val serialVersionUID: Long;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">serialVersionUID</span>: <span class="type-link" data-type="kotlin.Long">Long</span>;</div></div>
<div class="line" data-text="}" style="opacity: 0;"><div style="padding-left: 2em">}</div></div>
<div class="line" data-text="}" style="opacity: 0;"><div>}</div></div>
<div class="line" data-text="" style="opacity: 0;"></div></div></div>
			
	<div id="hover-preview" style="
	  position: fixed;
	  overflow: auto;
	  background: #2b2b2b;
	  color: #ddd;
	  border: 1px solid #444;
	  border-radius: 6px;
	  font-size: 13px;
	  padding: 8px;
	  display: none;
	  z-index: 50;
	  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.5);
	  pointer-events: auto;
	">
	  <div id="hover-content"></div>
	</div>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/constantsPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/consoleViewer.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/classPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/searchBarViewer.js"></script>
		  </body>
		  </html>
[Log] <!DOCTYPE html>
		  <html lang="en">
		  <head>
			<meta charset="UTF-8">
			<style>
			  
		#class-search-bar {
		display: flex;
		align-items: center;
		gap: 8px;
		padding: 8px 12px;
		background: #2b2b2b;
		border-bottom: 1px solid #444;
		z-index: 150;
		position: relative;
		}

		#class-search-results {
		position: absolute;
		top: 100%;
		left: 0;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: 100%;
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
		}

			  
	@keyframes pop {
	  0% { transform: scale(1); }
	  50% { transform: scale(1.04); }
	  100% { transform: scale(1.035); }
	}
			  
	body {
	  margin: 0;
	  font-family: Consolas, monospace;
	  background: #1e1e1e;
	  color: rgb(210, 222, 174);
	  padding: 16px;
	}
			  
	#main {
	  cursor: text;
	  flex-grow: 1;
	  height: 100vh;
	  overflow: visible;
	  padding: 16px;
	  box-sizing: border-box;
	}
  
	.kw {
	  color: rgba(76, 156, 222, 0.93);
	  font-weight: bold;
	}
  
	.annotation {
	  color: rgb(238, 223, 154);
	}
  
	.type-link {
	  color: rgba(108, 220, 175, 0.92);
	  cursor: default;
	  text-decoration: none;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link {
	  cursor: pointer;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link:hover {
	  color: rgba(158, 234, 203, 0.92);
	  text-decoration: underline;
	  display: inline-block;
	  animation: pop 0.17s ease-in-out forwards;
	}
  
	.ident {
	  color: #9cdcfe;
	}
  
	.method-name {
	  color: rgba(231, 229, 151, 0.92);
	}
  
	.arg-name {
	  color: rgba(104, 208, 237, 0.97);
	}
  
	.line {
	  opacity: 0;
	  transition: opacity 0.05s linear;
	}
			  
	.highlight-box {
	  position: absolute;
	  background-color: rgba(255, 160, 80, 0.35);
	  border-radius: 2px;
	}
  
	.highlight-box.current {
	  outline: 1px solid #3794ff;
	  background-color: rgba(55, 148, 255, 0.3);
	  box-shadow: 0 0 4px #3794ff99;
	  z-index: 60;
	}
  
	.debug-overlay-wrapper {
	  position: fixed;
	  pointer-events: none;
	  z-index: 10000;
	}
  
	.debug-overlay-wrapper > div {
	  position: absolute;
	  pointer-events: auto;
	  background: rgba(255, 0, 0, 0.2);
	}
  
	#search-bar button {
	  background-color: rgba(30, 30, 30, 0.27);
	  color: white;
	  border: 1px solid #555;
	  border-radius: 6px;
	  padding: 4px 8px;
	  cursor: pointer;
	  transition: all 0.2s ease-in-out;
	  font-size: 13px;
	  font-family: inherit;
	  user-select: none;
	}
  
	#search-bar button.active {
	  background-color: #094771;
	  border-color: #3794ff;
	  color: white;
	}
			</style>
		  </head>
		  <body>
		    
	<div id="class-search-bar" style="
	  display: flex;
	  align-items: center;
	  gap: 8px;
	  padding: 8px 12px;
	  background: #2b2b2b;
	  border-bottom: 1px solid #444;
	  z-index: 150;
	">
	  <input id="class-search-input" type="text" placeholder="Search classes..." style="
		flex-grow: 1;
		padding: 6px 10px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 6px;
		font-family: inherit;
	  ">
	  <div id="class-search-results" style="
		position: absolute;
		top: 42px;
		left: 12px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: calc(100% - 24px);
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
	  "></div>
	</div>
			
	<div id="search-bar" style="
	  display: none;
	  position: fixed;
	  top: 8px;
	  right: 8px;
	  z-index: 200;
	  background: #2c2c2c;
	  padding: 4px 8px;
	  border-radius: 4px;
	  display: flex;
	  gap: 4px;
	  align-items: center;
	">
	  <input type="text" id="search-input" placeholder="Search..." style="
		width: 180px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		padding: 4px;
	  " />
	  <button id="toggle-case" title="Match Case">Aa</button>
	  <button id="toggle-whole" title="Whole Word">â›¶</button>
	  <button id="toggle-regex" title="Regex">*</button>
	  <span id="search-count" style="
		color: white;
		min-width: 30px;
		text-align: center;
		font-size: 13px;
		font-family: Arial, sans-serif;
	  ">No Results</span>
	  <button id="search-prev" title="Previous Match">â†‘</button>
	  <button id="search-next" title="Next Match">â†“</button>
	  <button id="search-close" title="Close Search" style="margin-left: auto;">âœ–</button>
	</div>
			
  <div id="console-output" style="
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 160px;
    background: #111;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    overflow-y: auto;
    padding: 24px 10px 6px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
    <button id="console-minimize" style="
      position: absolute;
      top: 4px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 2px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">â€“</button>
    <div id="console-content"></div>
  </div>

  <div id="console-bar" style="
    display: none;
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 24px;
    background: #222;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
  	<span>Console</span>
    <button id="console-restore" style="
      position: absolute;
      top: 1px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 1px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">+</button>
  </div>
			<div id="main"><div class="line" data-text="package java.lang" style="opacity: 0;"><div><span class="kw">package</span> <span class="type-link" data-package="java"><span class="ident">java</span></span><span>.</span><span class="type-link" data-package="java.lang"><span class="ident">lang</span></span></div><br></div>
<div class="line" data-text=" class ArrayIndexOutOfBoundsException : IndexOutOfBoundsException, Serializable {" style="opacity: 0;"><div id="current-class"> <span class="kw">class</span> <span class="ident">ArrayIndexOutOfBoundsException</span> : <span class="type-link" data-type="java.lang.IndexOutOfBoundsException">IndexOutOfBoundsException</span>, <span class="type-link" data-type="java.io.Serializable">Serializable</span> {</div></div>
<div class="line" data-text="fun getMessage(): String {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getMessage</span>(): <span class="type-link" data-type="java.lang.String">String</span> {};</div></div>
<div class="line" data-text="fun getLocalizedMessage(): String {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getLocalizedMessage</span>(): <span class="type-link" data-type="java.lang.String">String</span> {};</div></div>
<div class="line" data-text="@Synchronizedfun getCause(): Throwable {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="annotation">@Synchronized</span></div><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getCause</span>(): <span class="type-link" data-type="java.lang.Throwable">Throwable</span> {};</div></div>
<div class="line" data-text="@Synchronizedfun initCause(arg0: Throwable): Throwable {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="annotation">@Synchronized</span></div><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">initCause</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.Throwable">Throwable</span>): <span class="type-link" data-type="java.lang.Throwable">Throwable</span> {};</div></div>
<div class="line" data-text="final fun setCause(arg0: Throwable): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">final</span> <span class="kw">fun</span> <span class="method-name">setCause</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.Throwable">Throwable</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun printStackTrace(): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">printStackTrace</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun printStackTrace(arg0: PrintStream): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">printStackTrace</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.io.PrintStream">PrintStream</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="private fun printStackTrace(arg0: Throwable$PrintStreamOrWriter): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">printStackTrace</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.Throwable$PrintStreamOrWriter">Throwable$PrintStreamOrWriter</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="private fun lockedPrintStackTrace(arg0: Throwable$PrintStreamOrWriter): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">lockedPrintStackTrace</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.Throwable$PrintStreamOrWriter">Throwable$PrintStreamOrWriter</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="private fun printEnclosedStackTrace(arg0: StackTraceElement[], arg1: String, arg2: String, arg3: Throwable$PrintStreamOrWriter, arg4: Set<Throwable>): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">printEnclosedStackTrace</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.StackTraceElement">StackTraceElement</span>[], <span class="arg-name">arg1</span>: <span class="type-link" data-type="java.lang.String">String</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="java.lang.String">String</span>, <span class="arg-name">arg3</span>: <span class="type-link" data-type="java.lang.Throwable$PrintStreamOrWriter">Throwable$PrintStreamOrWriter</span>, <span class="arg-name">arg4</span>: <span class="type-link" data-type="java.util.Set">Set</span>&lt;<span class="type-link" data-type="java.lang.Throwable">Throwable</span>&gt;): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun printStackTrace(arg0: PrintWriter): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">printStackTrace</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.io.PrintWriter">PrintWriter</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@Synchronizedfun fillInStackTrace(): Throwable {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="annotation">@Synchronized</span></div><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">fillInStackTrace</span>(): <span class="type-link" data-type="java.lang.Throwable">Throwable</span> {};</div></div>
<div class="line" data-text="private external fun fillInStackTrace(arg0: Int): Throwable;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">external</span> <span class="kw">fun</span> <span class="method-name">fillInStackTrace</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="java.lang.Throwable">Throwable</span>;</div></div>
<div class="line" data-text="fun getStackTrace(): StackTraceElement[] {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getStackTrace</span>(): <span class="type-link" data-type="java.lang.StackTraceElement">StackTraceElement</span>[] {};</div></div>
<div class="line" data-text="@Synchronizedprivate fun getOurStackTrace(): StackTraceElement[] {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="annotation">@Synchronized</span></div><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">getOurStackTrace</span>(): <span class="type-link" data-type="java.lang.StackTraceElement">StackTraceElement</span>[] {};</div></div>
<div class="line" data-text="fun setStackTrace(arg0: StackTraceElement[]): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">setStackTrace</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.StackTraceElement">StackTraceElement</span>[]): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="private fun readObject(arg0: ObjectInputStream): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">readObject</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.io.ObjectInputStream">ObjectInputStream</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="private fun validateSuppressedExceptionsList(arg0: List<Throwable>): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">validateSuppressedExceptionsList</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.util.List">List</span>&lt;<span class="type-link" data-type="java.lang.Throwable">Throwable</span>&gt;): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="@Synchronizedprivate fun writeObject(arg0: ObjectOutputStream): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="annotation">@Synchronized</span></div><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">writeObject</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.io.ObjectOutputStream">ObjectOutputStream</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@Synchronizedfinal fun addSuppressed(arg0: Throwable): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="annotation">@Synchronized</span></div><div style="padding-left: 2em"><span class="kw">final</span> <span class="kw">fun</span> <span class="method-name">addSuppressed</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.Throwable">Throwable</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="@Synchronizedfinal fun getSuppressed(): Throwable[] {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="annotation">@Synchronized</span></div><div style="padding-left: 2em"><span class="kw">final</span> <span class="kw">fun</span> <span class="method-name">getSuppressed</span>(): <span class="type-link" data-type="java.lang.Throwable">Throwable</span>[] {};</div></div>
<div class="line" data-text="companion object {" style="opacity: 0;"><br><div style="padding-left: 2em"><span class="kw">companion object</span> {</div></div>
<div class="line" data-text="@JvmStaticprivate final val serialVersionUID: Long;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">serialVersionUID</span>: <span class="type-link" data-type="kotlin.Long">Long</span>;</div></div>
<div class="line" data-text="}" style="opacity: 0;"><div style="padding-left: 2em">}</div></div>
<div class="line" data-text="}" style="opacity: 0;"><div>}</div></div>
<div class="line" data-text="" style="opacity: 0;"></div></div></div>
			
	<div id="hover-preview" style="
	  position: fixed;
	  overflow: auto;
	  background: #2b2b2b;
	  color: #ddd;
	  border: 1px solid #444;
	  border-radius: 6px;
	  font-size: 13px;
	  padding: 8px;
	  display: none;
	  z-index: 50;
	  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.5);
	  pointer-events: auto;
	">
	  <div id="hover-content"></div>
	</div>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/constantsPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/consoleViewer.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/classPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/searchBarViewer.js"></script>
		  </body>
		  </html>
[Log] <!DOCTYPE html>
		  <html lang="en">
		  <head>
			<meta charset="UTF-8">
			<style>
			  
		#class-search-bar {
		display: flex;
		align-items: center;
		gap: 8px;
		padding: 8px 12px;
		background: #2b2b2b;
		border-bottom: 1px solid #444;
		z-index: 150;
		position: relative;
		}

		#class-search-results {
		position: absolute;
		top: 100%;
		left: 0;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: 100%;
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
		}

			  
	@keyframes pop {
	  0% { transform: scale(1); }
	  50% { transform: scale(1.04); }
	  100% { transform: scale(1.035); }
	}
			  
	body {
	  margin: 0;
	  font-family: Consolas, monospace;
	  background: #1e1e1e;
	  color: rgb(210, 222, 174);
	  padding: 16px;
	}
			  
	#main {
	  cursor: text;
	  flex-grow: 1;
	  height: 100vh;
	  overflow: visible;
	  padding: 16px;
	  box-sizing: border-box;
	}
  
	.kw {
	  color: rgba(76, 156, 222, 0.93);
	  font-weight: bold;
	}
  
	.annotation {
	  color: rgb(238, 223, 154);
	}
  
	.type-link {
	  color: rgba(108, 220, 175, 0.92);
	  cursor: default;
	  text-decoration: none;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link {
	  cursor: pointer;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link:hover {
	  color: rgba(158, 234, 203, 0.92);
	  text-decoration: underline;
	  display: inline-block;
	  animation: pop 0.17s ease-in-out forwards;
	}
  
	.ident {
	  color: #9cdcfe;
	}
  
	.method-name {
	  color: rgba(231, 229, 151, 0.92);
	}
  
	.arg-name {
	  color: rgba(104, 208, 237, 0.97);
	}
  
	.line {
	  opacity: 0;
	  transition: opacity 0.05s linear;
	}
			  
	.highlight-box {
	  position: absolute;
	  background-color: rgba(255, 160, 80, 0.35);
	  border-radius: 2px;
	}
  
	.highlight-box.current {
	  outline: 1px solid #3794ff;
	  background-color: rgba(55, 148, 255, 0.3);
	  box-shadow: 0 0 4px #3794ff99;
	  z-index: 60;
	}
  
	.debug-overlay-wrapper {
	  position: fixed;
	  pointer-events: none;
	  z-index: 10000;
	}
  
	.debug-overlay-wrapper > div {
	  position: absolute;
	  pointer-events: auto;
	  background: rgba(255, 0, 0, 0.2);
	}
  
	#search-bar button {
	  background-color: rgba(30, 30, 30, 0.27);
	  color: white;
	  border: 1px solid #555;
	  border-radius: 6px;
	  padding: 4px 8px;
	  cursor: pointer;
	  transition: all 0.2s ease-in-out;
	  font-size: 13px;
	  font-family: inherit;
	  user-select: none;
	}
  
	#search-bar button.active {
	  background-color: #094771;
	  border-color: #3794ff;
	  color: white;
	}
			</style>
		  </head>
		  <body>
		    
	<div id="class-search-bar" style="
	  display: flex;
	  align-items: center;
	  gap: 8px;
	  padding: 8px 12px;
	  background: #2b2b2b;
	  border-bottom: 1px solid #444;
	  z-index: 150;
	">
	  <input id="class-search-input" type="text" placeholder="Search classes..." style="
		flex-grow: 1;
		padding: 6px 10px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 6px;
		font-family: inherit;
	  ">
	  <div id="class-search-results" style="
		position: absolute;
		top: 42px;
		left: 12px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: calc(100% - 24px);
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
	  "></div>
	</div>
			
	<div id="search-bar" style="
	  display: none;
	  position: fixed;
	  top: 8px;
	  right: 8px;
	  z-index: 200;
	  background: #2c2c2c;
	  padding: 4px 8px;
	  border-radius: 4px;
	  display: flex;
	  gap: 4px;
	  align-items: center;
	">
	  <input type="text" id="search-input" placeholder="Search..." style="
		width: 180px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		padding: 4px;
	  " />
	  <button id="toggle-case" title="Match Case">Aa</button>
	  <button id="toggle-whole" title="Whole Word">â›¶</button>
	  <button id="toggle-regex" title="Regex">*</button>
	  <span id="search-count" style="
		color: white;
		min-width: 30px;
		text-align: center;
		font-size: 13px;
		font-family: Arial, sans-serif;
	  ">No Results</span>
	  <button id="search-prev" title="Previous Match">â†‘</button>
	  <button id="search-next" title="Next Match">â†“</button>
	  <button id="search-close" title="Close Search" style="margin-left: auto;">âœ–</button>
	</div>
			
  <div id="console-output" style="
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 160px;
    background: #111;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    overflow-y: auto;
    padding: 24px 10px 6px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
    <button id="console-minimize" style="
      position: absolute;
      top: 4px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 2px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">â€“</button>
    <div id="console-content"></div>
  </div>

  <div id="console-bar" style="
    display: none;
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 24px;
    background: #222;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
  	<span>Console</span>
    <button id="console-restore" style="
      position: absolute;
      top: 1px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 1px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">+</button>
  </div>
			<div id="main"><div class="line" data-text="package java.io" style="opacity: 0;"><div><span class="kw">package</span> <span class="type-link" data-package="java"><span class="ident">java</span></span><span>.</span><span class="type-link" data-package="java.io"><span class="ident">io</span></span></div><br></div>
<div class="line" data-text=" interface Serializable {" style="opacity: 0;"><div id="current-class"> <span class="kw">interface</span> <span class="ident">Serializable</span> {</div></div>
<div class="line" data-text="}" style="opacity: 0;"><div>}</div></div>
<div class="line" data-text="" style="opacity: 0;"></div></div></div>
			
	<div id="hover-preview" style="
	  position: fixed;
	  overflow: auto;
	  background: #2b2b2b;
	  color: #ddd;
	  border: 1px solid #444;
	  border-radius: 6px;
	  font-size: 13px;
	  padding: 8px;
	  display: none;
	  z-index: 50;
	  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.5);
	  pointer-events: auto;
	">
	  <div id="hover-content"></div>
	</div>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/constantsPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/consoleViewer.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/classPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/searchBarViewer.js"></script>
		  </body>
		  </html>
[Log] <!DOCTYPE html>
		  <html lang="en">
		  <head>
			<meta charset="UTF-8">
			<style>
			  
		#class-search-bar {
		display: flex;
		align-items: center;
		gap: 8px;
		padding: 8px 12px;
		background: #2b2b2b;
		border-bottom: 1px solid #444;
		z-index: 150;
		position: relative;
		}

		#class-search-results {
		position: absolute;
		top: 100%;
		left: 0;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: 100%;
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
		}

			  
	@keyframes pop {
	  0% { transform: scale(1); }
	  50% { transform: scale(1.04); }
	  100% { transform: scale(1.035); }
	}
			  
	body {
	  margin: 0;
	  font-family: Consolas, monospace;
	  background: #1e1e1e;
	  color: rgb(210, 222, 174);
	  padding: 16px;
	}
			  
	#main {
	  cursor: text;
	  flex-grow: 1;
	  height: 100vh;
	  overflow: visible;
	  padding: 16px;
	  box-sizing: border-box;
	}
  
	.kw {
	  color: rgba(76, 156, 222, 0.93);
	  font-weight: bold;
	}
  
	.annotation {
	  color: rgb(238, 223, 154);
	}
  
	.type-link {
	  color: rgba(108, 220, 175, 0.92);
	  cursor: default;
	  text-decoration: none;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link {
	  cursor: pointer;
	  pointer-events: auto;
	}
  
	.ctrl-down .type-link:hover {
	  color: rgba(158, 234, 203, 0.92);
	  text-decoration: underline;
	  display: inline-block;
	  animation: pop 0.17s ease-in-out forwards;
	}
  
	.ident {
	  color: #9cdcfe;
	}
  
	.method-name {
	  color: rgba(231, 229, 151, 0.92);
	}
  
	.arg-name {
	  color: rgba(104, 208, 237, 0.97);
	}
  
	.line {
	  opacity: 0;
	  transition: opacity 0.05s linear;
	}
			  
	.highlight-box {
	  position: absolute;
	  background-color: rgba(255, 160, 80, 0.35);
	  border-radius: 2px;
	}
  
	.highlight-box.current {
	  outline: 1px solid #3794ff;
	  background-color: rgba(55, 148, 255, 0.3);
	  box-shadow: 0 0 4px #3794ff99;
	  z-index: 60;
	}
  
	.debug-overlay-wrapper {
	  position: fixed;
	  pointer-events: none;
	  z-index: 10000;
	}
  
	.debug-overlay-wrapper > div {
	  position: absolute;
	  pointer-events: auto;
	  background: rgba(255, 0, 0, 0.2);
	}
  
	#search-bar button {
	  background-color: rgba(30, 30, 30, 0.27);
	  color: white;
	  border: 1px solid #555;
	  border-radius: 6px;
	  padding: 4px 8px;
	  cursor: pointer;
	  transition: all 0.2s ease-in-out;
	  font-size: 13px;
	  font-family: inherit;
	  user-select: none;
	}
  
	#search-bar button.active {
	  background-color: #094771;
	  border-color: #3794ff;
	  color: white;
	}
			</style>
		  </head>
		  <body>
		    
	<div id="class-search-bar" style="
	  display: flex;
	  align-items: center;
	  gap: 8px;
	  padding: 8px 12px;
	  background: #2b2b2b;
	  border-bottom: 1px solid #444;
	  z-index: 150;
	">
	  <input id="class-search-input" type="text" placeholder="Search classes..." style="
		flex-grow: 1;
		padding: 6px 10px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 6px;
		font-family: inherit;
	  ">
	  <div id="class-search-results" style="
		position: absolute;
		top: 42px;
		left: 12px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		border-radius: 4px;
		display: none;
		max-height: 200px;
		overflow-y: auto;
		width: calc(100% - 24px);
		z-index: 160;
		font-family: monospace;
		font-size: 13px;
	  "></div>
	</div>
			
	<div id="search-bar" style="
	  display: none;
	  position: fixed;
	  top: 8px;
	  right: 8px;
	  z-index: 200;
	  background: #2c2c2c;
	  padding: 4px 8px;
	  border-radius: 4px;
	  display: flex;
	  gap: 4px;
	  align-items: center;
	">
	  <input type="text" id="search-input" placeholder="Search..." style="
		width: 180px;
		background: #1e1e1e;
		color: white;
		border: 1px solid #555;
		padding: 4px;
	  " />
	  <button id="toggle-case" title="Match Case">Aa</button>
	  <button id="toggle-whole" title="Whole Word">â›¶</button>
	  <button id="toggle-regex" title="Regex">*</button>
	  <span id="search-count" style="
		color: white;
		min-width: 30px;
		text-align: center;
		font-size: 13px;
		font-family: Arial, sans-serif;
	  ">No Results</span>
	  <button id="search-prev" title="Previous Match">â†‘</button>
	  <button id="search-next" title="Next Match">â†“</button>
	  <button id="search-close" title="Close Search" style="margin-left: auto;">âœ–</button>
	</div>
			
  <div id="console-output" style="
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 160px;
    background: #111;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    overflow-y: auto;
    padding: 24px 10px 6px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
    <button id="console-minimize" style="
      position: absolute;
      top: 4px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 2px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">â€“</button>
    <div id="console-content"></div>
  </div>

  <div id="console-bar" style="
    display: none;
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 24px;
    background: #222;
    color: #ccc;
    font-family: monospace;
    font-size: 12px;
    border-top: 1px solid #333;
    z-index: 200;
  ">
  	<span>Console</span>
    <button id="console-restore" style="
      position: absolute;
      top: 1px;
      right: 8px;
      background: #333;
      color: #ccc;
      border: 1px solid #555;
      padding: 1px 6px;
      font-size: 11px;
      border-radius: 4px;
      cursor: pointer;
    ">+</button>
  </div>
			<div id="main"><div class="line" data-text="package java.io" style="opacity: 0;"><div><span class="kw">package</span> <span class="type-link" data-package="java"><span class="ident">java</span></span><span>.</span><span class="type-link" data-package="java.io"><span class="ident">io</span></span></div><br></div>
<div class="line" data-text=" class FileInputStream : InputStream, Closeable, AutoCloseable {" style="opacity: 0;"><div id="current-class"> <span class="kw">class</span> <span class="ident">FileInputStream</span> : <span class="type-link" data-type="java.io.InputStream">InputStream</span>, <span class="type-link" data-type="java.io.Closeable">Closeable</span>, <span class="type-link" data-type="java.lang.AutoCloseable">AutoCloseable</span> {</div></div>
<div class="line" data-text="private final val fd: FileDescriptor;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">fd</span>: <span class="type-link" data-type="java.io.FileDescriptor">FileDescriptor</span>;</div></div>
<div class="line" data-text="private final val path: String;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">path</span>: <span class="type-link" data-type="java.lang.String">String</span>;</div></div>
<div class="line" data-text="@Volatileprivate val channel: FileChannel;" style="opacity: 0;"><div style="padding-left: 2em"><span class="annotation">@Volatile</span></div><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">channel</span>: <span class="type-link" data-type="java.nio.channels.FileChannel">FileChannel</span>;</div></div>
<div class="line" data-text="private final val closeLock: Object;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">closeLock</span>: <span class="type-link" data-type="java.lang.Object">Object</span>;</div></div>
<div class="line" data-text="@Volatileprivate val closed: Boolean;" style="opacity: 0;"><div style="padding-left: 2em"><span class="annotation">@Volatile</span></div><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">val</span> <span class="ident">closed</span>: <span class="type-link" data-type="kotlin.Boolean">Boolean</span>;</div></div>
<div class="line" data-text="private external fun open0(arg0: String): Unit;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">external</span> <span class="kw">fun</span> <span class="method-name">open0</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.String">String</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span>;</div></div>
<div class="line" data-text="private fun open(arg0: String): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">open</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.lang.String">String</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun read(): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">read</span>(): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="private external fun read0(): Int;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">external</span> <span class="kw">fun</span> <span class="method-name">read0</span>(): <span class="type-link" data-type="kotlin.Int">Int</span>;</div></div>
<div class="line" data-text="private external fun readBytes(arg0: byte[], arg1: Int, arg2: Int): Int;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">external</span> <span class="kw">fun</span> <span class="method-name">readBytes</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="byte">byte</span>[], <span class="arg-name">arg1</span>: <span class="type-link" data-type="kotlin.Int">Int</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="kotlin.Int">Int</span>;</div></div>
<div class="line" data-text="fun read(arg0: byte[]): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">read</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="byte">byte</span>[]): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun read(arg0: byte[], arg1: Int, arg2: Int): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">read</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="byte">byte</span>[], <span class="arg-name">arg1</span>: <span class="type-link" data-type="kotlin.Int">Int</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun readAllBytes(): byte[] {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">readAllBytes</span>(): <span class="type-link" data-type="byte">byte</span>[] {};</div></div>
<div class="line" data-text="fun readNBytes(arg0: Int): byte[] {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">readNBytes</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="byte">byte</span>[] {};</div></div>
<div class="line" data-text="fun transferTo(arg0: OutputStream): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">transferTo</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="java.io.OutputStream">OutputStream</span>): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="private fun length(): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">length</span>(): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="private external fun length0(): Long;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">external</span> <span class="kw">fun</span> <span class="method-name">length0</span>(): <span class="type-link" data-type="kotlin.Long">Long</span>;</div></div>
<div class="line" data-text="private fun position(): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">fun</span> <span class="method-name">position</span>(): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="private external fun position0(): Long;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">external</span> <span class="kw">fun</span> <span class="method-name">position0</span>(): <span class="type-link" data-type="kotlin.Long">Long</span>;</div></div>
<div class="line" data-text="fun skip(arg0: Long): Long {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">skip</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Long">Long</span>): <span class="type-link" data-type="kotlin.Long">Long</span> {};</div></div>
<div class="line" data-text="private external fun skip0(arg0: Long): Long;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">external</span> <span class="kw">fun</span> <span class="method-name">skip0</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Long">Long</span>): <span class="type-link" data-type="kotlin.Long">Long</span>;</div></div>
<div class="line" data-text="fun available(): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">available</span>(): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="private external fun available0(): Int;" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">private</span> <span class="kw">external</span> <span class="kw">fun</span> <span class="method-name">available0</span>(): <span class="type-link" data-type="kotlin.Int">Int</span>;</div></div>
<div class="line" data-text="fun close(): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">close</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="final fun getFD(): FileDescriptor {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">final</span> <span class="kw">fun</span> <span class="method-name">getFD</span>(): <span class="type-link" data-type="java.io.FileDescriptor">FileDescriptor</span> {};</div></div>
<div class="line" data-text="fun getChannel(): FileChannel {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">getChannel</span>(): <span class="type-link" data-type="java.nio.channels.FileChannel">FileChannel</span> {};</div></div>
<div class="line" data-text="fun readNBytes(arg0: byte[], arg1: Int, arg2: Int): Int {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">readNBytes</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="byte">byte</span>[], <span class="arg-name">arg1</span>: <span class="type-link" data-type="kotlin.Int">Int</span>, <span class="arg-name">arg2</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="kotlin.Int">Int</span> {};</div></div>
<div class="line" data-text="fun skipNBytes(arg0: Long): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">skipNBytes</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Long">Long</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun mark(arg0: Int): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">mark</span>(<span class="arg-name">arg0</span>: <span class="type-link" data-type="kotlin.Int">Int</span>): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun reset(): Unit {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">reset</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span> {};</div></div>
<div class="line" data-text="fun markSupported(): Boolean {};" style="opacity: 0;"><div style="padding-left: 2em"><span class="kw">fun</span> <span class="method-name">markSupported</span>(): <span class="type-link" data-type="kotlin.Boolean">Boolean</span> {};</div></div>
<div class="line" data-text="companion object {" style="opacity: 0;"><br><div style="padding-left: 2em"><span class="kw">companion object</span> {</div></div>
<div class="line" data-text="@JvmStaticprivate final val DEFAULT_BUFFER_SIZE: Int;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">final</span> <span class="kw">val</span> <span class="ident">DEFAULT_BUFFER_SIZE</span>: <span class="type-link" data-type="kotlin.Int">Int</span>;</div></div>
<div class="line" data-text="@JvmStaticprivate external fun initIDs(): Unit;" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">private</span> <span class="kw">external</span> <span class="kw">fun</span> <span class="method-name">initIDs</span>(): <span class="type-link" data-type="kotlin.Unit">Unit</span>;</div></div>
<div class="line" data-text="@JvmStaticfun nullInputStream(): InputStream {};" style="opacity: 0;"><div style="padding-left: 4em"><span class="annotation">@JvmStatic</span></div><div style="padding-left: 4em"><span class="kw">fun</span> <span class="method-name">nullInputStream</span>(): <span class="type-link" data-type="java.io.InputStream">InputStream</span> {};</div></div>
<div class="line" data-text="}" style="opacity: 0;"><div style="padding-left: 2em">}</div></div>
<div class="line" data-text="}" style="opacity: 0;"><div>}</div></div>
<div class="line" data-text="" style="opacity: 0;"></div></div></div>
			
	<div id="hover-preview" style="
	  position: fixed;
	  overflow: auto;
	  background: #2b2b2b;
	  color: #ddd;
	  border: 1px solid #444;
	  border-radius: 6px;
	  font-size: 13px;
	  padding: 8px;
	  display: none;
	  z-index: 50;
	  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.5);
	  pointer-events: auto;
	">
	  <div id="hover-content"></div>
	</div>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/constantsPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/consoleViewer.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/classPreview.js"></script>
			<script src="https://file%2B.vscode-resource.vscode-cdn.net/c%3A/Users/subli/kotlinscript/dist/searchBarViewer.js"></script>
		  </body>
		  </html>
